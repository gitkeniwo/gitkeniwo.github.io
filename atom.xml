<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>The Last Day of Summer</title>
  
  <subtitle>2020s retrospected.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gitkeniwo.github.io/"/>
  <updated>2023-03-25T13:59:32.203Z</updated>
  <id>https://gitkeniwo.github.io/</id>
  
  <author>
    <name>ケニヲ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>潮がさしてくる時</title>
    <link href="https://gitkeniwo.github.io/2023-03-14-shiosai/"/>
    <id>https://gitkeniwo.github.io/2023-03-14-shiosai/</id>
    <published>2023-03-14T15:29:36.000Z</published>
    <updated>2023-03-25T13:59:32.203Z</updated>
    
    <content type="html"><![CDATA[<p>MacOS Monterey 自带的『スーパー大辞林』辞书对『潮騒』一词的解释为</p><blockquote><p>潮がさしてくる時の波の音。寄せ来る波が立てる音。</p></blockquote><p>潮汐来临时的海浪声。这是小说中田园牧歌般的小岛「歌岛」附近海浪发出的美妙的声响。</p><p>『潮騒』的阅读体验很奇妙：无论是按照中文理解标题里和式词语带来的诡谲怪异感，还是对Mishima老师的生平事迹、作品风格的略有所闻，都让人对下一页未知的故事情节产生一种类似于在台风降临前想要紧闭门窗的戒备感。</p><p>当你读完这本小册子后最大的发现就是，这场阴沉狂暴的飓风似乎始终没有到来。唯二两次让心灵雷达开始发出警报的情节，分别是初江躲避安夫的强暴和新治在港口固定船只。就在你以为三岛又将对主人公施加一种残缺的美感的时候，突然就变得雨过天晴了，一个犯罪未遂的「蝈楠」如同蔫掉的茄子一样认错帮女主挑水，主人公在漆黑一团的台风夜里轻松搞定一艘大船。</p><p>事实上，『スーパー大辞林』还收录了作为三岛书名的『潮騒』一词，释义为</p><blockquote><p>小説。三島由紀夫作。1954年（昭和29）刊。太陽あふれる歌島の，若く健康な肉体と精神を持つ男女の恋物語を，ギリシャ的様式美のうちに描く。</p></blockquote><p>「ギリシャ的様式美」，说的其实是『潮騒』的灵感来源古希腊小说「<a href="https://en.wikipedia.org/wiki/Daphnis_and_Chloe" target="_blank" rel="noopener">Daphnis and Chloe</a>」。</p><blockquote><p>Daphnis and Chloe is the story of a boy (Daphnis) and a girl (Chloe), each of whom is abandoned at birth along with some identifying tokens. A goatherd named Lamon discovers Daphnis, and a shepherd called Dryas finds Chloe. Each decides to raise the child he finds as his own. Daphnis and Chloe grow up together, herding the flocks for their foster parents. They fall in love but, being naive, do not understand what is happening to them. Philetas, a wise old cowherd, explains to them what love is and tells them that the only cure is kissing.[2] They do this. Eventually, Lycaenion, a woman from the city, educates Daphnis in love-making. Daphnis, however, decides not to test his newly acquired skill on Chloe, because Lycaenion tells Daphnis that Chloe “will scream and cry and lie bleeding heavily [as if murdered].”[2] Throughout the book, Chloe is courted by suitors, two of whom (Dorcon and Lampis) attempt with varying degrees of success to abduct her. She is also carried off by raiders from a nearby city and saved by the intervention of the god Pan. Meanwhile, Daphnis falls into a pit, gets beaten up, is abducted by pirates, and is very nearly raped by a drunkard. In the end, after being recognised by their birth parents, Daphnis and Chloe get married and live out their bucolic lives in the country.[2][3]</p></blockquote><p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Charles_Gleyre_-_Daphnis_et_Chloe_revenant_de_la_montagne.jpg/440px-Charles_Gleyre_-_Daphnis_et_Chloe_revenant_de_la_montagne.jpg" width="30%"></p><p style="text-align:center">Daphnis and Chloe, by Marc Gabriel Charles Gleyre, circa 1850</p><p>这篇作品成文于1953年，届时三岛29岁，在那前一年，他去参观了希腊并受到了「达夫尼斯和克洛伊」的启发创作了这个小故事。「潮骚」本身即代表了一种彻头彻脑的古典主义。关于这一点，三岛其实在扉页就有所表示：</p><blockquote><p>恶意无法像<br>善意那样走远路</p></blockquote><p>在尾页，他又补上了这样几句：</p><blockquote><p>放弃物质文明的堕落<br>找回古人淳朴坚忍的美德与精神<br>成为真的勇士</p></blockquote><p>对于作品本身，我想大多数人除了感叹两句所谓的「纯粹」之外，再也没有别的太多高见，甚至文中保留着昭和早年对女性的描写风格还在豆瓣上<a href="https://book.douban.com/review/13508311/" target="_blank" rel="noopener">引起不少当代读者的反感</a>；与这种真诚、野朴、纯粹的乡间牧歌式的”happily ever after”比起来，各式各样的悲剧才反应了现代社会的常态，悲剧在诞生的的那一刻就更具永恒性。</p><p>因此，潮骚这部小说的正确打开方式是应该囊括进三岛老师作品集里作比较阅读的。所谓「三岛式美学」，就是金阁寺里面那种求之不得寤寐思服的绝美与噼里啪啦毁于一旦之间的巨大反差，是一种称为死亡美学的oxymoron. 但是，如果你仅仅是看到一种疯癫的猎奇这一点，那就跟墙内很多爱好探究「变态」心理的丑奴儿没什么区别了。</p><p>事实上，潮骚与所有其他可称为「三岛式美学」的作品是一脉相承的，它们的精神内核都是围绕着三岛他佬自始至终都在推崇的「古人淳朴坚忍的美德与精神」，这种古典主义精神田园牧歌的风格只不过是在理想与现实的洪流之间自然诞生的两种表现形式。换句话说，他佬通过描写这部「若く健康な肉体と精神を持つ男女の恋物語」向日本战后一代展现了他佬的理想主义：在远离现代都市、不受任何modernity问题侵扰的歌岛上，陈德文老师序言里写的「这里没有现代都市居民的困惑和不安，有的只是明朗的阳光、喧骚的海浪、闪亮的灯塔、扑鼻的潮腥，以及往来的渔船、欢笑的男女」，天生万物以养人(没有后半句)。</p><p>作为小岛的反面，灯塔长家的女儿『去东京的大学接受「教养」后』，变得「总是表情阴沉，一味考虑自己为何不美」；男二小反派安夫受物质文化侵扰，以「向东京的女大学生显示自己能说标准语」为荣，在从商经历中变得狂躁妒忌；弟弟阿宏旅行中花钱大手大脚开始寄快信，旅行回来后「只知道拼命玩乐」，与小伙伴模仿起在京都看的西部片，做一些危险的游戏；冲绳岛的运天港被美军登陆，岛上汽车轰鸣声终日不绝，美军营房像是「风景画上丑陋的斑点」… 作品中，三岛老师对歌岛的自然美是有很明显的倾向的。</p><blockquote><p>千代子一心想着东京。即使在这样的暴风雨的日子里，汽车照旧来往疾驰，电梯依然上下不停，电车还是拥挤不堪，她眷恋着这样的东京。在那里，「自然」一应被征服了，剩余的自然的威力就是敌人。然而，在这个海岛上，人们视自然为友人，一味偏袒自然。</p></blockquote><p>这与共产国际企图用强权构建的原子化乌托邦截然相反，三岛老师的歌岛是字面意义的原始丰饶，是脱胎于古典戏剧的现代文明堕落的反面，尽管此书在我看来某种意义上可以说等同于他佬政治理想的一种「共产党宣言」。</p><p><img src="http://5b0988e595225.cdn.sohucs.com/images/20180625/63f9bbc079b643febbbdb86ede5677de.jpeg" width="40%"></p><p style="text-align:center">三岛老师致敬Guido Reni的「<a href="https://en.wikipedia.org/wiki/Saint_Sebastian_(Reni,_Rome)" target="_blank" rel="noopener">Saint Sebastian</a>」, circa 1615</p><p>这种纯粹的唯美主义，与他佬最后在陆上自卫队阳台上切腹自尽的结局放在一起看，你才会幡然醒悟：这便是行为艺术的极致了，是一种绝望的美感。</p><p>潮骚中的政治愿景，随着全共斗、三岛和川端康成一并埋葬在了那段岁月，其余「苟活者」则背上了一辈子的「青春残酷物语」印记——70年代之后的日本已然没有理想主义者的土壤了。从自由民权运动、玄洋社的兴起到泛亚主义的失败，从和洋折衷到全盘西化的现代社会，回绕在日本人血脉中的，充满复古之思的潮骚之声如今已不复存在。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;MacOS Monterey 自带的『スーパー大辞林』辞书对『潮騒』一词的解释为&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;潮がさしてくる時の波の音。寄せ来る波が立てる音。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;潮汐来临时的海浪声。这是小说中田园牧歌般的小岛「歌岛」附近海
      
    
    </summary>
    
    
      <category term="The Library of Babel" scheme="https://gitkeniwo.github.io/categories/The-Library-of-Babel/"/>
    
      <category term="Books" scheme="https://gitkeniwo.github.io/categories/The-Library-of-Babel/Books/"/>
    
    
      <category term="mishimayukio" scheme="https://gitkeniwo.github.io/tags/mishimayukio/"/>
    
      <category term="japan" scheme="https://gitkeniwo.github.io/tags/japan/"/>
    
  </entry>
  
  <entry>
    <title>The Internet’s Richest Fitness Resource Is a Site from 1999</title>
    <link href="https://gitkeniwo.github.io/2023-03-11-Internets-Richest-Fitness-Resource/"/>
    <id>https://gitkeniwo.github.io/2023-03-11-Internets-Richest-Fitness-Resource/</id>
    <published>2023-03-11T17:29:08.000Z</published>
    <updated>2023-03-12T00:39:12.268Z</updated>
    
    <content type="html"><![CDATA[<p>逛HN时偶然看见了这篇<a href="https://news.ycombinator.com/item?id=35080836" target="_blank" rel="noopener">The Internet’s Richest Fitness Resource Is a Site from 1999</a>，讲<a href="https://www.newyorker.com/culture/rabbit-holes/the-internets-richest-fitness-resource-is-a-site-from-1999" target="_blank" rel="noopener">New Yorker 推荐了</a>一个fitness网站: <a href="exrx.net">exrx.net</a></p><p>这网站神奇的是，它不仅从1999年建站后就没怎么变过，而且拥有巨量的fitness信息——new yorker文章里用的是”physiological compendium”一词.</p><p>ExRx网站是没有javascript的。文章作者大赞了其简洁而不失内容排布的风格. </p><blockquote><p>ExRx makes its organizational logic plain. Its pages adopt the structure of unordered lists—uniform and sturdy…unlike elsewhere on the modern Internet, on ExRx you are never lost.<br>the site’s plain face lends it a certain authority. In a fitness ecosystem dominated by new- and old-school flash, from personal trainers on the hard sell to influencers with soft power, exrx.net treats me like an adult. If Instagram Reels and TikTok videos are the solicitous pusher on commission, ExRx is a librarian—or, better yet, the library itself.</p></blockquote><p>这种unordered list的布局，让我想到了两个python作图库matplotlib和plotly的gallery</p><ul><li><a href="https://plotly.com/python/" target="_blank" rel="noopener">https://plotly.com/python/</a></li><li><a href="https://matplotlib.org/stable/gallery/index.html" target="_blank" rel="noopener">https://matplotlib.org/stable/gallery/index.html</a></li></ul><p>甚至sklearn 的doc也有种类似的美感. 尽管它们的nav肯定是javascript写的</p><ul><li><a href="https://scikit-learn.org/stable/" target="_blank" rel="noopener">https://scikit-learn.org/stable/</a></li></ul><p>With that being said, <a href="http://nil.csail.mit.edu/6.824/2022/schedule.html" target="_blank" rel="noopener">MIT 6.824 (Distributed System)</a>的课程主页也是纯html的样子. 记得以前 <a href="https://www.cs.cmu.edu/~213/" target="_blank" rel="noopener">CMU 15-213 (CSAPP)</a>和 <a href="https://cs61a.org/" target="_blank" rel="noopener">Berkeley CS 61A</a>的主页也都是纯html，出于好奇去翻了下，发现现在都改版了很多，不过一眼看上去还是保留了很多prejavascript时代的设计风格. CS和AI领域很多大牛的主页都是没有css的，有时候最简洁的才是最令人震撼的.</p><p>像<a href="https://terrytao.wordpress.com/" target="_blank" rel="noopener">Terence Tao这种</a>接近复古 (但实际是wordpress，应该是伪复古) 的主页也是一看就很学术，没话说了.</p><p>窝这种抖机灵 + horribly buggy 的 Node.js blog想必位于鄙视链最底端……</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;逛HN时偶然看见了这篇&lt;a href=&quot;https://news.ycombinator.com/item?id=35080836&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;The Internet’s Richest Fitness Resource
      
    
    </summary>
    
    
      <category term="Tech" scheme="https://gitkeniwo.github.io/categories/Tech/"/>
    
    
      <category term="blogging" scheme="https://gitkeniwo.github.io/tags/blogging/"/>
    
      <category term="hn" scheme="https://gitkeniwo.github.io/tags/hn/"/>
    
      <category term="newyorker" scheme="https://gitkeniwo.github.io/tags/newyorker/"/>
    
  </entry>
  
  <entry>
    <title>Transatlanticism</title>
    <link href="https://gitkeniwo.github.io/2023-03-11-transatlanticism/"/>
    <id>https://gitkeniwo.github.io/2023-03-11-transatlanticism/</id>
    <published>2023-03-11T08:06:00.000Z</published>
    <updated>2023-03-25T14:00:02.513Z</updated>
    
    <content type="html"><![CDATA[<p>周五真的好忙呐，从一大早坐到晚上六点半，忘了带OV卡只能冒雨回家拿，去<a href="https://goo.gl/maps/fYZu4d1mPbCYhL6n6" target="_blank" rel="noopener">蒂尔堡</a>看<a href="https://www.013.nl/programma/7340/death-cab-for-cutie" target="_blank" rel="noopener">live</a>迟到了一个小时。</p><p>欧洲的Livehouse跟国内不一样的是观众的demography，看到后面后排全是老爷爷老奶奶端着酒杯chill，Fridays Huh！</p><p>所幸<a href="https://en.wikipedia.org/wiki/Ben_Gibbard" target="_blank" rel="noopener">Ben老师</a>这么可爱很会聊天，到十点过的时候他说“Too bad everyone, I hate to say this but this is our last song”, 当时似乎是在表演 <em>Soul Meets Body</em>，而且他真的演完收拾吉他就谢幕下台了，此刻我的心情是「？？？」「怎么我就是来听<a href="https://open.spotify.com/track/0DoACS30GwIY6qaFjCMMUz?si=4145df544f7a488f" target="_blank" rel="noopener">transatlanticism</a>的怎么没听到就结束了？」。很显然台下的观众比我有经验，全都按兵不动，过了一分钟左右，Ben 老师果然又带着全队回来了 “You people are so nice!” 我们还得再演出点什么东西：） （什么套路hhh笑了 </p><p>最后压轴曲目还是Death Cab for Cutie的经典《横贯大西洋主义(Transatlanticism)》 七分钟的长度，情绪逐渐积累到巅峰.</p><p><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/A9BEEDBF-DCBB-4009-8385-BFD1BBC411AB_1_201_a.jpeg" alt=""></p><p>回E村错过了一班车，在0度的站台上等了半小时，当晚居然还有个Statistical learning theory的due. 还好组员给力.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;周五真的好忙呐，从一大早坐到晚上六点半，忘了带OV卡只能冒雨回家拿，去&lt;a href=&quot;https://goo.gl/maps/fYZu4d1mPbCYhL6n6&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;蒂尔堡&lt;/a&gt;看&lt;a href=&quot;https:
      
    
    </summary>
    
    
      <category term="The Library of Babel" scheme="https://gitkeniwo.github.io/categories/The-Library-of-Babel/"/>
    
      <category term="Music" scheme="https://gitkeniwo.github.io/categories/The-Library-of-Babel/Music/"/>
    
    
      <category term="indierock" scheme="https://gitkeniwo.github.io/tags/indierock/"/>
    
      <category term="live" scheme="https://gitkeniwo.github.io/tags/live/"/>
    
      <category term="tilburg" scheme="https://gitkeniwo.github.io/tags/tilburg/"/>
    
  </entry>
  
  <entry>
    <title>2012 + 5x, where x = 3,4,5...</title>
    <link href="https://gitkeniwo.github.io/2023-03-10-2012-5x/"/>
    <id>https://gitkeniwo.github.io/2023-03-10-2012-5x/</id>
    <published>2023-03-10T04:46:10.000Z</published>
    <updated>2023-03-25T14:27:48.652Z</updated>
    
    <content type="html"><![CDATA[<p>今天这件<a href="https://www.bbc.com/news/world-asia-china-64911512" target="_blank" rel="noopener">能写进史册的事</a>，墙内虽少不了铺天盖地的宣传，但要么都是控评（机器人写新话赞美大洋国），要么都是想尽办法阉割自己指桑骂槐。</p><p>这其中看到的一个比较有创意的是某高校论坛每日一题栏目当天出了个题目是 <script type="math/tex">\lim\limits_{n \rightarrow \infty} (2012 + 5x)</script></p><p>大洋国建立了史上前所未有的<a href="https://en.wikipedia.org/wiki/Panopticon" target="_blank" rel="noopener">全景监狱</a>，在什么学科都可能被「批倒批臭」的预期内，最好提前用尽一切办法来解构它。</p><p>不过是挣扎罢了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天这件&lt;a href=&quot;https://www.bbc.com/news/world-asia-china-64911512&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;能写进史册的事&lt;/a&gt;，墙内虽少不了铺天盖地的宣传，但要么都是控评（机器人写新话赞
      
    
    </summary>
    
    
      <category term="Tweets" scheme="https://gitkeniwo.github.io/categories/Tweets/"/>
    
      <category term="Milestones" scheme="https://gitkeniwo.github.io/categories/Tweets/Milestones/"/>
    
    
      <category term="china" scheme="https://gitkeniwo.github.io/tags/china/"/>
    
  </entry>
  
  <entry>
    <title>在厄勒海峡两岸</title>
    <link href="https://gitkeniwo.github.io/2023-02-24-oresund/"/>
    <id>https://gitkeniwo.github.io/2023-02-24-oresund/</id>
    <published>2023-02-24T15:57:03.000Z</published>
    <updated>2023-03-11T14:44:53.119Z</updated>
    
    <content type="html"><![CDATA[<p>Øresund, also known as <em>the Sound</em> in English, 它如同波罗的海的咽喉。从København出发一路向北，到达海峡的北口，这里左岸是丹麦城市Helsingør, 右岸是瑞典城市Helsinborg.</p><p><img src="https://pixelfed-tokyo.sgp1.digitaloceanspaces.com/public/m/_v2/447652537559146183/0fca8ea69-e1c06b/FAnb3IhVwEUr/Z2RKq2W9ArPuTtOC7yepS8pm7ZOheVCx1IWkNGJX.jpg" width="50%"></p><p>从阿马林堡宫广场遥望腓特烈教堂。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Øresund, also known as &lt;em&gt;the Sound&lt;/em&gt; in English, 它如同波罗的海的咽喉。从København出发一路向北，到达海峡的北口，这里左岸是丹麦城市Helsingør, 右岸是瑞典城市Helsinborg.&lt;/p&gt;
&lt;p&gt;&lt;
      
    
    </summary>
    
    
      <category term="Tweets" scheme="https://gitkeniwo.github.io/categories/Tweets/"/>
    
    
      <category term="photo" scheme="https://gitkeniwo.github.io/tags/photo/"/>
    
      <category term="travel" scheme="https://gitkeniwo.github.io/tags/travel/"/>
    
  </entry>
  
  <entry>
    <title>Rainbowspotting</title>
    <link href="https://gitkeniwo.github.io/2023-02-19-first-time-seeing-a-rainbow-in-the-nl/"/>
    <id>https://gitkeniwo.github.io/2023-02-19-first-time-seeing-a-rainbow-in-the-nl/</id>
    <published>2023-02-19T09:53:29.000Z</published>
    <updated>2023-02-19T19:37:56.013Z</updated>
    
    <content type="html"><![CDATA[<p>尼德兰时间2月19日17点49分，我正在油管百无聊赖的消磨这个周日的下午时光，刚刚切到<a href="https://youtu.be/SnXkhkEvNIM" target="_blank" rel="noopener">Goose house翻唱的光るなら</a>，MacBook扬声器外放着<em>雨上がりの虹も／凜と咲いた花も</em>这一句歌词时，准备起身出门购置杂货，向窗外不经意的瞄了一眼，发现目之所及远处的房屋之上出现了半截彩虹的余晖。</p><p>这是我第一次在尼德兰见到彩虹。他就像即将消融的远古圣兽的遗址，身体的绝大多数都化作光点无影无踪，只剩下最后的半只腿无言的矗立在天际。在Noord-brabant地区典型的低饱和度的房屋丛里，他绚丽而沧桑的存在仿佛带着某种神性的威严。</p><p>是日日落时间为17点59分，通过那苍蓝的天空下稀疏的光影和渐浓的暮色，我判断出这会是一场迅速的落幕，我来不及披上外套，习惯性的滑出手机相机，对着落地窗外的景色咔嚓了三声。iPhone在弱光环境下的噪点让人扫兴，我又飞快的从架子上掏出相机，费力的打开落地窗的那一瞬间，屋子外的环境声的洪流向这一道小小的缝隙里涌来——<a href="https://www.google.com/search?q=fietspad&amp;newwindow=1&amp;source=lnms&amp;tbm=isch&amp;sa=X" target="_blank" rel="noopener">fietspad</a>上骑过的嘎吱嘎吱的自行车，远处不停在平房楼顶和半空中盘旋的黑色的鸟群，礼拜日和<a href="https://indebuurt.nl/eindhoven/carnaval/lampegatse-optocht-2023-zo-zag-het-eruit~258574/" target="_blank" rel="noopener">嘉年华</a>的把持下市中心隐约传过来的嘈杂人声——我感到一种虚妄的真实。</p><p>公用的阳台上堆满了枯槁的落叶和楼上扔下来的香烟纸盒，风一吹便发出相互挤压碾碎着的悉悉索索的声音，踩着隔离栏的台阶，将微单举到头顶，直到适马18-50mm的短胖镜头能够越过布满水垢的玻璃防风屏，按下那个快门键便可记录下眼前这个稍纵即逝的霎那——可惜已经太迟了：远处舞台的幕布已经降落一半，黄昏的背景也黯淡下来，一把斜阳洒在附近的公寓楼房上，斑斓的色彩已经大部褪去，只余下一抹无可辨别的橙黄了。我知道他已经不再属于我们这座小城，又转而奔波去世界上的其他角落了。时间逼近六点，深湛的苍穹逐渐抹平所有余存的暮色，Eindhoven也转到了地球的暗面，天边的层云还因残留在大气层的辉光散射发出低沉的蓝光，联想到今日在twitter上看到<a href="https://twitter.com/culturaltutor/status/1627175680638164993" target="_blank" rel="noopener">The Cultural Tutor分享的云的taxonomy</a>，这种云便该是<a href="https://en.wikipedia.org/wiki/Stratus_nebulosus" target="_blank" rel="noopener">Stratus nebulosus</a>了。</p><p><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_3892.jpeg" width="50%"></p><p>上图为手机(<code>iPhone 12mini Wide Camera — 26 mm ƒ1.6</code>) 抓拍, 下图为相机(<code>Sony a6300 Sigma 18-50mm F2.8</code>)拍下的最终时刻</p><p><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/_DSC0002%202.JPG" width="100%"></p><p>眼前消逝的七彩如同在天边的一场短暂演出，我不由得想到了同样具有七彩的月之暗面里的<a href="https://youtu.be/T13se_2A7c8" target="_blank" rel="noopener">The great gig in the sky</a></p><iframe width="50%" align="middle" src="https://www.youtube.com/embed/T13se_2A7c8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen ></iframe><blockquote><p>Why should I be frightened of dying<br>There’s no reason for it<br>You’ve gotta go sometime<br>I never said I was frightened of dying</p></blockquote><p>念白过后，是三分半钟时长的Clare Torry震撼灵魂的嘶吼。</p><p>然后又想到，昨晚在朋友家的火锅局，也有人喝醉了(省略一万字前情提要)，痛苦地捶桌大叫着</p><blockquote><p>可是死不是生的对立面啊</p></blockquote><p>怎样才能挽留身边消逝的事物和人呢？用照片，用影像，用十万分之一采样率录制的数字音频，用笔迹、便签、明信片，还是不能永远更改的区块链？我死后，这个博客能留存十年以上的可能性近乎零，就连「冥王星博物馆」也只能粗浅的保存一些信息到十亿年。作为「生」的这一部分的「死」就像宇宙中无处不在的<a href="https://en.wikipedia.org/wiki/Dark_matter" target="_blank" rel="noopener">暗物质</a>，人类渴望用各种媒介记录下他，来观测他，避免忘记他，但说不定永远也无法触碰、无从知晓。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;尼德兰时间2月19日17点49分，我正在油管百无聊赖的消磨这个周日的下午时光，刚刚切到&lt;a href=&quot;https://youtu.be/SnXkhkEvNIM&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Goose house翻唱的光るなら&lt;/a&gt;，M
      
    
    </summary>
    
    
      <category term="Tweets" scheme="https://gitkeniwo.github.io/categories/Tweets/"/>
    
    
      <category term="photo" scheme="https://gitkeniwo.github.io/tags/photo/"/>
    
  </entry>
  
  <entry>
    <title>&lt;div&gt; 挡住链接的处理方式，z-index属性</title>
    <link href="https://gitkeniwo.github.io/2023-02-09-div-blocks-links/"/>
    <id>https://gitkeniwo.github.io/2023-02-09-div-blocks-links/</id>
    <published>2023-02-09T16:48:03.000Z</published>
    <updated>2023-02-14T12:15:10.844Z</updated>
    
    <content type="html"><![CDATA[<p>突然发现<a href="http://gitkeniwo.github.io/2022-06-21-dutch-grammar/">有篇博文</a>中的一个链接无法点击，inspect之后发现是被一个id为<code>header-post</code>的div挡住了。参见下图中「弗拉芒大区」右侧的「Vlaams Gewest」，因为被挡住了点不到。<code>header-post</code>应该是存放导航栏nav和目录toc的容器，在页面顶端nav自动出现时适应为nav的宽和目录的高，挡住一大片东西。<br><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/Xnip2023-02-10_00-49-30.jpg" alt=""></p><p>去原主题的repo搜索了一圈issue关键词，没看到有人提。然后去原作者的<a href="https://probberechts.github.io/hexo-theme-cactus/cactus-dark/public/2016/11/01/An-overview-of-all-Markdown-elements/" target="_blank" rel="noopener">demo网页</a>发现他的这个网页也有同样的问题+_+||, 只是因为他要么因为nav放的链接少，要么nav与目录不共存，所以这个问题不明显。<del>这个主题毛病真的好多</del><br><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/Xnip2023-02-10_01-07-59.jpg" alt=""></p><p>最后自己在<code>#header-post</code>这个selector下探索出来的解决方式是将<code>action_desktop.styl</code>中对应id<code>#header-post</code>的<code>z-index</code>改为<code>auto</code>。关于<code>z-index</code>属性，可参见<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/z-index" target="_blank" rel="noopener">mdn官网的展示小组件</a>，大概类似于置于顶层/底层，直观来说，这样改了后那个div就缩到底层去了，你自然就能点得到位于文章主干的link了。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#header-post</span></span><br><span class="line">  <span class="selector-tag">position</span>: <span class="selector-tag">fixed</span></span><br><span class="line">  <span class="selector-tag">top</span>: 2<span class="selector-tag">rem</span></span><br><span class="line">  <span class="selector-tag">right</span>: 0</span><br><span class="line">  <span class="selector-tag">display</span>: <span class="selector-tag">inline-block</span></span><br><span class="line">  <span class="selector-tag">float</span>: <span class="selector-tag">right</span></span><br><span class="line">  <span class="selector-tag">z-index</span>: <span class="selector-tag">auto</span></span><br></pre></td></tr></table></figure><p><strong>UPDATE</strong> 坏消息是这样做了后，你没法点到nav伸到主干里的那几个link了。。</p><ul><li>改进思路1：放弃顶部nav，nav回归底部；</li><li>改进思路2: 试试能不能把nav的div z-index到顶部。</li></ul><p><strong>思路2</strong> 将 <code>nav</code> 对应的 <code>#menu</code> 的z-index设为100<br>想要将 文章content上方的box放到后面，即 <code>style.styl</code>中 <code>*, *:before, *:after</code> 的z-index设为-1<br><img src='https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/2023-02-10%2015.50.02.jpg' width='500'></img><br>最后发现行不通，因为z-index是子代继承父代。nav为 div的子代，它的z index被锚定在div附近，你不可能在div和nav之间插入div家系里以外的元素。</p><ul><li>改进思路2*，在layout中，把nav移出<code>header-post</code>.（unconfirmed）</li></ul><p><strong>最后解决方案：思路1</strong>  将作者名设置为回到主页的超链接，并且当目录toc有子元素<code>#toc-item</code>时隐藏nav。将<code>main.js</code>中对应代码改为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add a scroll listener to the menu to hide/show the navigation links.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">if</span> (menu.length) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// 隐藏导航栏 hide nav when have toc</span></span><br><span class="line">  <span class="keyword">if</span> ($(<span class="string">".toc-item"</span>).length) &#123;</span><br><span class="line">    nav.hide();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">  $(<span class="built_in">window</span>).on(<span class="string">"scroll"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> topDistance = menu.offset().top;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// hide only the navigation links on desktop</span></span><br><span class="line">    <span class="keyword">if</span> (!nav.is(<span class="string">":visible"</span>) &amp;&amp; topDistance &lt; <span class="number">150</span>) &#123;</span><br><span class="line">      nav.show();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (nav.is(<span class="string">":visible"</span>) &amp;&amp; topDistance &gt; <span class="number">50</span>) &#123;</span><br><span class="line">      nav.hide();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// on tablet, hide the navigation icon as well and show a "scroll to top</span></span><br><span class="line">    <span class="comment">// icon" instead</span></span><br><span class="line">    <span class="keyword">if</span> ( ! $( <span class="string">"#menu-icon"</span> ).is(<span class="string">":visible"</span>) &amp;&amp; topDistance &lt; <span class="number">50</span> ) &#123;</span><br><span class="line">      $(<span class="string">"#menu-icon-tablet"</span>).show();</span><br><span class="line">      $(<span class="string">"#top-icon-tablet"</span>).hide();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (! $( <span class="string">"#menu-icon"</span> ).is(<span class="string">":visible"</span>) &amp;&amp; topDistance &gt; <span class="number">100</span>) &#123;</span><br><span class="line">      $(<span class="string">"#menu-icon-tablet"</span>).hide();</span><br><span class="line">      $(<span class="string">"#top-icon-tablet"</span>).show();</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;); </span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>P.S.</strong> 注意这个cactus主题md的metadata里categories要统一大小写，不然会导致分类的categories page解析错误出现混乱。</p><p><img src='https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/Xnip2023-02-10_01-28-11.jpg' width='300'></img></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;突然发现&lt;a href=&quot;http://gitkeniwo.github.io/2022-06-21-dutch-grammar/&quot;&gt;有篇博文&lt;/a&gt;中的一个链接无法点击，inspect之后发现是被一个id为&lt;code&gt;header-post&lt;/code&gt;的div挡住了。参
      
    
    </summary>
    
    
      <category term="Blogging" scheme="https://gitkeniwo.github.io/categories/Blogging/"/>
    
    
      <category term="blogging" scheme="https://gitkeniwo.github.io/tags/blogging/"/>
    
      <category term="css" scheme="https://gitkeniwo.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>fly.io 的使用体验 &amp; Self-host Memos卡片笔记</title>
    <link href="https://gitkeniwo.github.io/2023-02-08-fly-io-tutorial/"/>
    <id>https://gitkeniwo.github.io/2023-02-08-fly-io-tutorial/</id>
    <published>2023-02-08T14:27:59.000Z</published>
    <updated>2023-03-11T14:53:37.559Z</updated>
    
    <content type="html"><![CDATA[<p>fly.io 类似于heroku，能帮忙托管运行App，是一种<a href="https://zh.wikipedia.org/wiki/平台即服务" target="_blank" rel="noopener">PaaS</a>服务。昨天我在尝试自搭(<a href="https://yunohost.org/oc/selfhosting" target="_blank" rel="noopener">self host</a>) 一款名为<a href="https://github.com/usememos/memos" target="_blank" rel="noopener">memos</a>的基于web的<a href="https://youtu.be/rOSZOCoqOo8" target="_blank" rel="noopener">zettelkasten</a>笔记应用时，在<a href="https://github.com/hu3rror/memos-on-fly" target="_blank" rel="noopener">官方推荐的部署方式</a>中发现了这个平台。</p><p>简单来说，fly.io能帮你快速部署一款app。部署时，你需要安装它的cli工具<code>flyctl</code>，然后利用它生成(<code>flyctl launch</code>)一份部署的配置文件<code>fly.toml</code>。在这份文件中，你只需填入docker image的地址(一般在<a href="https://hub.docker.com/" target="_blank" rel="noopener">docker hub</a>里)、litestream备份信息和fly volume的信息(storage，可以理解为划分储存空间？类似amazon S3)，就可以直接通过这份config指定的信息，将你的app从docker hub部署到fly.io上。</p><p>按照我的理解，其中 docker image是你的app的代码，fly volume是你的硬盘/储存空间，<a href="https://github.com/benbjohnson/litestream" target="_blank" rel="noopener">litestream</a>会按秒级间隔同步拷贝memos的sqlite数据库的WAL数据流到<a href="https://www.backblaze.com/b2/docs/" target="_blank" rel="noopener">Backblaze B2</a>以实现数据备份。有了数据备份，就算memos的上游发布新版本，或是fly.io机房着火，你也能从B2获取当前最新的闪照(snapshot)，这应该也是为什么<a href="https://github.com/hu3rror/memos-on-fly#:~:text=Verify%20the%20installation" target="_blank" rel="noopener">memos部署指南</a>提到可以通过swap到一个新的fly volume来检验是否成功备份。</p><p>因为memos算是高强度使用的应用了，后期数据量会暴涨，难免会有scalability和数据迁移的问题，根据<a href="https://github.com/usememos/memos/issues/1178" target="_blank" rel="noopener">Add export markdown files #1178</a> 和<a href="https://github.com/usememos/memos/issues/778" target="_blank" rel="noopener">Export memos to file #778</a>, Memos似乎不打算直接在用户界面实现导出(which I think is not justified, since not every user has access to the home directory after all)，应该只能把docker目录下的sqlite数据库定期拖下来备份。</p><p>因为fly的app本质就是一个docker容器，这时候就需要使用fly的ssh工具<code>flyctl ssh</code>。查阅help手册后知道应该用sftp来拷贝vm上的文件。根据<a href="https://github.com/pocketbase/pocketbase/discussions/537#discussioncomment-3914729" target="_blank" rel="noopener">这则回复</a>，可以用<code>fly ssh sftp shell</code>进入sftp的shell，然后用get命令来下载特定文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get var/opt/memos/memos_prod.db memos_prod.db</span><br></pre></td></tr></table></figure><p>或者精简版的命令, 直接用<code>fly ssh sftp get</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fly ssh sftp get var/opt/memos/memos_prod.db memos_prod.db</span><br></pre></td></tr></table></figure><p>注意，fly sftp应该不是标准的openSSH的sftp，而是一种 platform-independent solution，它在<code>get</code>文件时不会overwrite本地文件，如果同名local file存在会<code>get</code>失败，所以每次<code>get</code>前要删除local file.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;fly.io 类似于heroku，能帮忙托管运行App，是一种&lt;a href=&quot;https://zh.wikipedia.org/wiki/平台即服务&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;PaaS&lt;/a&gt;服务。昨天我在尝试自搭(&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="Tech" scheme="https://gitkeniwo.github.io/categories/Tech/"/>
    
    
      <category term="docker" scheme="https://gitkeniwo.github.io/tags/docker/"/>
    
      <category term="cloud-computing" scheme="https://gitkeniwo.github.io/tags/cloud-computing/"/>
    
      <category term="self-hosting" scheme="https://gitkeniwo.github.io/tags/self-hosting/"/>
    
      <category term="paas" scheme="https://gitkeniwo.github.io/tags/paas/"/>
    
      <category term="sftp" scheme="https://gitkeniwo.github.io/tags/sftp/"/>
    
  </entry>
  
  <entry>
    <title>放在微博图床的图片全挂了。</title>
    <link href="https://gitkeniwo.github.io/2023-01-25-weibo-image-hosting/"/>
    <id>https://gitkeniwo.github.io/2023-01-25-weibo-image-hosting/</id>
    <published>2023-01-25T06:25:55.000Z</published>
    <updated>2023-03-12T01:28:47.153Z</updated>
    
    <content type="html"><![CDATA[<p>微博图床，爷真是当初信了iPic的邪了。<br><em>注：ipic是少数几个支持无token上传微博图床的图床工具</em></p><p><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/20230125150344.png" alt=""></p><p>想到之前看到有人说web2.0系的平台，因为是freemium模式，平台的用户本身就是他们的盈利点。用户的digital property自然也不由用户自己掌控。<br>现在即便是想补图，也无从知晓这里究竟放的是什么图片了。以后图片要么放可以信赖的渠道(Github)，要么还是放在本地吧。不氪金的东西不可能长久。</p><p><em>Update (Mar 12 2023)</em> </p><p>似乎在原链前加入一个 <code>cdn.cdnjson.com/</code> 就能通过这个cdn访问到原图. 原图没有被删掉, 而是做了防盗链, 然后赶紧都换成别的源吧。。。</p><p>根据<a href="https://juejin.cn/post/7189651446306963514" target="_blank" rel="noopener">这篇文章</a>，这tva1～4挂掉不只是我一个，是大规模事件. 这个人还写了如何全部替换图链的操作，具体可以去他文章里看。重点他说不推荐用github作为图床，因为官方建议仓库维持在1G内，然后他推荐了<a href="https://www.qiniu.com/" target="_blank" rel="noopener">七牛云</a>免费10G空间，不过我对墙内公司的freemium商业模式深表怀疑(Heroku的免费档都做不下去，🀄️人一来不得把它薅空？)，另外就是你不能存维尼熊不爱看的图。我去下载了一下GitHub图床的repo，现在都121M了，还是非常担心这个repo被GitHub官方橄榄掉的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;微博图床，爷真是当初信了iPic的邪了。&lt;br&gt;&lt;em&gt;注：ipic是少数几个支持无token上传微博图床的图床工具&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gitkeniwo/image_hostin
      
    
    </summary>
    
    
      <category term="Blogging" scheme="https://gitkeniwo.github.io/categories/Blogging/"/>
    
    
      <category term="image-hosting" scheme="https://gitkeniwo.github.io/tags/image-hosting/"/>
    
  </entry>
  
  <entry>
    <title>N. Xiangyang Rd., Shanghai; Hennessy Rd., HK</title>
    <link href="https://gitkeniwo.github.io/2022-10-23-shanghai-hongkong/"/>
    <id>https://gitkeniwo.github.io/2022-10-23-shanghai-hongkong/</id>
    <published>2022-10-23T17:06:40.000Z</published>
    <updated>2023-03-25T14:28:15.222Z</updated>
    
    <content type="html"><![CDATA[<p>刚刚在推上看到了有女生在上海襄阳北路的街上举横幅。我很钦佩她们的勇气。</p><p><blockquote class="twitter-tweet"><p lang="zh" dir="ltr">上海 襄阳北路<br>两个女孩子拉起一条横幅<br>写着几个简单的汉字<br>不要 要 <br>不要 要 <br>不要 要<br>周围的人说，我们一直想干这个 <a href="https://t.co/p7WHqAtgBZ" target="_blank" rel="noopener">pic.twitter.com/p7WHqAtgBZ</a></p>&mdash; 李老师不是你老师 (@whyyoutouzhele) <a href="https://twitter.com/whyyoutouzhele/status/1584139964782350336?ref_src=twsrc%5Etfw" target="_blank" rel="noopener">October 23, 2022</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script></p><p>这条推文下面，有人挂出了香港人在观塘apm举白纸的抗议活动照片。这让我回想起了香港六一六两百万人大游行。</p><iframe width="560" height="315" src="https://www.youtube.com/embed/rWTZ77C3xb4" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p>每次回顾这个延时影片，都会被画面中不断流淌过的人群触动到。19年8月我在旺角切身实地的目睹过体验过反送中游行，黑衣人占据了弥敦道六车道声嘶力竭的呼唤民主，两侧的商铺都很配合的关门了，后来我才意识到，那就是香港最后的怒吼了，也是香港人能自由表达政治诉求的最后的体面时光了。现在回忆起19年暑假的那段时光，总会感到一种渺然的虚幻与彷徨，covid之前的岁月都如梦一般不可考证，那个街头混杂着几十种语言的香港终究也成了昨日的世界中的某个段落。唯独，回想起在旺角信和中心门口的那个下午，背后是那时才刚刚发售的游戏<em>火焰之纹章：风花雪月</em>的巨型海报，2019年那个活力尚存的香港又跃现在我的眼前——那是我第一次感受到与整个人类的历史的书写方向如此接近，即便它是一个如此让人沮丧的拐点。从此我知道一个社会的生命力，不管你拥有再令人瞩目的经济指标，如果缺少了作为活力源头的<em>人</em>的存在，如果人们都畏首畏尾怖惧于<em>政治表达</em>，那么它就是一滩颓萎的死水。</p><p>两百万的大游行，最后换来了一纸恶法。我大概是从那时开始明白了这个颠扑不破的道理，即，永远不要同土匪谈判。Hence the following struggles 润ing all the way to the Netherlands.</p><p>上海法租界的这条推文勾起了关于HK的万种思绪，两座都是我很中意的城市。夜晚的法租界小马路，街边站满了年青人，两位勇敢的女生举着白色的横幅，上面写着呼应北京四通桥的「不要」、「要」，旁边骑车经过的路人都在让道。可惜上海早就不是70年前的那个上海了，街边站满的人，大部分都茫然而不自知目前「共和国」的境况，横幅也只能如苏联笑话一般be as vague as possible。两位勇敢的女生，不知道她们下半夜去向何方。而2020年之后，香港也不再是那个香港了。两百万人的队列艰难行过金钟门口的轩尼诗道，最后什么也没有争取到。Reddit网友说，What do you even expect? I mean, it’s China. 那个半只脚还搭在自由世界门槛里的香港最后也没能成功与土匪谈成，更何况沦陷区的这些星星之火呢？在这种悬殊的对比之下，法租界夜晚里的那一抹白，显得更加可贵了。</p><p>恰逢大会，铺天盖地的宣传之下，没有一个地方评论区是可以留言的，不免让人联想到中世纪天主教会，认定教宗是神意的唯一解读者。极权主义的幽灵，80年、50年后，重新盘旋在东亚次大陆的上空。这是人类历史的永恒轮回吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;刚刚在推上看到了有女生在上海襄阳北路的街上举横幅。我很钦佩她们的勇气。&lt;/p&gt;
&lt;p&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;zh&quot; dir=&quot;ltr&quot;&gt;上海 襄阳北路&lt;br&gt;两个女孩子拉起一条横幅&lt;br&gt;写着几个简单的汉字&lt;b
      
    
    </summary>
    
    
      <category term="Tweets" scheme="https://gitkeniwo.github.io/categories/Tweets/"/>
    
      <category term="Milestones" scheme="https://gitkeniwo.github.io/categories/Tweets/Milestones/"/>
    
    
      <category term="hk" scheme="https://gitkeniwo.github.io/tags/hk/"/>
    
      <category term="ccp" scheme="https://gitkeniwo.github.io/tags/ccp/"/>
    
      <category term="毒力撕烤" scheme="https://gitkeniwo.github.io/tags/%E6%AF%92%E5%8A%9B%E6%92%95%E7%83%A4/"/>
    
      <category term="china" scheme="https://gitkeniwo.github.io/tags/china/"/>
    
      <category term="shanghai" scheme="https://gitkeniwo.github.io/tags/shanghai/"/>
    
  </entry>
  
  <entry>
    <title>估计量的抽样分布 @ Probability &amp; Statistics Chapter 8</title>
    <link href="https://gitkeniwo.github.io/2022-10-22-p-and-s-08/"/>
    <id>https://gitkeniwo.github.io/2022-10-22-p-and-s-08/</id>
    <published>2022-10-22T16:39:01.000Z</published>
    <updated>2023-03-25T14:32:49.367Z</updated>
    
    <content type="html"><![CDATA[<p>这是 <a href="https://lib.hpu.edu.vn/handle/123456789/28621" target="_blank" rel="noopener">DeGroot, M. H., &amp; Schervish, M. J. (2012). _Probability and statistics_. Pearson Education.</a> 一书的笔记。 </p><p>8.1 小节讲了抽样分布(sample distribution)。抽样分布能作为中间量协助计算Bayes估计量，或者用以衡量有多大信心认为估计量$\hat{\theta}$接近真实参数$\theta$。<br>8.2 是卡方分布。卡方分布实际上是一种特殊的$\Gamma$分布($\alpha=\frac{m}{2}, \beta=\frac{1}{2}$).<br>8.3 继续探索了正态分布样本均值和样本方差的关系</p><ul><li>样本均值和方差是独立的。</li><li>样本方差与自由度为n-1的卡方分布差一个常数项系数，即$\sum^n_{i=1}\frac{(X_i-\bar{X_n})^2}{\sigma ^2} \sim \chi^2_{n-1}$，而$\mu$已知情况下，标准化后的方差是服从卡方1的，$\frac{(X_i - \mu)^2}{\sigma ^2} \sim \chi_{1}^2$ ，其加和服从自由度为n的卡方分布。换言之，将$\mu$替换为样本均值后，自由度减少了1.</li><li>因此，样本方差常以$\sigma’^2=\frac{S_n^2}{n-1}=\frac{\sum_{i=1}^n(X_i-\bar{X_i})^2}{n-1}$ 代替，因为此式为方差的无偏估计(unbiasedness)。<ul><li>关于自由度的理解：根据Wikipedia: “In statistics, the number of degrees of freedom is the number of values in the final calculation of a statistic that are free to vary.” 自由度衡量了统计量中能自由变换的样本数。</li><li>因为样本中残差和为0 $\sum^n_{i=1} (X_i - \bar{X_i})=0$，每一项 $X_i - \bar{X_i}$ 其实是样本关于样本均值的残差(residual)。在这n项的残差中，若知晓其中n-1项，必然通过零和知晓第n项，所以这n项是线性相关的，实际只有n-1项的信息是独立的，它们只能张成n-1维的线性空间。</li></ul></li></ul><p>8.4 t分布</p><ul><li>t分布的严格定义是 $X=\frac{Z}{(\frac{Y}{m})^{\frac{1}{2}}}$ , 其中Z为标准正态，Y为自由度为m的卡方。</li><li>构造$Z= \frac{\sqrt{n}(\hat{X_n}-\mu)}{\sigma}$  ，由于样本均值服从$N(\mu,\frac{\sigma^2}{n})$  (n个 $\frac{x_i}{n} \sim N(\frac{\mu}{n},(\frac{\sigma}{n})^2)$的加和)。</li><li>构造$Y = \frac{S^2_n}{\sigma^2}$，由8.3节知 $Y \sim \chi^2_{n-1}$</li><li>故$U = \frac{Z}{({\frac{Y}{n-1}})^{\frac{1}{2}}} \sim t_{n-1}$ , 化简U得到 <script type="math/tex">U= \frac{\frac{\sqrt{n}(\hat{X_n}-\mu)}{\sigma}}{(\frac{S^2_n}{\sigma^2 (n-1)})^ {\frac{1}{2}}}= \frac{\sqrt{n}(\hat{X_n}-\mu)}{(\frac{S^2_n}{ n-1})^ {\frac{1}{2}}}=\frac{\sqrt{n}(\hat{X_n}-\mu)}{\sigma'} \sim t_{n-1}</script><ul><li>样本方差$\sigma’$与方差的MLE估计$\hat{\sigma}$差了一个常数项</li><li>在sigma unknown和已经得到一组样本的情况下，由于$\mu$与$t_{n-1}$无关，在给定的置信系数下，我们可以通过寻找U在t分布下的置信区间$Pr(|U|&lt;t_{n-1}(\alpha /2))=1-\alpha$，通过Pr括号内的不等式变形得到$\mu$关于t分位数和样本方差的不等式，进而得到$\mu$的置信区间 $\bar{X_i} \pm t_{n-1}(\alpha/2)\frac{\sigma ‘}{\sqrt{n}}$ 。<br>最后，标准柯西分布（p.d.f. $f(x;0,1)= \frac{1}{\pi (1+x^2)}$）是自由度为1的t分布，标准正态分布是自由度为$\infty$的t分布。</li></ul></li></ul><p>8.5 讲了置信区间(Confidence Interval, CI)<br>8.6 讲了正态分布的贝叶斯推断<br>8.7 特地讲了无偏估计<br>8.8 提到了费歇尔信息量（Fisher Information)，它是C-R不等式的一个组成部分，可以判断UMVUE。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是 &lt;a href=&quot;https://lib.hpu.edu.vn/handle/123456789/28621&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;DeGroot, M. H., &amp;amp; Schervish, M. J. (2012). 
      
    
    </summary>
    
    
      <category term="Academical Hack" scheme="https://gitkeniwo.github.io/categories/Academical-Hack/"/>
    
      <category term="Statistics" scheme="https://gitkeniwo.github.io/categories/Academical-Hack/Statistics/"/>
    
    
      <category term="statistics" scheme="https://gitkeniwo.github.io/tags/statistics/"/>
    
      <category term="undergraduate-course" scheme="https://gitkeniwo.github.io/tags/undergraduate-course/"/>
    
      <category term="sample-distribution" scheme="https://gitkeniwo.github.io/tags/sample-distribution/"/>
    
  </entry>
  
  <entry>
    <title>改革开放的落幕（1978-2022）</title>
    <link href="https://gitkeniwo.github.io/2022-10-22-end-of-reform-and-opening-up/"/>
    <id>https://gitkeniwo.github.io/2022-10-22-end-of-reform-and-opening-up/</id>
    <published>2022-10-22T16:04:51.000Z</published>
    <updated>2023-03-25T14:16:07.857Z</updated>
    
    <content type="html"><![CDATA[<p>我想，今日的新闻出来后，中国40年来飞速发展的黄金时代也就落幕了。</p><p>健康即孱弱。<br>发展即停滞。<br>稳定即动荡。</p><p>自由世界的人需要认识到，他们面临的是一种史无前例的制度结构，能够完全控制人心为其所用的利维坦，毋庸置疑地说，其恐怖程度已经超越了冷战时期的USSR。自由世界的人不熟谙厚黑学，透过局域网捕捉到的象形文字只能解读出一团模糊不清的魅影，他们一定会在这方面吃到苦头。</p><p>阿姨预言的大洪水最终没有出现，可它却又真真实实早就来了，化作一团汹涌的暗流，从天津港、杭州湾、南中国海……从3万公里的海岸线发散而出，最终会搅动整个蔚蓝星球。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我想，今日的新闻出来后，中国40年来飞速发展的黄金时代也就落幕了。&lt;/p&gt;
&lt;p&gt;健康即孱弱。&lt;br&gt;发展即停滞。&lt;br&gt;稳定即动荡。&lt;/p&gt;
&lt;p&gt;自由世界的人需要认识到，他们面临的是一种史无前例的制度结构，能够完全控制人心为其所用的利维坦，毋庸置疑地说，其恐怖程度已经超
      
    
    </summary>
    
    
      <category term="Tweets" scheme="https://gitkeniwo.github.io/categories/Tweets/"/>
    
      <category term="Milestones" scheme="https://gitkeniwo.github.io/categories/Tweets/Milestones/"/>
    
    
      <category term="ccp" scheme="https://gitkeniwo.github.io/tags/ccp/"/>
    
      <category term="memoir" scheme="https://gitkeniwo.github.io/tags/memoir/"/>
    
      <category term="china" scheme="https://gitkeniwo.github.io/tags/china/"/>
    
      <category term="historic" scheme="https://gitkeniwo.github.io/tags/historic/"/>
    
  </entry>
  
  <entry>
    <title>统计推断 @ Probability &amp; Statistics Chapter 7</title>
    <link href="https://gitkeniwo.github.io/2022-10-16-p-and-s-07/"/>
    <id>https://gitkeniwo.github.io/2022-10-16-p-and-s-07/</id>
    <published>2022-10-16T15:45:14.000Z</published>
    <updated>2023-03-25T14:33:03.911Z</updated>
    
    <content type="html"><![CDATA[<p>这是 <a href="https://lib.hpu.edu.vn/handle/123456789/28621" target="_blank" rel="noopener">DeGroot, M. H., &amp; Schervish, M. J. (2012). _Probability and statistics_. Pearson Education.</a> 一书的笔记。 </p><h1 id="7-1-Statistical-Inference-统计推断"><a href="#7-1-Statistical-Inference-统计推断" class="headerlink" title="7.1 Statistical Inference 统计推断"></a>7.1 Statistical Inference 统计推断</h1><p>这一章首首先介绍了灯泡寿命问题。公司想要估计电子元件的failure rate，用未知的参数$\theta$表示，它服从指数分布（gamma分布）。根据大数定律6.2 我们知道独立同分布的样本均值 $\bar{X_i} \xrightarrow{p} \frac{1}{\theta}$   (依概率收敛)。根据Theorem 6.2.5 我们知道给这个式子套一层连续函数也是成立的，即 $1/ \bar{X_i} \xrightarrow{p} \theta$. 所以，我们可以用样本均值的倒数来近似failure rate。<br>因为我们不可能测量所有元件的寿命，参数$\theta$只能是hypothetically observable的。<br>接下来定义了统计模型和统计推断(statistical inference)。统计推断的例子：</p><ul><li>构造一个随机变量$\mathbf{Y}$  使得 $\text{Pr}(\mathbf{Y} \ge \theta | \theta)=0.9$。 这个RV $\mathbf{Y}$ 可以是观测到的一系列样本$X_1,…,X_m$的函数。</li><li>在观测到一系列样本$X_1,…,X_m$后，我们有多大把握认为$\theta \le 0.4$。</li></ul><p>后面提了下模型参数和参数空间。接着定义了统计量（statistic)：是样本$X_1,…,X_n$的实值函数$T=r(X_1,…,X_n)$，例如样本均值$\bar{X_i}$和样本最大值$\max (X_1,…,X_n)$.</p><h1 id="7-2-先验-amp-后验"><a href="#7-2-先验-amp-后验" class="headerlink" title="7.2 先验 &amp; 后验"></a>7.2 先验 &amp; 后验</h1><p>先验分布就是在做出观测之前，我们已知或假定参数$\theta$在参数空间$\Omega$上的可能分布。<br><em>e.g.</em> 灯泡寿命为指数分布，其损坏率$\theta$假定其先验分布为Gamma分布。<br>灯泡的损坏率$\theta$服从Gamma分布，它的概率密度为 <script type="math/tex">\xi(\theta)=\frac{(20,000)^4}{3!}\theta^3e^{-20,000\theta}</script><br>注意这里会被绕晕：先验概率分布是theta的函数，刻画了theta取各个值的可能性的密度。一般好像RV会用大写$X$，而p.d.f.会用小写$f(x)$?</p><p>然后介绍了后文model样本分布的一个notation，即$f_m(\mathbf{x}|\theta)=f(x_1|\theta)…f(x_m|\theta)$。这里，它反过来model了给定$\theta$条件下$X_1,…,X_m$的分布，每个观察值$X_i$都是在给定theta时<em>条件独立同分布(conditional i.i.d.)</em> 的，这时我们可以说$X_1,…,X_m$构成了概率密度函数$f(x|\theta)$的一组随机样本(form a random sample)。</p><p>Sensitivity Analysis是分析不同的Prior产生的Posterior有多大程度的不同。这里有一个fun fact是如果实验观测数据足够大，那么不同的先验对试验结果的影响是微乎其微的。这提示我们不必过于纠结怎么挑选先验 (experimenters might be less inclined to spend time specifying a prior distribution if it is not going to matter much)，但如果不选择先验的话，就没法计算后验概率了。</p><p>后验分布是给定一组样本下的条件概率。The conditional distribution of θ given $X_1, . . . , X_n$ is called the posterior distribution of θ, typically denoted as $\xi(\theta|x_1,…,x_n)$.<br>与后验分布相关的最重要的东西就是贝叶斯定理了，在随机样本的形势下，贝叶斯定义可以表述为</p><script type="math/tex; mode=display">\xi(\theta|\mathbf{x})= \frac{f(x_1|\theta)...f(x_n|\theta)\xi(\theta)}{g_n(\mathbf{x})}</script><p>其中$g_n(\mathbf{x})$为样本的联合概率分布(可由分数线上面部分对$\theta$积分，求得样本$\mathbf{x}$的边际分布得到)，整个式子即后验=先验x似然 / 证据 （$\text{Posterior} = \frac{\text{Likelihood}\times \text{Prior}}{\text{Evidence}}$，似然刻画了由先验到后验结果的可能性，证据则是各种结果的出现的可能性）<br>$e.g.$ 这节例子为对之前先验分布为Gamma的灯泡损坏率求后验。</p><ul><li>似然$f(x|\theta)$为给定theta下每个样本$x_i$的条件概率密度，由于灯泡寿命为指数分布，$f(x|\theta)=\theta e^{-\theta x}$</li><li>evidence是样本的联合概率分布，$g_n(\mathbf{x})=\int^{\infty}_0 f_n(\mathbf{x}|\theta)\xi (\theta) \text{d}x$ </li><li>最后的后验概率为 $\xi(\theta|\mathbf{x})=\frac{(\sum^n_{i=1} x_i+20000)^{n+4}}{\Gamma (n+4)}e^{-(\sum^n_{i=1} x_i+20000)\theta}$ ，是一个关于$\theta$的函数，其中样本$x_i$通过观察得到，视为已知的量。</li><li>图像上的改变： <img src="https://files.mastodon.online/media_attachments/files/109/180/095/693/192/069/original/a9a3331e21cd70e3.png" alt=""></li><li></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是 &lt;a href=&quot;https://lib.hpu.edu.vn/handle/123456789/28621&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;DeGroot, M. H., &amp;amp; Schervish, M. J. (2012). 
      
    
    </summary>
    
    
      <category term="Academical Hack" scheme="https://gitkeniwo.github.io/categories/Academical-Hack/"/>
    
      <category term="Statistics" scheme="https://gitkeniwo.github.io/categories/Academical-Hack/Statistics/"/>
    
    
      <category term="statistics" scheme="https://gitkeniwo.github.io/tags/statistics/"/>
    
      <category term="inference" scheme="https://gitkeniwo.github.io/tags/inference/"/>
    
      <category term="undergraduate-course" scheme="https://gitkeniwo.github.io/tags/undergraduate-course/"/>
    
  </entry>
  
  <entry>
    <title>Python Data Model @ 流畅的Python 01</title>
    <link href="https://gitkeniwo.github.io/2022-10-15-fluent-python-1/"/>
    <id>https://gitkeniwo.github.io/2022-10-15-fluent-python-1/</id>
    <published>2022-10-15T08:44:06.000Z</published>
    <updated>2023-03-25T14:33:47.050Z</updated>
    
    <content type="html"><![CDATA[<p>最近时常感觉有必要重学一遍python，故开此坑。<br>《流畅的python》这本书也是经典必读了，就从第一章开始写笔记。这章是一个引言，主要介绍了python的special methods。</p><h1 id="Special-Methods"><a href="#Special-Methods" class="headerlink" title="Special Methods"></a>Special Methods</h1><ul><li>Special Method是形如<code>__methodName__</code>的一类方法（也叫做”dunder method”，dunder是双下划线的略称），通过实现这类方法可以使得class以一些python通用的语法来调用一些特殊函数，使得代码语法更连贯，避免在用户编写的类里同样功能的函数有多种不同名称的情况。(Meant to be called by the python interpreter, not user (the only exception being <code>__init__()</code> which is for invoking the initializer for user superclass))<ul><li><strong>e.g.</strong> 通过实现 <code>__getitem__()</code>方法，可以直接通过 <code>className[0], className[1]</code>这样类名加方括号的形式来获取类中按照某种顺序的第N个元素(get item by index)</li><li>✴️ <code>__getitem__()</code>还能让我们的类变得<strong>iterable</strong>。<ul><li>可以用 <code>in</code> 看某个元素是否在里面</li><li>可以用 <code>for</code> 遍历</li><li>需要sorting的话，可以创建一个函数<code>sort_value()</code>用以得到某种具有顺序的值，最后用<code>for card in sorted(deck, key=sort_value):</code>即可按照这个函数输出的值来排序。</li></ul></li><li><strong>e.g.</strong> 实现<code>__len__()</code>方法就可用<code>len(class)</code>来获取事先定义好的某种length。  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"></span><br><span class="line">Card = collections.namedtuple(<span class="string">'card'</span>, [<span class="string">'rank'</span>, <span class="string">'suit'</span>])</span><br><span class="line"><span class="comment">#name 对应console里面的这个tuple的名字</span></span><br><span class="line"><span class="comment">#&gt;&gt;&gt;Card('2', 'diamonds')</span></span><br><span class="line"><span class="comment">#output: card(rank='2', suit='diamonds')</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FrenchDeck</span>:</span></span><br><span class="line"></span><br><span class="line">ranks = [str(n) <span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">2</span>, <span class="number">11</span>)] + list(<span class="string">'JQKA'</span>) </span><br><span class="line">suits = <span class="string">'spades diamonds clubs hearts'</span>.split()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">self._cards = [Card(rank, suit) </span><br><span class="line"><span class="keyword">for</span> suit <span class="keyword">in</span> self.suits </span><br><span class="line"><span class="keyword">for</span> rank <span class="keyword">in</span> self.ranks]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__len__</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> len(self._cards)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__getitem__</span><span class="params">(self, position)</span>:</span></span><br><span class="line"><span class="keyword">return</span> self._cards[position]</span><br><span class="line"></span><br><span class="line"><span class="comment">#iterable</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> card <span class="keyword">in</span> deck:</span><br><span class="line">print(card)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Card(rank='2', suit='spades')</span></span><br><span class="line"><span class="comment">#Card(rank='3', suit='spades')</span></span><br><span class="line"><span class="comment">#Card(rank='4', suit='spades')</span></span><br></pre></td></tr></table></figure></li></ul></li><li><strong>e.g.</strong> 模拟数值类 Emulating Numeric Types <ul><li>To build a vector type <code>Vector(a,b)</code>, you’ll have to implement  <code>__repr__()</code>, <code>__abs__()</code>, <code>__add__()</code> and <code>__mul__()</code></li></ul></li><li>书中继续介绍了<code>__repr__()</code>和 <code>__str__()</code>两个special methods, 一个是展示在console，一个是展示在print里的。<ul><li><code>__repr__()</code> is called by the repr builtin to display the string representation of the object in the <strong>console</strong>.</li><li>With repr, the console displays:  <code>Vector(9, 12)</code>, instead of <code>&lt;Vector object at 0x10e100070&gt;</code></li><li><code>__str__</code> is called by the <code>str()</code> built-in and implicitly used by the print function. It should return a string suitable for display to <strong>end users</strong>.</li></ul></li></ul><h1 id="Collection-API"><a href="#Collection-API" class="headerlink" title="Collection API"></a>Collection API</h1><p>接下来简单介绍了Python的Collection API。所有的类都是ABC(abstract base classes)。</p><ul><li>我们有top ABC，这些ABC都只有一个special method，如Iterable的<code>__iter__</code>, Sized的<code>__len__</code>. <ul><li>Interable要求支持unpacking和iteration</li><li>Sized要求实现len</li><li>Container要求支持<code>in</code>操作符</li></ul></li><li>Collection ABC (即 <code>collections.abc</code> module)合并了Iterable, Sized和Container三个接口。</li><li>Python不要求每个具体的类都要实现<code>__len__</code>，但如果他实现了，那么他就satisfy 了Sized Interface。<ul><li>具体关系为 <img src="https://files.mastodon.online/media_attachments/files/109/172/982/234/570/581/original/bbe8405151265044.png" alt=""></li></ul></li><li>其中，三个重要的Collections是<ul><li>Sequence, 规范了list, str 这些重要的built-in；只有sequence是reversible的，因为它支持arbituary ordering，其他两个不行。dict是假order，只保留key insertion order。</li><li>Mapping, 有<code>dict</code>, <code>collections.defaultdict</code>等实现</li><li>Set, 有<code>set</code>和<code>frozenset</code>等</li></ul></li></ul><h1 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h1><p>BTW,  在CPython里，builtin types的<code>len()</code>其实不是一个method，它只是从C struct里面读取了一个field的值，所以len()效率很高；因为builtin需要高效的实现。现在，用户可以通过实现<code>__len__</code>使得len()同样能用在自己的类上。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近时常感觉有必要重学一遍python，故开此坑。&lt;br&gt;《流畅的python》这本书也是经典必读了，就从第一章开始写笔记。这章是一个引言，主要介绍了python的special methods。&lt;/p&gt;
&lt;h1 id=&quot;Special-Methods&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="Zen and the Art of Computer Maintenance" scheme="https://gitkeniwo.github.io/categories/Zen-and-the-Art-of-Computer-Maintenance/"/>
    
      <category term="Python" scheme="https://gitkeniwo.github.io/categories/Zen-and-the-Art-of-Computer-Maintenance/Python/"/>
    
    
      <category term="python" scheme="https://gitkeniwo.github.io/tags/python/"/>
    
      <category term="fluent-python" scheme="https://gitkeniwo.github.io/tags/fluent-python/"/>
    
  </entry>
  
  <entry>
    <title>转生荷兰的一天</title>
    <link href="https://gitkeniwo.github.io/2022-08-29-welcome-day/"/>
    <id>https://gitkeniwo.github.io/2022-08-29-welcome-day/</id>
    <published>2022-08-29T12:23:26.000Z</published>
    <updated>2022-08-29T18:29:08.736Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/0cEJhDL.jpg" alt=""><br>TU/e的Welcome day，今天也是第一次来e村（感觉真·进城了），做集体游戏的时候社恐犯了，破冰活动进行到一半自己回去了（其实是太累）。跟别人交流的时候，英文是没什么问题（跟某个同样来自zju的同学比起来），就是感觉没太多话题可以聊……或许我真的是个无聊的人吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://i.imgur.com/0cEJhDL.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;TU/e的Welcome day，今天也是第一次来e村（感觉真·进城了），做集体游戏的时候社恐犯了，破冰活动进行到一半自己回去了（其实是太累）。跟别人交流的时候，英文
      
    
    </summary>
    
    
      <category term="Tweets" scheme="https://gitkeniwo.github.io/categories/Tweets/"/>
    
    
      <category term="daily" scheme="https://gitkeniwo.github.io/tags/daily/"/>
    
      <category term="tue" scheme="https://gitkeniwo.github.io/tags/tue/"/>
    
  </entry>
  
  <entry>
    <title>荷兰逃亡记</title>
    <link href="https://gitkeniwo.github.io/2022-08-26-run-to-holland/"/>
    <id>https://gitkeniwo.github.io/2022-08-26-run-to-holland/</id>
    <published>2022-08-26T08:46:59.000Z</published>
    <updated>2023-03-25T14:24:31.315Z</updated>
    
    <content type="html"><![CDATA[<p>前情提要：中共的清零政策Omicron变种下失去作用，缺乏自我适应能力的体制开始对全国进行大规模封锁，国际航班减少，2022年暑期出国变得十分艰难。本次润尼德兰我也不得不选择去香港起飞。</p><h1 id="Timeline"><a href="#Timeline" class="headerlink" title="Timeline"></a>Timeline</h1><h2 id="2022-8-22-抵达深圳"><a href="#2022-8-22-抵达深圳" class="headerlink" title="2022.8.22 抵达深圳"></a>2022.8.22 抵达深圳</h2><ul><li>凌晨 我看到微博博主中国气象爱好者说刚刚有台风胚胎在吕宋岛形成，且大概率直接在广东登陆，当时半夜看到这消息人都麻了，一晚没睡。<ul><li><img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5oai9ppohj20u01szdlz.jpg" alt=""></li></ul></li><li>9:00 成都双流 -&gt; 深圳宝安。<ul><li>早上的成都三环路西南段真的堵麻了，过高新的时候还看到了IKEA，这种城市里的IKEA跟欧洲的美式IKEA对比真的强烈。先去双流T2送走了我弟，当天成都限电，连机场冷气都不足，双流KFC甚至没有灯。T2到T1可乘坐摆渡车。双流T1几乎就全是四川航空了。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/BD7AC6AC-7298-46D3-959D-B2D44284D595_1_105_c.jpeg" alt=""></li><li>12:30 在双流T1候机的时候，我就开始刷来港易了。来港易本身是深圳湾每天1000名额，小红书上8.10和七月份因为台风蛇口航班取消的同学都是当天可预约的，谁知我们24号左右同时也是港校开学高峰，最近一周的名额都早早的被抢完，只能刷刷别人退的票。起初是看到来港易22号还有，但刷新一下就没了，然后我猜就是可以刷出来的，由于前天晚上没睡觉，整个人都是恍惚的，在双流候机厅强忍着睡意不停刷新页面输入验证码，还好大约45分钟就刷出来了，刷出来我几乎整个人都松了一口气，当时还抱着船票不会取消的侥幸，马上给家人打电话报喜。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/_DSC0003.JPG" alt=""></li><li>川航空餐：豆腐干。。。😅<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_9702.jpg" alt=""></li></ul></li><li>17:40 降落深圳。<ul><li>宝安机场设计又让人眼前一亮，简约的标识系统，真的像是国外了，出站核酸检测的设计也行云流水，算是粪坑中的优等生了。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_9708.jpeg" alt=""></li><li>我看蛇口可以坐地铁过去，于是提着两个大箱子上了地铁。十一号线体验很好，在宝安出机场的地上段还有落日海景。前海湾换乘稍微难受，难以想象5号线在前海湾到赤湾这一段可以设七八个站……最气人的是赤湾的5-2换乘，竟然不是同台，而且这两相互也没有延伸计划，真的不知道在前湾这片深圳的核心区为什么还会有这么失败的设计。<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5oalkoy2dj21400u0dlk.jpg" alt=""> </li><li>出蛇口地铁站后，要换乘蛇口接驳线B612去蛇口港，一块钱，可以刷深圳通（一个小程序），十分钟滚动发车，体验还是不错的。到蛇口港后，我先是取了票，再乘坐电梯到4楼，换乘citigo的电梯去了8楼酒店大厅。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_9728.jpg" alt="">  <img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/CA719327-84B5-4C4C-83A4-B6A58AE77920_1_105_c.jpeg" alt=""></li><li>蛇口港，几乎没有店开门，要吃饭只能外卖，记得提前下单，因为送过来要一个小时……我点了炒河粉和潮汕牛肉丸，配沙茶酱真的美味极了，广东美食我强推。<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5oac5q0fvj20u0140wll.jpg" alt=""> </li><li>夜里小红书开始坐不住了，很多人开始未雨绸缪，还好我白天抢到了来港易所以不慌，直接进行一个补觉。<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5oaaxx8akj20u01szq7m.jpg" alt=""></li></ul></li></ul><h2 id="2022-8-23-深圳闲逛"><a href="#2022-8-23-深圳闲逛" class="headerlink" title="2022.8.23 深圳闲逛"></a>2022.8.23 深圳闲逛</h2><ul><li>上午 11:40 去南医大深圳院区做了核酸，地铁过去大概40分钟。<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5oai9295kj21400u0teu.jpg" alt=""> 下午出报告后在粤康码可以查，然后去医院打印中英文+盖章。</li><li>中午/下午<ul><li>本来想就近在壹方城解决午饭，但宝安中心(1,5号线)地铁站根本不在壹方城地下开口，要走过去还要过马路……我就又进站直接去了益田假日广场(1,2号线世界之窗站)。<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5oaowyefij21400u045d.jpg" alt="">午饭过后，直奔了益田假日广场的苹果店(Apple Holiday Plaza)，深圳唯一一家，全深圳的人都挤在这里，以前的话还可以去香港买Apple（别说，观塘APM和广东道的Apple还真的方便），现在都封锁两三年了……下午两点的天才吧预约，苹果只让你提前十分钟签到……沟通了半天后，在Apple更换12 mini的电池，换电池期间我就去了隔壁万象天地（1号线高新园站）闲逛去了，在MUJI的最后一次消费（我附近只有杜塞才有MUJI了）然后还囤了优衣库的heattech。万象天地可以说是陆资商场天花板，招商、管理、建筑的设计感都是顶级，可惜当时手机在换电池，没能拍点皂片。</li></ul></li><li>18:00 左右 通知24-26号船票取消。小红书开始炸锅，可能也正好是返校高峰，这一波影响到的人太多了，这时才去抢来港易的人大概会疯吧…… 晚饭顺路去了深圳前海的海岸城。开始研究来港易过关，跟别人高强度聊天中，一直处于极度兴奋的状态。当晚Citigo酒店不太平啊，电梯间弥漫着焦虑气息，随便听人聊天都是蛇口船票的事，第二天要转战深圳湾了。</li></ul><h2 id="2022-8-24-过关、飞走"><a href="#2022-8-24-过关、飞走" class="headerlink" title="2022.8.24 过关、飞走"></a>2022.8.24 过关、飞走</h2><ul><li>10:00 起床<ul><li>由于失眠，一直睡到了早上十点，起床后开始收拾行李。当天的蛇口Citigo酒店人心惶惶，都笼罩在船票取消的阴霾之下😂</li></ul></li><li>12:00 深圳湾通关<ul><li>在蛇口港门口打了车去到深圳湾口岸。口岸附近弥漫着浓浓的村逼气息，我并不知道原来过关是要排队的，而且还要排这么长。</li><li>先是在口岸外的小道上排队，然后在口岸门口排队，最后口岸里还有无数个队伍，堪比上海迪士尼。中国边检，香港边检，来港易审查……深圳当天35度，周围拿miu miu、coach的小姐姐也一样全身打湿排着队。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_9910.jpg" alt=""></li><li>过了中国边检后，你能明显感受到服务态度好了很多。过关需要4个码，各种攻略都有，这里不再赘述。在中港边检的中间地带网很差，会有人让你打他电话进行电话核验，我推荐购买移动的香港流量包，我自己带的香港一天卡最后没用上……此时看到香港挂上三号风球了，三号之后就是8号。<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5oc1gkam5j20u00w60yo.jpg" alt="">  港sir会看你疫苗证明，核酸证明，你再说当天的飞机飞走，就不会为难你了，最后会给你一个核酸表（说万一你没有飞走的话，要在xx天去做核酸）和一个访客逗留贴纸（似乎19年来香港的时候也有）。我后来在香港机场跟别人交流才知道24号没有来港易的人最后也通关了。</li></ul></li><li>15:40 进入香港境内，研究如何去机场。<ul><li>过关后可以看到一些开往屯门、元朗的巴士指示牌，也有新界和市区的士的指示牌。他们返港人士在门口排核酸，并且等核酸出结果才可返回，我们去机场的就不用核酸了。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_9937.jpg" alt=""> 由于准备匆忙，没有带一分港币，我去坐车的时候问能不能支付宝的时候，的哥都不鸟我，他说可以收人民币，然后我说我身上只有欧元……然后就回头去坐大巴了。大巴可以拍visa，超级方便，建议全世界的公交都学学。<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5ob8vma3jj20u00y8tg4.jpg" alt=""> 香港这边有超大盒的维他柠檬茶，自贩机有卖，可支付宝或拍visa。虽然船票因为台风取消了，但当天香港艳阳高照，一朵云也没有，爷全身湿透…… <img src="" alt=""></li><li>先乘坐B3到屯门市中心巴士站换乘A33X机场线，下车可见屯门轻铁，我19年来港时没见过，这才第一次见到。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_9952.jpg" alt="">巴士站在天桥对面的洞里，要坐电梯上下天桥。我当时就没找到A33x的候车地点，在街面上傻等了很久，又社恐不会说广东话不敢问人，最后用塑料粤语问了路，所幸香港人都很友好会给你指路。A33X下午的发车时间远大于30分钟，我都怀疑自己今晚之前能不能到机场了，等到心情崩溃，最后当然车还是来了…… <img src="" alt=""> <img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_9956.jpg" alt=""></li><li>B3车上没有行李架，如果箱子太多只能站着扶着自己的行李，A33X巴士上有行李架，可去二楼第一排欣赏风景。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_9970.jpg" alt=""> <img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/7D8FED84-DD50-497B-9B2F-B21AE2A93279_1_102_o.jpeg" alt=""> <img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/D494B606-8034-4640-B717-3D385F38455E_1_102_o.jpeg" alt=""> <img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_9991.jpg" alt=""></li><li>A33X经过海底隧道到赤腊角后会先去港珠澳大桥口岸，再去HKG航厦，我当时坐到港珠澳的时候以为已经到机场了，一直狂按stop，司机问我去哪，我狂喊「给虫」😂，后来才发现是要在后面一站落车。</li></ul></li><li>约18:00 到达香港机场，在值机大厅溜达了一圈，几乎没有什么开着门的商店。只有一家偌大的M记，可以拍信用卡，是全场最热闹的地方。图：粤语 批 <img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5oc45bd99j20uc0u0qcp.jpg" alt=""></li><li>18:45 开始排值机的队伍，大概排了一个半小时。<ul><li>期间结识了前面的一位朋友，他也是去阿姆。我带了一个28寸的大箱子，一个登机箱，土航让我把登机箱内电池全部取出，箱子托运，还跟我用英文尬聊……最后我才发现她是可以讲Mandarin的。</li></ul></li><li>20:00 过安检<ul><li>安检后走访客(visitor)离港通道出境，安检门前有不少香港人在送别朋友，成群结队的拍照，想必是要润带嘤和加国了，除了羡慕想不出别的话来。<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5oc6l8e4vj21fe0u0tjg.jpg" alt=""> 土航的登机口要坐摆渡列车去另一个航厦。过了安检后就十分唏嘘，香港机场的豪华商业配置，两边随手可见的GUCCI，LV店面都是大门紧闭的，想要揾食都找不到一家开门的店。李家坡真的笑麻，星洲人应该给总加速师送锦旗。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_0034.jpg" alt=""> <img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_0035.jpg" alt=""> <img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_0042.jpg" alt=""> </li></ul></li><li>22:20 登机。<ul><li>值机时候，香港已经挂起了八号风球，机场时不时就会滚动提醒。由于是午夜航班，我去洗手间洗了脸，把全身用纸巾擦了一遍，深圳湾一身臭汗根本没办法洗澡，还要一直持续到第二天差不多晚上11点（阿姆时间15点）。堂堂香港机场，饮水处连纸杯都不提供，我也没有带水杯，就只能忍着到时候去飞机上喝水。在场候机的有一半🀄️人，一半外人。<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5obvvd9m3j21k20u013y.jpg" alt=""> 一上机，就被一家人带两小孩强行换了座，但刚好换到了一排没人的座位，后面三个🀄️女聊天吵麻了，江苏内位一开口就是内味……问了一下，一个去NYU，一个去USC（应该去洛杉矶？），还有一位去UCD（都柏林？）。去UCD那位甚至已经结婚了，就是念完书再去美国跟他老公一起上班……</li><li>跟东亚大地说拜拜了。在这个肉食者皆为神经病的时代，不知道下次回来是几年以后了。</li></ul></li><li><img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5obulky38j21400u07b7.jpg" alt=""> 23:00 起飞，当时已经开始下雨了，在台风中，巨型客机也在不断颤抖着，我把安全带拉到很紧，努力消除失重感。所幸很快就飞离了珠三角空域，受台风影响很小了。<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5obt1ijh3j20sg0lc429.jpg" alt=""> 香港时间早上七点左右在黑海东岸格鲁吉亚上空。土航空餐很一般，之前过高的期待变成了失望……</li></ul><h2 id="2022-8-25-伊斯坦堡转机到阿姆，阿姆到Sittard"><a href="#2022-8-25-伊斯坦堡转机到阿姆，阿姆到Sittard" class="headerlink" title="2022.8.25 伊斯坦堡转机到阿姆，阿姆到Sittard"></a>2022.8.25 伊斯坦堡转机到阿姆，阿姆到Sittard</h2><ul><li>伊斯坦堡时间5 am: 到达伊斯坦堡新机场<ul><li>在瘟疫封锁的桂枝呆了快3年，第一次看到如此<strong>正常的社会</strong>：凌晨五点的伊斯坦堡机场人头济济，鲜有人佩戴口罩，航厦两侧的免税店与凋敝的香港机场HKG形成鲜明的对比。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_0074.jpg" alt=""><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_0075.jpg" alt="">  <img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_0076.jpg" alt=""> </li><li>土耳其机场的wifi还要给钱，只免费提供1个小时，转机进闸排到天荒地老，还没网……</li></ul></li><li>伊斯坦堡时间6:40 am：值机<ul><li>伊斯坦堡飞往阿姆的飞机，这时航班上🀄️人就少得可怜了，只剩下一些土耳其人和荷兰人。</li><li>延误了快一个小时，因为飞机上我也没睡好，延误等待的过程中就一直疯狂昏迷，一直到航班快降落。<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5obkf0fpwj21400u0n23.jpg" alt=""> </li><li>降落到阿姆之前的景色很美，像来到了童话世界，在我的右手边可以看到碧蓝的海和海边的风车。我当时以为那就是Noordwijk（莱顿附近的海边小村），后来看了看地图，应该是阿姆北面的海，在湾里面。<em>草，我后来又看了下，阿姆北面的是<strong>湖</strong>，叫做<a href="https://en.wikipedia.org/wiki/IJmeer" target="_blank" rel="noopener">IJmeer</a>（艾湖, 荷兰语ij发音为艾），荷兰修了很多大坝（dams &amp; causeways)围了湖，如<a href="https://en.wikipedia.org/wiki/Afsluitdijk" target="_blank" rel="noopener">Afsluitdijk</a></em>。</li></ul></li><li>阿姆斯特丹时间10am：降落在Schiphol机场。<ul><li>降落后，首先出飞机会有人看你护照，问你去哪；</li><li>然后会有一个正式的入境窗口，给你护照盖章。</li><li>然后去等行李，大概转了一个小时才转出来……期间我去NS机器买了蓝色匿名OV卡。又极度焦渴，想到荷兰水龙头可以直饮，但去厕所看了眼根本没人在喝水😂，只能强忍口渴继续等行李。</li><li>行李出来后，走无申报通道过海关，是抽查，我根本没被查，以至于我走出来后还在问lsy海关在哪是我走丢了吗……<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_0099.jpg" alt=""> </li></ul></li><li>阿姆斯特丹时间12am：乘坐NS前往Sittard<ul><li>出海关后就是NS Schiphol Airport Station，极简工业风的设计，太潮了，我跟朋友夸了很久。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_0100.jpg" alt=""> <img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_0103.jpg" alt=""> 史基浦站开放式乘车，NS只有柱子，没有闸机，所以等会车上有人验票，验票小哥还挺帅的。因为跟Holland2Stay约了3点的入住，我就没在机场逗留吃饭，只去啊哈（Albert Heijn超市）买了瓶水就走了。啊哈是真的不刷visa，只收现金或荷兰本地卡（Maestro）……<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/3E96FCB8-5872-4B86-80B0-678B31CC7675_1_102_o.jpeg" alt=""></li><li>约一点半到了乌特勒支，1:45到了Boxtel, Boxtel与埃村之间在修路，要换乘接驳大巴（NS Snelbus)。遇到一家土耳其人（？妈妈戴了hijab）送孩子上学，他们给我让了电梯，因为两个大箱子，感受到了民风淳朴。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/679C6223-CC8C-4925-8A51-6E7E37F9E316_1_102_o.jpeg" alt="">两个大箱子的麻烦换乘之后，大概2:07到了埃村，又小跑着去赶了2:17开往Maastricht的IC列车。</li><li>最后15点过准时到了Sittard，PITground的确就在sittard门口，但拖着大箱子感觉还是超远……H2S的小哥也很nice，到这，脱脂之旅就结束了。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_0352.jpg" alt=""></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前情提要：中共的清零政策Omicron变种下失去作用，缺乏自我适应能力的体制开始对全国进行大规模封锁，国际航班减少，2022年暑期出国变得十分艰难。本次润尼德兰我也不得不选择去香港起飞。&lt;/p&gt;
&lt;h1 id=&quot;Timeline&quot;&gt;&lt;a href=&quot;#Timeline&quot; c
      
    
    </summary>
    
    
      <category term="Tweets" scheme="https://gitkeniwo.github.io/categories/Tweets/"/>
    
      <category term="Life Events" scheme="https://gitkeniwo.github.io/categories/Tweets/Life-Events/"/>
    
    
      <category term="nederland" scheme="https://gitkeniwo.github.io/tags/nederland/"/>
    
  </entry>
  
  <entry>
    <title>hexo 提示 Accessing non-existent property &#39;lineno&#39;</title>
    <link href="https://gitkeniwo.github.io/2022-08-19-Accessing-non-existent-property-lineno/"/>
    <id>https://gitkeniwo.github.io/2022-08-19-Accessing-non-existent-property-lineno/</id>
    <published>2022-08-19T17:20:53.000Z</published>
    <updated>2023-01-25T13:27:32.333Z</updated>
    
    <content type="html"><![CDATA[<p><strong>起因</strong>： Hexo一直弹如下警告</p><p><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/20220820012034.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(node:26384) Warning: Accessing non-existent property &#39;lineno&#39; of module exports inside circular dependency</span><br><span class="line">(Use &#96;node --trace-warnings ...&#96; to show where the warning was created)</span><br><span class="line">(node:26384) Warning: Accessing non-existent property &#39;column&#39; of module exports inside circular dependency</span><br><span class="line">(node:26384) Warning: Accessing non-existent property &#39;filename&#39; of module exports inside circular dependency</span><br><span class="line">(node:26384) Warning: Accessing non-existent property &#39;lineno&#39; of module exports inside circular dependency</span><br><span class="line">(node:26384) Warning: Accessing non-existent property &#39;column&#39; of module exports inside circular dependency</span><br><span class="line">(node:26384) Warning: Accessing non-existent property &#39;filename&#39; of module exports inside circular dependency</span><br></pre></td></tr></table></figure><p><strong>解决</strong>：</p><ul><li>见Hexo的<a href="https://github.com/hexojs/hexo/issues/4257" target="_blank" rel="noopener">Issue #4257</a>，是stylus在报错，可追溯至stylus的<a href="https://github.com/stylus/stylus/issues/2534" target="_blank" rel="noopener">Issue #2534</a>，已在stylus <code>@0.54.8</code> 之后版本修复。</li><li>利用 <code>npm ls --depth 2</code> 追杀看看哪些依赖还在用老版本的stylus（tmd这是2020年的issue了）</li><li><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/20220820012625.png" alt=""> </li><li>发现这位还留在<code>@0.54.5</code></li><li>算了，直接<code>npm update stylus</code> 把所有stylus都更新一下。</li><li>更新之后就不报错了。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;起因&lt;/strong&gt;： Hexo一直弹如下警告&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/20220820012034.png&quot; 
      
    
    </summary>
    
    
      <category term="Blogging" scheme="https://gitkeniwo.github.io/categories/Blogging/"/>
    
    
      <category term="hexo" scheme="https://gitkeniwo.github.io/tags/hexo/"/>
    
      <category term="npm" scheme="https://gitkeniwo.github.io/tags/npm/"/>
    
      <category term="nodejs" scheme="https://gitkeniwo.github.io/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>wild-pear-tree</title>
    <link href="https://gitkeniwo.github.io/2022-08-19-wild-pear-tree/"/>
    <id>https://gitkeniwo.github.io/2022-08-19-wild-pear-tree/</id>
    <published>2022-08-19T17:00:58.000Z</published>
    <updated>2022-08-19T17:00:58.282Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>将Hexo从2020 Intel MBP迁移到2021 MBP 14inch Apple Silicon</title>
    <link href="https://gitkeniwo.github.io/2022-08-04-applesilicon-hexo-migration/"/>
    <id>https://gitkeniwo.github.io/2022-08-04-applesilicon-hexo-migration/</id>
    <published>2022-08-04T17:02:04.000Z</published>
    <updated>2023-01-25T13:27:39.328Z</updated>
    
    <content type="html"><![CDATA[<p>昨天14寸mbp(m1 pro)到了之后，欢天喜地的用time machine备份再还原了一下午，谁知道time machine连同intel上的环境一起给还原到了apple silicon这边来，光是要怎么卸载intel的<a href="https://brew.sh" target="_blank" rel="noopener">brew</a>我都搞了半小时，（brew官网提供的<a href="https://docs.brew.sh/FAQ#how-do-i-uninstall-homebrew" target="_blank" rel="noopener">uninstall .sh脚本</a> 狠起来连自己都报错！)，最后我就开机狂按<code>cmd</code>+<code>R</code> 抹盘重装了。</p><p>BTW，淘宝在激活的当天可以买AppleCare+，我是花了¥1385直接在杭州朗朗数码买的，Care就是可以保3年，然后全球联保（去🇳🇱就几乎不用担心了），所以毫不犹豫的就买了，毕竟贵MBP换主板换屏幕都是5000+软妹币吧……Apple Silicon一路下来体验就是：爽！！！作为16-20年mbp模具和intel的受害者，我的2020 intel mbp 13inch 今年在进入4月份以来只能用mac fan control调到all time满速才可使用，更别说16G的内存在最近连看个Safari都会闪退。与此同时，mbp 14寸开了满满一dock的app都安静如鸡，流畅丝滑，内存一路绿灯，这才叫<strong>优雅</strong>啊！！！</p><p>进入正题，由于我在intel mbp 上的hexo是跑在node 12.x版本下的，今天去nodejs主页一看，稳定版都更新到16.x了（贵前端生态真的奇葩）。我依稀记得之前还专门写过因为兼容性问题从node 14.x版本<a href="https://gitkeniwo.github.io/2020-11-24-blog/">回滚的经历</a>（贵nodejs圈用什么管理环境？<a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener">nvm</a>？）。怀着忐忑的心情，从GitHub上拉下来了hexo项目的最新提交，在新mac上配置好<a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token" target="_blank" rel="noopener">github token</a>。先安装<code>hexo-cli</code>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>全局安装package时(<code>-g</code> flag)遇到了permission denied的问题（EACCES)，主要是<code>mkdir &#39;/usr/local/lib/node_modules/hexo-cli&#39; \ mkdir: /usr/local/lib/node_modules/hexo-cli: Permission denied</code>命令权限不够，参照<a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally" target="_blank" rel="noopener">npm的官方文档</a>在 <code>～</code>目录下自建一个npm全局包目录解决。</p><p>进入hexo folder，这时要根据你当时的package.json重新安装各种包<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><br>装好后，npm会让你audit，可以看看，不过没什么用。这时就可以<code>hexo server</code>了，然后居然直接跑起来了，虽然还是会有一些warning，但都是一些dependency不支持了之类的。<br><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/Screen%20Shot%202022-08-05%20at%2001.33.22.png" alt=""></p><p>最后，再根据以前写的<a href="https://gitkeniwo.github.io/2022-02-23-inline-math/">一些博文</a>，开启数学公式一类的插件就可以了($try \space some \space math \space here \space 89^{64}$)，由于包都是重装的，所以这些细枝末节的修改最好也重新走一遍。这样来看，hexo基本上可以很好地迁移到 #apple silicon 这边来。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;昨天14寸mbp(m1 pro)到了之后，欢天喜地的用time machine备份再还原了一下午，谁知道time machine连同intel上的环境一起给还原到了apple silicon这边来，光是要怎么卸载intel的&lt;a href=&quot;https://brew.sh&quot;
      
    
    </summary>
    
    
      <category term="Blogging" scheme="https://gitkeniwo.github.io/categories/Blogging/"/>
    
    
      <category term="hexo" scheme="https://gitkeniwo.github.io/tags/hexo/"/>
    
      <category term="apple-silicon" scheme="https://gitkeniwo.github.io/tags/apple-silicon/"/>
    
      <category term="mbp" scheme="https://gitkeniwo.github.io/tags/mbp/"/>
    
      <category term="apple" scheme="https://gitkeniwo.github.io/tags/apple/"/>
    
  </entry>
  
  <entry>
    <title>荷语语法总结（更新中）</title>
    <link href="https://gitkeniwo.github.io/2022-06-21-dutch-grammar/"/>
    <id>https://gitkeniwo.github.io/2022-06-21-dutch-grammar/</id>
    <published>2022-06-21T06:54:22.000Z</published>
    <updated>2023-03-25T14:35:20.910Z</updated>
    
    <content type="html"><![CDATA[<p>感谢Jeremy 的提醒让我想起我还有这个博客，现在有空了就多来更新一下。</p><p>这篇汇总一下荷语语法。众所周知荷兰语(<em>Nederlands</em>)就是是弱化版的德语(<em>Deustch</em>)，更接近于德国北部和丹麦的低地德语(<em>Plattdeutsch</em>)，主要在荷兰本土和比利时北部弗拉芒大区( <a href="https://zh.wikipedia.org/zh-hans/弗拉芒大區/" target="_blank" rel="noopener">Vlaams Gewest</a> )使用。由于相当于英德杂糅，窝琢磨最近是不是快速过一遍荷语语法<del>（防止到时去AH超市完全看不懂只能靠google拍照翻译像个傻逼）</del>。</p><p>本篇文章将按照<a href="https://www.goodreads.com/author/show/396517.William_Z_Shetter" target="_blank" rel="noopener">William Z. Shetter</a>的 <a href="https://www.goodreads.com/book/show/2540460.Dutch" target="_blank" rel="noopener">Dutch: An Essential Grammar</a> 该书的编排顺序来总结。</p><h1 id="1-Pronunciation"><a href="#1-Pronunciation" class="headerlink" title="1 Pronunciation"></a>1 Pronunciation</h1><p>发音要注意的不是很多，和德语一样也是直接读就好了。</p><p>Vowels</p><ul><li>双写的为长音，读法是单写元音拉长</li><li><code>uu</code>是法语u /y/如<code>perdu</code>, <code>u</code>是德语ü /Y/如<code>für</code>, 分不清这两个<strong>吁</strong>的朋友建议去wikipedia。<ul><li>/Y/ (<a href="https://en.wikipedia.org/wiki/Near-close_near-front_rounded_vowel" target="_blank" rel="noopener">Near-close near-front rounded vowel</a>)</li><li>/y/ (<a href="https://en.wikipedia.org/wiki/Close_front_rounded_vowel" target="_blank" rel="noopener">Close front rounded vowel</a>)</li></ul></li><li><code>ui</code>是 /œy/，如huis (house) 对会法语/œ/的同学来说应该不难。我提供一个练习思路：先发au的音(o~u~)，再把嘴巴横向缩小(比如原来o的嘴形是椭圆，现在变成圆)，因为我们知道/y/这个音就是/u/将嘴巴横向缩小。根据ui与au这个音的对应关系，你也能发现荷语词的ui转写英/德文就是au这个音的对应。</li><li><code>uw</code> 是 /yu/，如Uw （your的尊称，U的所有格）</li><li><code>eu</code> 是 /øː/ 如 leuk (interesting, 一个超级常用的荷语词，leuk/lekker/mooi) </li><li><code>ij</code> 是 /ai/</li></ul><p>Consonants</p><ul><li><code>s</code> 荷兰人很喜欢把s发成近乎s和sch之间的音，即擦音送气(类似韩语<code>ㅅ</code>)。听起来非常有德语感，地理上荷兰也是英国德国的过渡。</li><li><code>z</code> 同理也要送气，这个是人不在荷兰就不太可能知道的小窍门。。</li><li><code>g</code> 最不寻常的就是这个g, 发音为清音/x/或浊音/ɣ/（<a href="https://zh.wikipedia.org/wiki/濁軟腭擦音" target="_blank" rel="noopener">濁軟腭擦音</a>），清音版即德语ch和汉语普通话h（区别于英文h），浊音版就是前者的浊化，在荷兰东部南部和弗拉芒语区常用。</li><li><code>r</code> 大小舌音，北荷兰喜欢发大舌(trilled R)，南荷兰喜欢小舌(gluttory R)，如林堡和布拉班特会发小舌擦音，详见<a href="https://blogs.transparent.com/dutch/pronouncing-the-r-in-dutch/" target="_blank" rel="noopener">此</a>。<ul><li>小舌音分布主要在兰斯塔德(Randstad)<del>wow, city slackers!</del>和比利时，参见 <a href="https://en.wikipedia.org/wiki/Voiced_uvular_trill#/media/File:Uvular_rhotics_in_Europe_updated.png" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Voiced_uvular_trill#/media/File:Uvular_rhotics_in_Europe_updated.png</a></li><li>另一个关于荷兰语r的讨论，有人说大舌音在荷兰更常见 <a href="https://www.reddit.com/r/linguistics/comments/3q5v94/discussion_pronunciation_of_the_letter_r_in_dutch/" target="_blank" rel="noopener">https://www.reddit.com/r/linguistics/comments/3q5v94/discussion_pronunciation_of_the_letter_r_in_dutch/</a></li><li><strong>(荷兰呆半年后update) 最好发大舌音，但不要太弹舌，跟西/意语还是很不一样的。意思一下就到位。</strong></li></ul></li><li><code>sch</code> 不在词尾的话发音为/sx/，注意有个/x/在，与德语不一样。例如史基浦机场Schiphol。</li><li><code>v</code>，南方和弗拉芒区是浊音，其他大部分地区v,f不分的。 <strong>(荷兰呆半年后update) 浊音 + 送气</strong></li><li><code>w</code> <strong>(荷兰呆半年后update) 不是英文的w！是/ʋ/(<a href="https://en.wikipedia.org/wiki/Voiced_labiodental_approximant" target="_blank" rel="noopener">Voiced labiodental approximant</a>)</strong> 发音要领：发v，但特别轻，轻到你不用咬嘴唇，而是微微擦过就好。</li><li><code>ch</code> 是/x/，在法语外来词发法语音， <code>tj</code>是 /tʃ/，</li><li><code>b</code>, <code>d</code>在词尾发清音，如heb</li><li><code>en</code> 在词尾去<code>n</code>，如大多数动词的复数形式。</li></ul><p>Assimilation</p><ul><li>通音(f, s, ch, g, v, z) +塞音(b, d, p, k, t)根据后面的塞音定清浊 <blockquote><p>hoofden [hoovden], ijsbeer [ijzbeer]</p></blockquote></li><li>塞音+塞音，一个浊则全部浊 <blockquote><p>uitbreiden [uidbreinden], op duizenden [ob duizenden]</p></blockquote></li><li>通音+通音，全清<blockquote><p>afzetten [afsetten], het is veel [het is feel]</p></blockquote></li><li>b p词尾发清音ik heb veel [ik hep feel]</li><li>连音浊化 lees ik [leez ik]</li></ul><h1 id="2-Spelling-Rules"><a href="#2-Spelling-Rules" class="headerlink" title="2 Spelling Rules"></a>2 Spelling Rules</h1><p>拼写规则相当重要，但也好掌握，重点就是哪些词需要双写。</p><h2 id="2-1-长短元音与闭音节"><a href="#2-1-长短元音与闭音节" class="headerlink" title="2.1 长短元音与闭音节"></a>2.1 长短元音与闭音节</h2><p>Short Vowels(<em>只</em>出现在闭音节)：</p><ul><li>闭音节单辅音结尾要双写 man - mannen, vul - vullen (fill)</li><li>双辅音结尾不用双写 arm - armen, kerk - kerken (church)</li></ul><p>Diphthongs / Long vowels（<em>可</em>出现在开音节）</p><ul><li><p>Long vowels 在开音节丢掉一个字母</p><blockquote><p>laan - lanen (avenues), boom - bomen (trees)<br>buur - buren (neighbors)<br>注意 zwaar-&gt; zwaarder 而 groot-&gt;groter</p></blockquote></li><li><p>开音节的单写元音都是长音</p><blockquote><p>sla (lettuce), zo (so), nu (now)</p></blockquote><p>  ㊟其中<code>ee</code> 总是要写成写成双写<code>zee</code>，这是为了区别不重度的单写<code>e</code> (ze, je, we) </p></li><li><p>闭音节的长音双写</p><blockquote><p>paarden (horses), feesten (parties)<br>hoofden (heads), buurten(neighborhoods)</p></blockquote></li><li><p><code>aai</code>, <code>ooi</code>, <code>eeu</code>,<code>oei</code>, <code>ieu</code> 不drop字母</p><blockquote><p>taai - taaie (tough), mooi - mooie (nice)<br>leeuw - leeuwen (lion), groei - groeien (grow)</p></blockquote></li></ul><p>㊟掌握拼写规则后下面的词组就能区分了</p><blockquote><p>zaken (zaak, affairs&amp;things) vs. zakken (zak, pockets (sack))<br>bomen (boom, trees) vs. bommen (bom, bombs)<br>manen (maan, moon) vs. mannen (men)<br>spelen (het speelt, they play),<br>spellen (they spell) </p></blockquote><h2 id="2-2-f-v-s-z"><a href="#2-2-f-v-s-z" class="headerlink" title="2.2 f / v, s / z"></a>2.2 <code>f</code> / <code>v</code>, <code>s</code> / <code>z</code></h2><p>与英文一样，加元音后缀时 f-&gt;v, s-&gt;z</p><blockquote><p>raaf - raven (ravens), geloof - geloven (they believe)<br>lief - lieve, serieus - serieuze, grijs - grijze/r</p></blockquote><p>not applicable</p><ul><li><p>s前为p,t,k</p><blockquote><p>rups -&gt; rupsen (caterpillars)<br>fietsen -&gt; fietsen (bikes)<br>heks -&gt; heksen (witches)</p></blockquote><p>  注意 vers -&gt; verzen , gans -&gt; ganzen (geese), huis -&gt; huizen</p></li><li><p>双写不变化</p><blockquote><p>stof -&gt; stoffen (materials)<br>das -&gt; dassen (neckties)</p></blockquote></li><li><p>特例</p><blockquote><p>biograaf - biografen, elf - elfen<br>kous - kousen (stockings), dans - dansen</p></blockquote></li></ul><h1 id="3-复数变化"><a href="#3-复数变化" class="headerlink" title="3 复数变化"></a>3 复数变化</h1><h2 id="3-1-加-en"><a href="#3-1-加-en" class="headerlink" title="3.1 加-en"></a>3.1 加<code>-en</code></h2><ul><li>大多数词都是en复数形式</li><li><p>不规则<code>-en</code></p><ul><li><p>短音变长音</p><blockquote><p>bad - baden /a:/ (bath)<br>dag - dagen (days)<br>dak - daken (roofs)<br>oorlog - oorlogen (wars)<br>god - goden (gods)<br>bedrag - bedragen (amount)<br>druif - druiven</p></blockquote></li><li><p>特例</p><blockquote><p>stad - steden<br>schip -schepen (ships)<br>lid - leden (members)<br>dag - dagen</p></blockquote></li><li><p>加<code>-eren</code></p><blockquote><p>been - beenderen (bones) !(benen, legs)<br>blad - bladeren (leaves) !bladen(trays, sheets)<br>ei - eieren (eggs)<br>kind - kinderen<br>lied - liederen (songs)<br>volk - volkeren<br>koe - koeien</p></blockquote></li></ul></li></ul><h2 id="3-2-加-s"><a href="#3-2-加-s" class="headerlink" title="3.2 加-s"></a>3.2 加<code>-s</code></h2><ul><li>主要是diminutives，体现为<code>-je</code>这个后缀<blockquote><p>huis -&gt;huisjes (小房子们)<br>meijes (小女孩们)<br>dubbeltjes （十分钱的硬币们）</p></blockquote></li><li>-el, -em, -en, -er, -aar, -erd, -e 结尾<blockquote><p>tafels (table), tantes(aunts)</p></blockquote></li><li>外来词，其中aeiou结尾的要加撇号<blockquote><p>taxi’s, firma’s, auto’s, paraplu’s(umbrellas)<br>microfoons, computers, romans(小说)</p></blockquote></li><li>特例+s日耳曼语词 ooms(uncles), broers(brothers), zoons(sons)</li></ul><h2 id="3-3-其他"><a href="#3-3-其他" class="headerlink" title="3.3 其他"></a>3.3 其他</h2><ul><li>拉丁词尾 <code>-us</code>变 <code>-i</code>这个不用说</li><li><code>-or</code>有两种变化，其中en形式重音移动到en前面那个音节</li><li><code>-heid</code>变为<code>-heden</code><blockquote><p>mogelijkheid -&gt; mogelijkheden (possibilities)<br>gelegenheid -&gt; gelegenheden (opportunities)</p></blockquote></li></ul><h1 id="4-冠词-指示代词"><a href="#4-冠词-指示代词" class="headerlink" title="4 冠词 指示代词"></a>4 冠词 指示代词</h1><h2 id="4-1-定冠词-de-het"><a href="#4-1-定冠词-de-het" class="headerlink" title="4.1 定冠词 de, het"></a>4.1 定冠词 <code>de</code>, <code>het</code></h2><p>荷语定冠词很好理解，<code>de</code> 就是合并了德语的der和die两个有性别词性(commen gender)，<code>het</code>就是das中性(neuter), het简写为<code>&#39;t</code>。</p><ul><li><p>所有的diminutives都是中性的，这也是为什么小女孩是het.</p><blockquote><p>de jongen -&gt; het jongentje<br>het huis -&gt; het huisje</p></blockquote></li><li><p>复数都用de，对应于德语都变成了die</p><blockquote><p>de kat - de katten, de straat - de straten<br>het huis - de huizen, het huisje - de huisjes</p></blockquote><p>  ⚠️复习拼写变化和复数加谁哈</p></li></ul><h2 id="4-2-不定冠词een"><a href="#4-2-不定冠词een" class="headerlink" title="4.2 不定冠词een"></a>4.2 不定冠词<code>een</code></h2><p>只有这一个，不论词性。复数不加。</p><ul><li>een (één)也是荷语数字一，对应德语ein，很好理解吧</li></ul><h2 id="4-3-指示代词"><a href="#4-3-指示代词" class="headerlink" title="4.3 指示代词"></a>4.3 指示代词</h2><ul><li>单数时 common gender与中性有别<ul><li>common gender: deze/die (对应德语diese)</li><li>neuter: dit/dat （对应德语dat）</li></ul></li><li>复数又统一了，用common gender的那对 deze/die <img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/20220621162659.png" alt=""><br>  单词：tuin(garden), gebouw(building)</li><li>指示代词可以单用（类似diese, dat)<blockquote><p>Dit is mijn oudste zus. (showing pictures) Zij studeert aan de universiteit van Delft.<br>This is my oldest sister. She is studying at the university of Delft.</p></blockquote></li><li>但操蛋的是形容一群人，group，band时候荷兰人又会用中性单数+动词复数，注意下！！！<blockquote><p>Dat zijn mijn kinderen. (Those are my children.)<br>Zij houden van harde muziek. (They love loud music.)<br>Wie is dat? Het zijn de buren. （Who is that? It’s the neighbors.）</p></blockquote></li></ul><p>原书插图助记 <img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/20220621163408.png" alt=""></p><h1 id="5-人称代词"><a href="#5-人称代词" class="headerlink" title="5 人称代词"></a>5 人称代词</h1><h2 id="5-1人称变化"><a href="#5-1人称变化" class="headerlink" title="5.1人称变化"></a>5.1人称变化</h2><p>直接上表感觉好一点<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/20220621163521.png" alt=""></p><ul><li>分为重读<code>ij</code>和非重读<code>e</code>两种</li><li>u, jij, jullie, <ul><li>u对应sie或者vous🤔尊称，单复数都是u</li><li>jij, jullie就随便点了</li></ul></li></ul><h2 id="5-2现在时变位"><a href="#5-2现在时变位" class="headerlink" title="5.2现在时变位"></a>5.2现在时变位</h2><p>荷语动词变位超简单，</p><ul><li>动词有主干(stem)，主干加en变复数要遵循第二章的拼写规则。</li><li>第一人称单数ik直接加主干就行了</li><li>二三人称单数+<code>-t</code>，其中二人称单数疑问句drop <code>-t</code> <ul><li>这条规则原书表述为<em>When jij/je follows the verb and its subject, the verb always drops the ending -t, but not the t of the stem (zit je, praat je):</em></li></ul></li><li>复数都是-en，对比法语的（nous -ons, vous -ez, ils/elles -ent)</li><li>u（尊称）不论单复数都是+动词单数形式</li><li>hij在动词后面h不发音（跟英文口语很像）</li></ul><h2 id="5-3-一般疑问句"><a href="#5-3-一般疑问句" class="headerlink" title="5.3 一般疑问句"></a>5.3 一般疑问句</h2><h2 id="5-4-词序"><a href="#5-4-词序" class="headerlink" title="5.4 词序"></a>5.4 词序</h2><h1 id="6-Special-verbs-amp-Imperatives"><a href="#6-Special-verbs-amp-Imperatives" class="headerlink" title="6  Special verbs &amp; Imperatives"></a>6  Special verbs &amp; Imperatives</h1><h2 id="6-1-Special-verbs"><a href="#6-1-Special-verbs" class="headerlink" title="6.1 Special verbs"></a>6.1 Special verbs</h2><p>ending in <code>-t</code> or <code>-d</code>: t结尾二三人称单数不另外加t, d结尾正常变化</p><ul><li>zitten (to sit)</li><li>weten (to know)</li><li>rijden</li><li>houden</li></ul><p>ending in <code>-n</code></p><ul><li>gaan (to go): ga-gaat-gaan (ga jij?)</li><li>doen (to do): do-doet-doen</li><li>staan (to stand)</li><li>slaan (to strike)</li><li>zien (to see)</li></ul><p>komen (to come): kom-komt-komen 单数是短音，复数为长音</p><p>hebben - have(eng.) - haben(de.)<br>zijn - be(eng.) - sein(de.)</p><h2 id="6-2-Imperatives"><a href="#6-2-Imperatives" class="headerlink" title="6.2 Imperatives"></a>6.2 Imperatives</h2><p>the imperative is merely the <strong>stem</strong> of the verb</p><blockquote><p>Kijk eens! (Look!)<br>Wacht eens even! (Wait a minute)<br>Ga weg! (Get out!)</p></blockquote><p>More politeness礼貌版本：+<code>u</code></p><blockquote><p>Komt u binnen!<br>Gaat u zitten (go have a seat)</p></blockquote><p>More peremptoriness 粗鲁版本： use <code>-en</code> form</p><blockquote><p>Doorlopen! (close the door!)<br>Luisteren (Listen!)<br>Opletten (Pay attention!)</p></blockquote><h1 id="7-Adjectives"><a href="#7-Adjectives" class="headerlink" title="7 Adjectives"></a>7 Adjectives</h1><h2 id="7-1-Basic-Rules-Form-of-adjs"><a href="#7-1-Basic-Rules-Form-of-adjs" class="headerlink" title="7.1 Basic Rules: Form of adjs"></a>7.1 Basic Rules: Form of adjs</h2><ul><li>basic form: 做表语</li><li><code>-e</code> form: before noun (as attributives)<ul><li>Exception: Neuter + Singular + 不定冠词(indefinite) / 无冠词(no article) / elk, ieder, welk<blockquote><p>Groen gras groeit op een groot plein.<br>Zij heeft een rond gezicht(face).<br>⚠️ de words are not applicable to this rule (<em>een ronde tafel</em>)</p><ul><li>een klein kind</li></ul></blockquote></li></ul></li></ul><p>Exception</p><ul><li>不加<code>-e</code>的adj<ul><li><code>-en</code>:<ul><li>wollen, katoenen(cotton), gouden(golden), zilveren<ul><li>Dat is een mooie, zilveren ring.</li></ul></li></ul></li><li>外来语 </li><li>elk, ieder, welk + neuter singular nouns</li><li>Veel, meer, weinig, minder, geen + neuter singular nouns (as they also form a indefinite context)<ul><li>Er is veel Belgisch bier te koop in de VS.</li><li>Je kunt niet veel Belgische jenever in Amerika kopen.</li></ul></li><li>Idiomatic combinations<ul><li>het dagelijks leven</li><li>het Centraal Station</li><li>het openbaar vervoer (public transportation)</li><li>het voortgezet onderwijs</li><li>het Academisch Ziekenhuis</li><li>het Nederlands elftal</li><li>het voltooid deelwoord</li></ul></li></ul></li><li>加<code>-s</code>：iets/wat/niets (something/what/nothing) + adj （置后）<ul><li>Hij ziet iets moois in elke situatie.</li></ul></li></ul><h2 id="7-2-Adverbs"><a href="#7-2-Adverbs" class="headerlink" title="7.2 Adverbs"></a>7.2 Adverbs</h2><h2 id="7-3-Comparatives-and-superlatives-er-st"><a href="#7-3-Comparatives-and-superlatives-er-st" class="headerlink" title="7.3 Comparatives and superlatives: -er, -st"></a>7.3 Comparatives and superlatives: <code>-er</code>, <code>-st</code></h2><ul><li>groot - groter - grootst (注意拼写 长元音drop字母)</li><li>任意长度的adj都是加这些ending（区别英文）</li><li><code>-r</code>结尾单词加<code>-der</code>/<code>-st</code><ul><li>zwaar - zwaarder</li></ul></li><li>Irregulars<ul><li>goed beter best</li><li>veel meer  meest</li><li>weinig minder minst</li><li>graag, liever, het liefst (gladly, 德语gern)<ul><li>Wij spelen graag gitaar.</li><li>Zij drinkt liever kofﬁe dan thee. (prefer)</li><li>Hij leest het liefst een boek in bed. (likes best)</li></ul></li></ul></li><li>比较级 最高级也要加<code>-e</code><ul><li>het mooiere schilderij(painting)</li><li>de oudste boom</li></ul></li><li>the superlatives as adverbs 最高级用作副词，书面不加-e，口语可加-e<ul><li>Deze pullover is het warmst(e).</li></ul></li><li>the superlatives as nouns: de/het + <code>-ste</code><ul><li>Van deze auto’s neem ik de goedkoopste (auto).</li></ul></li><li>dan = than</li><li>(net) zo …(形容词原形) als … = as… as…<ul><li>Hij zingt bijna (net) zo goed als Piet.<ul><li>bijna(almost)</li></ul></li></ul></li></ul><h1 id="8-宾格-反身代词-不定代词"><a href="#8-宾格-反身代词-不定代词" class="headerlink" title="8 宾格 反身代词 不定代词"></a>8 宾格 反身代词 不定代词</h1><p>荷语的格跟英文一样，没有德语的第三格</p><p><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h4etacdiuwj21ak0jqq57.jpg" alt=""></p><h2 id="8-3-间接宾语"><a href="#8-3-间接宾语" class="headerlink" title="8.3 间接宾语"></a>8.3 间接宾语</h2><h2 id="8-4-反身代词-Reflexive"><a href="#8-4-反身代词-Reflexive" class="headerlink" title="8.4 反身代词 Reflexive"></a>8.4 反身代词 Reflexive</h2><p><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h4ete9p5nij21b00i8wh2.jpg" alt=""></p><p>当宾语为主语自己时，需要用反身代词。</p><ul><li>grammatically reﬂexive<br>  - </li><li>exclusively reflexive<ul><li>Hij vergist zich.（He makes an error.）</li><li>有点类似英文的 betake, bethink</li></ul></li></ul><p>e.g. zich verbazen(suprize), zich verheugen op(look forward), zich vergissen(make a mistake/error), zich herinneren(remember), zich veroorloven(allow, afford)</p><ul><li>Zij verbaast zich over de mooie bloemen in het park.</li><li>Wij verheugen ons op het feest.</li><li>Hij vergiste zich in de naam.</li><li>Jullie herinneren je niets meer van die reis.</li><li>U kan zich niet veroorloven zo’n fout te maken.<h2 id="8-5-Indeﬁnite-pronouns"><a href="#8-5-Indeﬁnite-pronouns" class="headerlink" title="8.5 Indeﬁnite pronouns"></a>8.5 Indeﬁnite pronouns</h2></li><li>allen: all people</li><li>alles: everything</li><li>alle, al de: all the</li><li>allemaal</li><li><p>allebei, beide, beiden</p><ul><li></li><li>注：Beiden is only used for people:</li></ul></li><li><p>iedereen</p></li><li><p>(n)iemand: “nobody,” “anybody”</p></li><li><p>de meeste: “the most”</p></li><li>de meesten: “most of the people” (only used for people):<ul><li>Note: When you add an -en to adjectives such as blank, zwart, oud, gehandicapt, etc., you turn the adjective into a noun that has the meaning “people who are . . .”:<ul><li>De zwarten leven vreedzaam samen met de blanken in deze streek.(The black people live in peace with the white people in this area.)</li><li>Er zijn gratis parkeerplaatsen voor gehandicapten in de stad. (There are free parking spaces for the handicapped in the city.)</li></ul></li></ul></li></ul><h1 id="9-物主代词"><a href="#9-物主代词" class="headerlink" title="9 物主代词"></a>9 物主代词</h1><p><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/20220721200530.png" alt=""></p><h1 id="10-数字-日期-货币-度量-时间"><a href="#10-数字-日期-货币-度量-时间" class="headerlink" title="10  数字 日期 货币 度量 时间"></a>10  数字 日期 货币 度量 时间</h1><h2 id="10-1-Numbers"><a href="#10-1-Numbers" class="headerlink" title="10.1 Numbers"></a>10.1 Numbers</h2><p>Cardinal Numbers</p><ul><li>十几：<code>-tien</code>  对应 <code>-teen</code>,  <code>-zien (de.)</code></li><li>几十：<code>-tig</code> 对应 <code>-ßig\-zig</code>「特呵！」不是「刺嘻」了，30依然是<code>-tig</code></li><li>几十几：个位+<code>en</code>+十位 <code>eenentwintig</code> 对应德语 如 <code>einsundzwanzig</code></li><li>百：<code>honderd</code> 对应 <code>hunderd</code></li><li>千：<code>duizend</code> 对应 <code>tausend</code></li><li>1,000,000: één miljard</li><li>Irregular spelling for <code>veertien</code>, <code>veertig</code>, <code>dertien</code>, <code>dertig</code> , <code>tachtig</code></li><li>zeven, /z/; zeventig /s/; <code>e</code>-&gt;<code>eu [ø]</code> 发音改变，区别于negen</li><li><code>161</code>: honderdeenenzestig, <code>1003</code>: duizend drie 一百一千不加één</li><li><code>.</code>区别千位  ；<code>,</code>作为小数点<ul><li>1.333 duizend driehonderd drieëndertig</li><li>4.5 viereneenhalf; 1.5 anderhalf; 0.0 nul komma nul</li></ul></li></ul><p>Ordinal Numbers<br><img src="https://i.imgur.com/ylwWzO8.png" alt="https://i.imgur.com/ylwWzO8.png"></p><ul><li><code>-ste</code> ending: eerste; achtste</li><li><code>tweede</code>: double e spelling though in open syllable 拼写规则特例</li><li><code>1ste</code>这种缩写也有，但现在较为少见了</li></ul><h2 id="10-2-Dates"><a href="#10-2-Dates" class="headerlink" title="10.2 Dates"></a>10.2 Dates</h2><p>Days of the week:</p><ul><li>maandag, dinstag, woenstag, dondertag, vrijdag, zaterdag, zondag<br>Months (de maanden)</li><li>januari, februari, maart, april, mei, juni</li><li>juli, augusts, september, oktober, november, december</li><li>注：not capitalizied</li></ul><p>日期表示</p><ul><li>主要用Cardinal<ul><li>één januari (Jan. 1st)</li><li>vrijdag, veertien februari</li><li><strong>op</strong> zevenentwintig maart</li></ul></li><li>偶尔也用Ordinal<ul><li>Het is vandaag de achtste april.</li></ul></li><li>没有de maand 就必须用序数词了<ul><li>-Wanneer is je examen?</li><li>-Op de zevenentwintigste.</li></ul></li><li>写日期<ul><li>25 juni 1997</li><li>25-6-1997</li></ul></li></ul><p>年份</p><ul><li>before 2000: 1492 veertien (honderd) tweeënnegentig</li><li>after 2000: <ul><li>2001 tweeduizend één</li><li>2035 tweeduizend vijfendertig / twintig vijfendertig?</li></ul></li></ul><p>日期提问：</p><ul><li>Wanneer ben je geboren?</li><li>Op welke dag ben je jarig?</li><li>Welke dag is het vandaag?</li><li>In welk jaar leven we nu?</li></ul><h2 id="10-3-度量衡"><a href="#10-3-度量衡" class="headerlink" title="10.3 度量衡"></a>10.3 度量衡</h2><p>货币： 现在是欧元euro；以前弗拉芒区用belgian frank; 荷兰用gulden (gold)</p><p>度量：</p><p>Dat is dan vijftig euro samen. （<strong><em>samen</em></strong>: together)</p><p>Idiomatic:</p><ul><li>Zij zijn met z’n tweeën.</li><li>Wij zijn met ons drieën.</li><li>De hoeveelste is het vandaag?</li></ul><h2 id="10-4-时间"><a href="#10-4-时间" class="headerlink" title="10.4. 时间"></a>10.4. 时间</h2><p><img src="https://i.imgur.com/RduMnDb.png" alt=""></p><p>uur(hour); quarter(kwart)</p><p>Hoe laat is het?<br><strong><em>Het</em></strong> is ….:</p><ul><li>12.15 / kwart <strong><em>over</em></strong> twaalf </li><li>4.45 / kwart <strong><em>voor</em></strong> 5</li><li>zes uur / six o’clock</li><li>11.30 / half twaalf ⚠️ 是12点，是halfway towards 12的意思。。<br>Om (at):</li><li>Hoe laat komen jullie?</li><li>Om vijf uur. </li></ul><p>15min 以前 over +当前小时<br>15min 以后 voor half / overhalf /voor +下个小时<br>Over half:</p><ul><li>Het is vijf <strong><em>over half</em></strong> zes.  半小时-5min 到6点: 5:35</li><li>Hij gaat om tien over half tien. 9:40 半小时-10min到10点<br>Voor half:</li><li>Jij eet elke dag om vijf voor half zeven. 6.25 半小时+5min到7点 </li><li>Ik kom je om tien voor half acht halen 7.20 半小时+10min到八点<br>评价：神他妈。。。</li></ul><p>24小时制：</p><ul><li>16.00 u = 4pm, 口语一般说vier uur ’s middags.</li><li>表示精密的时间 出发时间才用24小时<ul><li>De trein vertrekt om 17.07u.(zeventien uur zeven)</li></ul></li><li>口语通常省略uur，除非是整点<ul><li>De winkel sluit om 16.30 u. (half vijf) (4:30pm)</li><li>Het feest begint om 19.00 u. (zeven uur)</li></ul></li></ul><p>介词：</p><ul><li>tegen: by<ul><li>Hij komt tegen zeven uur.</li></ul></li><li>omstreeks, rond: <ul><li>Zij vertrekt met de bus omstreeks/rond vijf over zeven. (vertrekken: to leave)</li></ul></li><li>voor: before<ul><li>Kan je voor tien uur komen?</li></ul></li><li>na: after<ul><li>Na vijf minuten viel hij in slaap.</li></ul></li></ul><p>搭配：</p><ul><li>Een uur of：around<ul><li>Hij werd wakker om een uur of half zeven.</li></ul></li><li><code>van-</code> + 时间: 今天……<ul><li>vandaag (today): Vandaag gaan wij naar de markt.</li><li>vanochtend (this morning): Vanochtend ﬂoten de vogels.</li><li>vanmiddag: Vanmiddag ga ik naar een lezing. (lezing: lecture)</li><li>vanavond: Vanavond ga je naar een concert.</li></ul></li><li><code>&#39;s ...s</code> 表示in the … / every …<ul><li>Ik lees de krant altijd ’s ochtends. (altijd: always)</li><li>We drinken ’s avonds een glas wijn.<ul><li>We drink a glass of wine in the evening.</li></ul></li><li>Zij doen ’s nachts alle deuren op slot.<ul><li>They lock all the doors at night.</li></ul></li></ul></li><li>op zaterdag = zaterdags, on Saturdays<ul><li>只有<code>’s maandags</code>, <code>’s woensdags</code> 不drop<code>&#39;s</code>，其他的礼拜日期都去掉了’s</li></ul></li><li>每一天 each day: elke dag</li><li>间隔…… every other day: om de twee dagen</li><li>每……几次 once a week: één <code>keer</code> per week<ul><li>twee keer per maand: 2 times a month</li></ul></li></ul><h1 id="11-amp-12-The-past-tense-过去式"><a href="#11-amp-12-The-past-tense-过去式" class="headerlink" title="11&amp;12 The past tense 过去式"></a>11&amp;12 The past tense 过去式</h1><p>弱变化动词不变音<br>强变化动词变音</p><h2 id="A-Weak-Verbs"><a href="#A-Weak-Verbs" class="headerlink" title="A.Weak Verbs"></a>A.Weak Verbs</h2><p>一般过去式: stem + <code>t/d</code> + e 单数(ik jij hij zij het u)/ en 复数 (wij jullie zij) </p><p>koken - k<em>oo</em>kte<br>horen - h<em>oo</em>rde</p><ul><li><code>t</code> or <code>d</code>?<ul><li><code>t</code> for voiceless consonants(t, k, f, s, ch, p)</li><li><code>d</code> for voiced consonants<ul><li>bestellen - bestelde (to order)</li><li>bouwen - bouwde (to build)</li><li>studeren - studeerde (to study) double <code>e</code></li><li>schudden - schudde </li><li>antwoorden - antwoordde</li></ul></li><li><code>-v</code>, <code>-z</code> 变为 f, s 加 <code>d</code><ul><li>leven (to live) - leefde</li><li>geloven (to believe) - geloofde</li><li>reizen (to travel)  - reisde</li><li>glanzen (to shine) - glansde</li></ul></li></ul></li></ul><p>一个有趣的注：关于兰斯塔德(Randstad)地区的g发音</p><blockquote><p>Most Dutch speakers in the Randstad area pronounce the sound spelled <code>g</code> in the same way as that spelled <code>ch</code>, which would make it seem as though a verb like leggen ought to have the ending <code>-te</code>, as does lachen. The <code>-de</code> ending, however, reﬂects the fact that for many Dutch speakers, particularly in the southern provinces and in the whole of Dutch-speaking Belgium, the sounds <code>g</code> (voiced) and <code>ch</code> (voiceless) are as sharply distinguished from one another as are v and f, or z and s.</p></blockquote><p>过去分词: <code>ge</code> + stem + <code>d/t</code></p><ul><li>不同于过去式，过去分词加<code>d/t</code>不双写（因为双写不出现在词尾）<br>praten - gepraat</li><li>发音上来说词尾<code>-d/-t</code>是相同的</li><li>be-, er-, ge-, her-, ont-, ver-. 这六个前缀的动词不加<code>ge</code><ul><li>bedanken - bedankte - bedankt</li><li>erkennen - erkende - erkend (to admit)</li><li>geloven - geloofde - geloofd (to believe)</li><li>herhalen - herhaalde - herhaald (to repeat) 双写</li><li>ontmoeten - ontmoette - ontmoet (to meet)</li><li>verklaren - verklaarde - verklaard (to explain)</li></ul></li><li><code>er-</code>只在erkennen，ervaren 两个单词出现</li><li><code>her-</code> 意思是again，herbouwen rebuild; herhalen resay; herrijzen rise again</li></ul><p>注：荷语的<code>-eren</code> 单词也要加<code>ge</code>，德语的<code>-ieren</code>单词是不加<code>ge</code>的，如studieren-studiert（而不是gestudiert）<br>荷语：noteren - genoteerd; activeren - geactiveerd; digitaliseren- gedigitaliseerd<br>德语：diskutieren - diskutiert; markieren - markiert; existieren - existiert</p><p>现在完成式：<br>(… 状语 +) hebben / zijn +宾语/状语+ 过去分词</p><ul><li>Hij heeft een huis gebouwd.</li><li>Bij de kruidenier hebben wij wat kaas besteld.</li><li>Ik heb hem vaak in de stad in de bibliotheek ontmoet.</li><li>Ik ben naar huis gewandeld. （wandelen (wandeln de.))</li></ul><h2 id="B-Strong-Verbs"><a href="#B-Strong-Verbs" class="headerlink" title="B. Strong Verbs"></a>B. Strong Verbs</h2><p>7类元音变音(umlaut, vowel changes)：<br>语言学的研究，参见 <a href="https://zhuanlan.zhihu.com/p/387221511" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/387221511</a></p><h1 id="15-未来时-进行时"><a href="#15-未来时-进行时" class="headerlink" title="15 未来时/进行时/"></a>15 未来时/进行时/</h1><h2 id="15-1-Future-tense"><a href="#15-1-Future-tense" class="headerlink" title="15.1 Future tense"></a>15.1 Future tense</h2><p>三种方式表达未来进行的动作：1)一般现在时；2）<code>gaan</code> + inf.; 3)<code>zullen</code> (more formal)</p><blockquote><p>Dat doe ik morgen. <em>present tense often comes with future adverbs</em><br>Zij komen pas later.<br>Volgend jaar trouwen we.<br>Zij ging weer liggen. (ging-&gt;gang) <em>She lay down again</em><br>Wij zullen naar de stad moeten gaan. </p></blockquote><p><code>zou/zouden</code> 为 <code>zullen</code> 的过去时，类似英文虚拟语气would. <code>Zou(den) + kunnen/moegen/willen + inf.</code> 也是委婉提问的方式(TUe的荷语老师说是<em>max politeness</em>，荷语中没有比它更polite的了)，因为现代荷兰社会本身没有什么等级观念，所以千万不要对朋友用zou(den)不然会被呛死。</p><blockquote><p>Dat zou hij nooit doen. <em>That he would never do.</em><br>Eigenlijk moest het morgen klaar zijn. <em>It really ought to be ready tomorrow.</em></p></blockquote><p><code>zullen</code> 还近似 <code>shall</code>, 可以用来提出邀请, 或是make a promise, 或是<em>imagine something</em></p><blockquote><p>Zullen we een kopje kofﬁe gaan drinken?<br>Ik zal je zeker helpen.<br>Het zal je maar gebeuren. <em>Imagine if that happened to you.</em><br>Je zult maar met die vent getrouwd zijn! <em>Can you imagine being married to that guy?!</em></p></blockquote><h2 id="15-2-现在时"><a href="#15-2-现在时" class="headerlink" title="15.2 现在时"></a>15.2 现在时</h2><ul><li><code>zijn</code> + <code>aan het</code> + <code>inf.</code></li><li><code>bezig zijn</code> + 1) <code>te</code> + <code>inf.</code>; 2) <code>met</code></li></ul><blockquote><p>Wij zijn op dit moment aan het voetballen.<br>Ik ben een brief aan ’t schrijven.<br>Hij is televisie aan het kijken.</p><p>Hij is bezig de klok te repareren.<br>Hij is bezig met de reparatie van de klok.</p></blockquote><h2 id="15-3-现在分词"><a href="#15-3-现在分词" class="headerlink" title="15.3 现在分词"></a>15.3 现在分词</h2><p>动词原形 + <code>d(e)</code> 形成现在分词。</p><h1 id="17-可分动词-Separable-Prefixes"><a href="#17-可分动词-Separable-Prefixes" class="headerlink" title="17 可分动词 Separable Prefixes"></a>17 可分动词 Separable Prefixes</h1><h1 id="Bonus-Deustch-Rechtschreibung-转写表"><a href="#Bonus-Deustch-Rechtschreibung-转写表" class="headerlink" title="Bonus:  Deustch Rechtschreibung 转写表"></a>Bonus:  Deustch Rechtschreibung 转写表</h1><p>之前看<a href="https://german.stackexchange.com/questions/28807/could-you-spell-dutch-according-to-the-german-system" target="_blank" rel="noopener">StackExchange</a>上有人尝试用德文正字法转写了荷语基础词汇，正好，我也打算维护一个荷/德/英同源词相互转写的Google Sheet，方便记忆A2/B1单词。</p><p>过段时间我会把sharesheet好好设计下，链接po在下面。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;感谢Jeremy 的提醒让我想起我还有这个博客，现在有空了就多来更新一下。&lt;/p&gt;
&lt;p&gt;这篇汇总一下荷语语法。众所周知荷兰语(&lt;em&gt;Nederlands&lt;/em&gt;)就是是弱化版的德语(&lt;em&gt;Deustch&lt;/em&gt;)，更接近于德国北部和丹麦的低地德语(&lt;em&gt;Plat
      
    
    </summary>
    
    
      <category term="Academical Hack" scheme="https://gitkeniwo.github.io/categories/Academical-Hack/"/>
    
      <category term="Languages" scheme="https://gitkeniwo.github.io/categories/Academical-Hack/Languages/"/>
    
    
      <category term="nederlands" scheme="https://gitkeniwo.github.io/tags/nederlands/"/>
    
      <category term="grammar" scheme="https://gitkeniwo.github.io/tags/grammar/"/>
    
  </entry>
  
</feed>
