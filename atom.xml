<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>The Last Day of Summer</title>
  
  <subtitle>2020s retrospected.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gitkeniwo.github.io/"/>
  <updated>2023-02-09T12:39:52.836Z</updated>
  <id>https://gitkeniwo.github.io/</id>
  
  <author>
    <name>ケニヲ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>fly.io 的使用体验</title>
    <link href="https://gitkeniwo.github.io/2023-02-08-fly-io-tutorial/"/>
    <id>https://gitkeniwo.github.io/2023-02-08-fly-io-tutorial/</id>
    <published>2023-02-08T14:27:59.000Z</published>
    <updated>2023-02-09T12:39:52.836Z</updated>
    
    <content type="html"><![CDATA[<p>fly.io 类似于heroku，能帮忙托管运行App，是一种<a href="https://zh.wikipedia.org/wiki/平台即服务" target="_blank" rel="noopener">PaaS</a>服务。昨天我在尝试自搭(<a href="https://yunohost.org/oc/selfhosting" target="_blank" rel="noopener">self host</a>) 一款名为<a href="https://github.com/usememos/memos" target="_blank" rel="noopener">memos</a>的基于web的<a href="https://youtu.be/rOSZOCoqOo8" target="_blank" rel="noopener">zettelkasten</a>笔记应用时，在<a href="https://github.com/hu3rror/memos-on-fly" target="_blank" rel="noopener">官方推荐的部署方式</a>中发现了这个平台。</p><p>简单来说，fly.io能帮你快速部署一款app。部署时，你需要安装它的cli工具<code>flyctl</code>，然后利用它生成(<code>flyctl launch</code>)一份部署的配置文件<code>fly.toml</code>。在这份文件中，你只需填入docker image的地址(一般在<a href="https://hub.docker.com/" target="_blank" rel="noopener">docker hub</a>里)、litestream备份信息和fly volume的信息(storage，可以理解为划分储存空间？类似amazon S3)，就可以直接通过这份config指定的信息，将你的app从docker hub部署到fly.io上。</p><p>按照我的理解，其中 docker image是你的app的代码，fly volume是你的硬盘/储存空间，<a href="https://github.com/benbjohnson/litestream" target="_blank" rel="noopener">litestream</a>会按秒级间隔同步拷贝memos的sqlite数据库的WAL数据流到<a href="https://www.backblaze.com/b2/docs/" target="_blank" rel="noopener">Backblaze B2</a>以实现数据备份。有了数据备份，就算memos的上游发布新版本，或是fly.io机房着火，你也能从B2获取当前最新的闪照(snapshot)，这应该也是为什么<a href="https://github.com/hu3rror/memos-on-fly#:~:text=Verify%20the%20installation" target="_blank" rel="noopener">memos部署指南</a>提到可以通过swap到一个新的fly volume来检验是否成功备份。</p><p>因为memos算是高强度使用的应用了，后期数据量会暴涨，难免会有scalability和数据迁移的问题，所以我会常常想要把数据库拉到本地来手动备份。因为fly的app本质就是一个docker容器，这时候就需要使用fly的ssh工具<code>flyctl ssh</code>。查阅help手册后知道应该用sftp来拷贝vm上的文件。</p><p>根据<a href="https://github.com/pocketbase/pocketbase/discussions/537#discussioncomment-3914729" target="_blank" rel="noopener">这则回复</a>，可以用<code>fly ssh sftp shell</code>进入sftp的shell，然后用get命令来下载特定文件。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;fly.io 类似于heroku，能帮忙托管运行App，是一种&lt;a href=&quot;https://zh.wikipedia.org/wiki/平台即服务&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;PaaS&lt;/a&gt;服务。昨天我在尝试自搭(&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="Tech" scheme="https://gitkeniwo.github.io/categories/Tech/"/>
    
    
      <category term="cloud-computing" scheme="https://gitkeniwo.github.io/tags/cloud-computing/"/>
    
  </entry>
  
  <entry>
    <title>放在微博图床的图片全挂了。</title>
    <link href="https://gitkeniwo.github.io/2023-01-25-weibo-image-hosting/"/>
    <id>https://gitkeniwo.github.io/2023-01-25-weibo-image-hosting/</id>
    <published>2023-01-25T06:25:55.000Z</published>
    <updated>2023-01-25T14:07:44.493Z</updated>
    
    <content type="html"><![CDATA[<p>微博图床，爷真是当初信了iPic的邪了。<br><em>注：ipic是少数几个支持无token上传微博图床的图床工具</em><br><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/20230125150344.png" alt=""><br>想到之前看到有人说web2.0系的平台，因为是freemium模式，平台的用户本身就是他们的盈利点。用户的digital property自然也不由用户自己掌控。<br>现在即便是想补图，也无从知晓这里究竟放的是什么图片了。以后图片要么放可以信赖的渠道(Github)，要么还是放在本地吧。不氪金的东西不可能长久。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;微博图床，爷真是当初信了iPic的邪了。&lt;br&gt;&lt;em&gt;注：ipic是少数几个支持无token上传微博图床的图床工具&lt;/em&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gitkeniwo/image_hosting/ma
      
    
    </summary>
    
    
      <category term="Blogging" scheme="https://gitkeniwo.github.io/categories/Blogging/"/>
    
    
      <category term="image-hosting" scheme="https://gitkeniwo.github.io/tags/image-hosting/"/>
    
  </entry>
  
  <entry>
    <title>N. Xiangyang Rd., Shanghai; Hennessy Rd., HK</title>
    <link href="https://gitkeniwo.github.io/2022-10-23-shanghai-hongkong/"/>
    <id>https://gitkeniwo.github.io/2022-10-23-shanghai-hongkong/</id>
    <published>2022-10-23T17:06:40.000Z</published>
    <updated>2023-01-25T13:30:18.050Z</updated>
    
    <content type="html"><![CDATA[<p>刚刚在推上看到了有女生在上海襄阳北路的街上举横幅。我很钦佩她们的勇气。</p><p><blockquote class="twitter-tweet"><p lang="zh" dir="ltr">上海 襄阳北路<br>两个女孩子拉起一条横幅<br>写着几个简单的汉字<br>不要 要 <br>不要 要 <br>不要 要<br>周围的人说，我们一直想干这个 <a href="https://t.co/p7WHqAtgBZ" target="_blank" rel="noopener">pic.twitter.com/p7WHqAtgBZ</a></p>&mdash; 李老师不是你老师 (@whyyoutouzhele) <a href="https://twitter.com/whyyoutouzhele/status/1584139964782350336?ref_src=twsrc%5Etfw" target="_blank" rel="noopener">October 23, 2022</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script></p><p>这条推文下面，有人挂出了香港人在观塘apm举白纸的抗议活动照片。这让我回想起了香港六一六两百万人大游行。</p><iframe width="560" height="315" src="https://www.youtube.com/embed/rWTZ77C3xb4" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p>每次回顾这个延时影片，都会被画面中不断流淌过的人群触动到。19年8月我在旺角切身实地的目睹过体验过反送中游行，黑衣人占据了弥敦道六车道声嘶力竭的呼唤民主，两侧的商铺都很配合的关门了，后来我才意识到，那就是香港最后的怒吼了，也是香港人能自由表达政治诉求的最后的体面时光了。现在回忆起19年暑假的那段时光，总会感到一种渺然的虚幻与彷徨，covid之前的岁月都如梦一般不可考证，那个街头混杂着几十种语言的香港终究也成了昨日的世界中的某个段落。唯独，回想起在旺角信和中心门口的那个下午，背后是那时才刚刚发售的游戏<em>火焰之纹章：风花雪月</em>的巨型海报，2019年那个活力尚存的香港又跃现在我的眼前——那是我第一次感受到与整个人类的历史的书写方向如此接近，即便它是一个如此让人沮丧的拐点。从此我知道一个社会的生命力，不管你拥有再令人瞩目的经济指标，如果缺少了作为活力源头的<em>人</em>的存在，如果人们都畏首畏尾怖惧于<em>政治表达</em>，那么它就是一滩颓萎的死水。</p><p>两百万的大游行，最后换来了一纸恶法。我大概是从那时开始明白了这个颠扑不破的道理，即，永远不要同土匪谈判。Hence the following struggles 润ing all the way to the Netherlands.</p><p>上海法租界的这条推文勾起了关于HK的万种思绪，两座都是我很中意的城市。夜晚的法租界小马路，街边站满了年青人，两位勇敢的女生举着白色的横幅，上面写着呼应北京四通桥的「不要」、「要」，旁边骑车经过的路人都在让道。可惜上海早就不是70年前的那个上海了，街边站满的人，大部分都茫然而不自知目前「共和国」的境况，横幅也只能如苏联笑话一般be as vague as possible。两位勇敢的女生，不知道她们下半夜去向何方。而2020年之后，香港也不再是那个香港了。两百万人的队列艰难行过金钟门口的轩尼诗道，最后什么也没有争取到。Reddit网友说，What do you even expect? I mean, it’s China. 那个半只脚还搭在自由世界门槛里的香港最后也没能成功与土匪谈成，更何况沦陷区的这些星星之火呢？在这种悬殊的对比之下，法租界夜晚里的那一抹白，显得更加可贵了。</p><p>恰逢大会，铺天盖地的宣传之下，没有一个地方评论区是可以留言的，不免让人联想到中世纪天主教会，认定教宗是神意的唯一解读者。极权主义的幽灵，80年、50年后，重新盘旋在东亚次大陆的上空。这是人类历史的永恒轮回吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;刚刚在推上看到了有女生在上海襄阳北路的街上举横幅。我很钦佩她们的勇气。&lt;/p&gt;
&lt;p&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;zh&quot; dir=&quot;ltr&quot;&gt;上海 襄阳北路&lt;br&gt;两个女孩子拉起一条横幅&lt;br&gt;写着几个简单的汉字&lt;b
      
    
    </summary>
    
    
      <category term="News Comments" scheme="https://gitkeniwo.github.io/categories/News-Comments/"/>
    
    
      <category term="毒力撕烤" scheme="https://gitkeniwo.github.io/tags/%E6%AF%92%E5%8A%9B%E6%92%95%E7%83%A4/"/>
    
      <category term="hk" scheme="https://gitkeniwo.github.io/tags/hk/"/>
    
      <category term="ccp" scheme="https://gitkeniwo.github.io/tags/ccp/"/>
    
      <category term="china" scheme="https://gitkeniwo.github.io/tags/china/"/>
    
      <category term="shanghai" scheme="https://gitkeniwo.github.io/tags/shanghai/"/>
    
  </entry>
  
  <entry>
    <title>估计量的抽样分布 @ Probability &amp; Statistics Chapter 8</title>
    <link href="https://gitkeniwo.github.io/2022-10-22-p-and-s-08/"/>
    <id>https://gitkeniwo.github.io/2022-10-22-p-and-s-08/</id>
    <published>2022-10-22T16:39:01.000Z</published>
    <updated>2022-10-22T22:43:27.323Z</updated>
    
    <content type="html"><![CDATA[<p>这是 <a href="https://lib.hpu.edu.vn/handle/123456789/28621" target="_blank" rel="noopener">DeGroot, M. H., &amp; Schervish, M. J. (2012). _Probability and statistics_. Pearson Education.</a> 一书的笔记。 </p><p>8.1 小节讲了抽样分布(sample distribution)。抽样分布能作为中间量协助计算Bayes估计量，或者用以衡量有多大信心认为估计量$\hat{\theta}$接近真实参数$\theta$。<br>8.2 是卡方分布。卡方分布实际上是一种特殊的$\Gamma$分布($\alpha=\frac{m}{2}, \beta=\frac{1}{2}$).<br>8.3 继续探索了正态分布样本均值和样本方差的关系</p><ul><li>样本均值和方差是独立的。</li><li>样本方差与自由度为n-1的卡方分布差一个常数项系数，即$\sum^n_{i=1}\frac{(X_i-\bar{X_n})^2}{\sigma ^2} \sim \chi^2_{n-1}$，而$\mu$已知情况下，标准化后的方差是服从卡方1的，$\frac{(X_i - \mu)^2}{\sigma ^2} \sim \chi_{1}^2$ ，其加和服从自由度为n的卡方分布。换言之，将$\mu$替换为样本均值后，自由度减少了1.</li><li>因此，样本方差常以$\sigma’^2=\frac{S_n^2}{n-1}=\frac{\sum_{i=1}^n(X_i-\bar{X_i})^2}{n-1}$ 代替，因为此式为方差的无偏估计(unbiasedness)。<ul><li>关于自由度的理解：根据Wikipedia: “In statistics, the number of degrees of freedom is the number of values in the final calculation of a statistic that are free to vary.” 自由度衡量了统计量中能自由变换的样本数。</li><li>因为样本中残差和为0 $\sum^n_{i=1} (X_i - \bar{X_i})=0$，每一项 $X_i - \bar{X_i}$ 其实是样本关于样本均值的残差(residual)。在这n项的残差中，若知晓其中n-1项，必然通过零和知晓第n项，所以这n项是线性相关的，实际只有n-1项的信息是独立的，它们只能张成n-1维的线性空间。</li></ul></li></ul><p>8.4 t分布</p><ul><li>t分布的严格定义是 $X=\frac{Z}{(\frac{Y}{m})^{\frac{1}{2}}}$ , 其中Z为标准正态，Y为自由度为m的卡方。</li><li>构造$Z= \frac{\sqrt{n}(\hat{X_n}-\mu)}{\sigma}$  ，由于样本均值服从$N(\mu,\frac{\sigma^2}{n})$  (n个 $\frac{x_i}{n} \sim N(\frac{\mu}{n},(\frac{\sigma}{n})^2)$的加和)。</li><li>构造$Y = \frac{S^2_n}{\sigma^2}$，由8.3节知 $Y \sim \chi^2_{n-1}$</li><li>故$U = \frac{Z}{({\frac{Y}{n-1}})^{\frac{1}{2}}} \sim t_{n-1}$ , 化简U得到 <script type="math/tex">U= \frac{\frac{\sqrt{n}(\hat{X_n}-\mu)}{\sigma}}{(\frac{S^2_n}{\sigma^2 (n-1)})^ {\frac{1}{2}}}= \frac{\sqrt{n}(\hat{X_n}-\mu)}{(\frac{S^2_n}{ n-1})^ {\frac{1}{2}}}=\frac{\sqrt{n}(\hat{X_n}-\mu)}{\sigma'} \sim t_{n-1}</script><ul><li>样本方差$\sigma’$与方差的MLE估计$\hat{\sigma}$差了一个常数项</li><li>在sigma unknown和已经得到一组样本的情况下，由于$\mu$与$t_{n-1}$无关，在给定的置信系数下，我们可以通过寻找U在t分布下的置信区间$Pr(|U|&lt;t_{n-1}(\alpha /2))=1-\alpha$，通过Pr括号内的不等式变形得到$\mu$关于t分位数和样本方差的不等式，进而得到$\mu$的置信区间 $\bar{X_i} \pm t_{n-1}(\alpha/2)\frac{\sigma ‘}{\sqrt{n}}$ 。<br>最后，标准柯西分布（p.d.f. $f(x;0,1)= \frac{1}{\pi (1+x^2)}$）是自由度为1的t分布，标准正态分布是自由度为$\infty$的t分布。</li></ul></li></ul><p>8.5 讲了置信区间(Confidence Interval, CI)<br>8.6 讲了正态分布的贝叶斯推断<br>8.7 特地讲了无偏估计<br>8.8 提到了费歇尔信息量（Fisher Information)，它是C-R不等式的一个组成部分，可以判断UMVUE。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是 &lt;a href=&quot;https://lib.hpu.edu.vn/handle/123456789/28621&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;DeGroot, M. H., &amp;amp; Schervish, M. J. (2012). 
      
    
    </summary>
    
    
      <category term="Study" scheme="https://gitkeniwo.github.io/categories/Study/"/>
    
    
      <category term="statistics" scheme="https://gitkeniwo.github.io/tags/statistics/"/>
    
      <category term="undergraduate-course" scheme="https://gitkeniwo.github.io/tags/undergraduate-course/"/>
    
      <category term="sample-distribution" scheme="https://gitkeniwo.github.io/tags/sample-distribution/"/>
    
  </entry>
  
  <entry>
    <title>改革开放的落幕（1978-2022）</title>
    <link href="https://gitkeniwo.github.io/2022-10-22-end-of-the-reform/"/>
    <id>https://gitkeniwo.github.io/2022-10-22-end-of-the-reform/</id>
    <published>2022-10-22T16:04:51.000Z</published>
    <updated>2023-01-25T13:40:39.055Z</updated>
    
    <content type="html"><![CDATA[<p>我想，今日的新闻出来后，中国40年来飞速发展的黄金时代也就落幕了。</p><p>健康即孱弱。<br>发展即停滞。<br>稳定即动荡。</p><p>自由世界的人需要认识到，他们面临的是一种史无前例的制度结构，能够完全控制人心为其所用的利维坦，毋庸置疑地说，其恐怖程度已经超越了冷战时期的USSR。自由世界的人不熟谙厚黑学，透过局域网捕捉到的象形文字只能解读出一团模糊不清的魅影，他们一定会在这方面吃到苦头。</p><p>阿姨预言的大洪水最终没有出现，可它却又真真实实早就来了，化作一团汹涌的暗流，从天津港、杭州湾、南中国海……从3万公里的海岸线发散而出，最终会搅动整个蔚蓝星球。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我想，今日的新闻出来后，中国40年来飞速发展的黄金时代也就落幕了。&lt;/p&gt;
&lt;p&gt;健康即孱弱。&lt;br&gt;发展即停滞。&lt;br&gt;稳定即动荡。&lt;/p&gt;
&lt;p&gt;自由世界的人需要认识到，他们面临的是一种史无前例的制度结构，能够完全控制人心为其所用的利维坦，毋庸置疑地说，其恐怖程度已经超
      
    
    </summary>
    
    
      <category term="News Comments" scheme="https://gitkeniwo.github.io/categories/News-Comments/"/>
    
    
      <category term="ccp" scheme="https://gitkeniwo.github.io/tags/ccp/"/>
    
      <category term="memoir" scheme="https://gitkeniwo.github.io/tags/memoir/"/>
    
      <category term="china" scheme="https://gitkeniwo.github.io/tags/china/"/>
    
      <category term="historic" scheme="https://gitkeniwo.github.io/tags/historic/"/>
    
  </entry>
  
  <entry>
    <title>统计推断 @ Probability &amp; Statistics Chapter 7</title>
    <link href="https://gitkeniwo.github.io/2022-10-16-p-and-s-07/"/>
    <id>https://gitkeniwo.github.io/2022-10-16-p-and-s-07/</id>
    <published>2022-10-16T15:45:14.000Z</published>
    <updated>2022-10-16T21:46:01.650Z</updated>
    
    <content type="html"><![CDATA[<p>这是 <a href="https://lib.hpu.edu.vn/handle/123456789/28621" target="_blank" rel="noopener">DeGroot, M. H., &amp; Schervish, M. J. (2012). _Probability and statistics_. Pearson Education.</a> 一书的笔记。 </p><h1 id="7-1-Statistical-Inference-统计推断"><a href="#7-1-Statistical-Inference-统计推断" class="headerlink" title="7.1 Statistical Inference 统计推断"></a>7.1 Statistical Inference 统计推断</h1><p>这一章首首先介绍了灯泡寿命问题。公司想要估计电子元件的failure rate，用未知的参数$\theta$表示，它服从指数分布（gamma分布）。根据大数定律6.2 我们知道独立同分布的样本均值 $\bar{X_i} \xrightarrow{p} \frac{1}{\theta}$   (依概率收敛)。根据Theorem 6.2.5 我们知道给这个式子套一层连续函数也是成立的，即 $1/ \bar{X_i} \xrightarrow{p} \theta$. 所以，我们可以用样本均值的倒数来近似failure rate。<br>因为我们不可能测量所有元件的寿命，参数$\theta$只能是hypothetically observable的。<br>接下来定义了统计模型和统计推断(statistical inference)。统计推断的例子：</p><ul><li>构造一个随机变量$\mathbf{Y}$  使得 $\text{Pr}(\mathbf{Y} \ge \theta | \theta)=0.9$。 这个RV $\mathbf{Y}$ 可以是观测到的一系列样本$X_1,…,X_m$的函数。</li><li>在观测到一系列样本$X_1,…,X_m$后，我们有多大把握认为$\theta \le 0.4$。</li></ul><p>后面提了下模型参数和参数空间。接着定义了统计量（statistic)：是样本$X_1,…,X_n$的实值函数$T=r(X_1,…,X_n)$，例如样本均值$\bar{X_i}$和样本最大值$\max (X_1,…,X_n)$.</p><h1 id="7-2-先验-amp-后验"><a href="#7-2-先验-amp-后验" class="headerlink" title="7.2 先验 &amp; 后验"></a>7.2 先验 &amp; 后验</h1><p>先验分布就是在做出观测之前，我们已知或假定参数$\theta$在参数空间$\Omega$上的可能分布。<br><em>e.g.</em> 灯泡寿命为指数分布，其损坏率$\theta$假定其先验分布为Gamma分布。<br>灯泡的损坏率$\theta$服从Gamma分布，它的概率密度为 <script type="math/tex">\xi(\theta)=\frac{(20,000)^4}{3!}\theta^3e^{-20,000\theta}</script><br>注意这里会被绕晕：先验概率分布是theta的函数，刻画了theta取各个值的可能性的密度。一般好像RV会用大写$X$，而p.d.f.会用小写$f(x)$?</p><p>然后介绍了后文model样本分布的一个notation，即$f_m(\mathbf{x}|\theta)=f(x_1|\theta)…f(x_m|\theta)$。这里，它反过来model了给定$\theta$条件下$X_1,…,X_m$的分布，每个观察值$X_i$都是在给定theta时<em>条件独立同分布(conditional i.i.d.)</em> 的，这时我们可以说$X_1,…,X_m$构成了概率密度函数$f(x|\theta)$的一组随机样本(form a random sample)。</p><p>Sensitivity Analysis是分析不同的Prior产生的Posterior有多大程度的不同。这里有一个fun fact是如果实验观测数据足够大，那么不同的先验对试验结果的影响是微乎其微的。这提示我们不必过于纠结怎么挑选先验 (experimenters might be less inclined to spend time specifying a prior distribution if it is not going to matter much)，但如果不选择先验的话，就没法计算后验概率了。</p><p>后验分布是给定一组样本下的条件概率。The conditional distribution of θ given $X_1, . . . , X_n$ is called the posterior distribution of θ, typically denoted as $\xi(\theta|x_1,…,x_n)$.<br>与后验分布相关的最重要的东西就是贝叶斯定理了，在随机样本的形势下，贝叶斯定义可以表述为</p><script type="math/tex; mode=display">\xi(\theta|\mathbf{x})= \frac{f(x_1|\theta)...f(x_n|\theta)\xi(\theta)}{g_n(\mathbf{x})}</script><p>其中$g_n(\mathbf{x})$为样本的联合概率分布(可由分数线上面部分对$\theta$积分，求得样本$\mathbf{x}$的边际分布得到)，整个式子即后验=先验x似然 / 证据 （$\text{Posterior} = \frac{\text{Likelihood}\times \text{Prior}}{\text{Evidence}}$，似然刻画了由先验到后验结果的可能性，证据则是各种结果的出现的可能性）<br>$e.g.$ 这节例子为对之前先验分布为Gamma的灯泡损坏率求后验。</p><ul><li>似然$f(x|\theta)$为给定theta下每个样本$x_i$的条件概率密度，由于灯泡寿命为指数分布，$f(x|\theta)=\theta e^{-\theta x}$</li><li>evidence是样本的联合概率分布，$g_n(\mathbf{x})=\int^{\infty}_0 f_n(\mathbf{x}|\theta)\xi (\theta) \text{d}x$ </li><li>最后的后验概率为 $\xi(\theta|\mathbf{x})=\frac{(\sum^n_{i=1} x_i+20000)^{n+4}}{\Gamma (n+4)}e^{-(\sum^n_{i=1} x_i+20000)\theta}$ ，是一个关于$\theta$的函数，其中样本$x_i$通过观察得到，视为已知的量。</li><li>图像上的改变： <img src="https://files.mastodon.online/media_attachments/files/109/180/095/693/192/069/original/a9a3331e21cd70e3.png" alt=""></li><li></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是 &lt;a href=&quot;https://lib.hpu.edu.vn/handle/123456789/28621&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;DeGroot, M. H., &amp;amp; Schervish, M. J. (2012). 
      
    
    </summary>
    
    
      <category term="Study" scheme="https://gitkeniwo.github.io/categories/Study/"/>
    
    
      <category term="statistics" scheme="https://gitkeniwo.github.io/tags/statistics/"/>
    
      <category term="inference" scheme="https://gitkeniwo.github.io/tags/inference/"/>
    
      <category term="undergraduate-course" scheme="https://gitkeniwo.github.io/tags/undergraduate-course/"/>
    
  </entry>
  
  <entry>
    <title>Python Data Model @ 流畅的Python 01</title>
    <link href="https://gitkeniwo.github.io/2022-10-15-fluent-python-1/"/>
    <id>https://gitkeniwo.github.io/2022-10-15-fluent-python-1/</id>
    <published>2022-10-15T08:44:06.000Z</published>
    <updated>2022-10-15T15:25:50.407Z</updated>
    
    <content type="html"><![CDATA[<p>最近时常感觉有必要重学一遍python，故开此坑。<br>《流畅的python》这本书也是经典必读了，就从第一章开始写笔记。这章是一个引言，主要介绍了python的special methods。</p><h1 id="Special-Methods"><a href="#Special-Methods" class="headerlink" title="Special Methods"></a>Special Methods</h1><ul><li>Special Method是形如<code>__methodName__</code>的一类方法（也叫做”dunder method”，dunder是双下划线的略称），通过实现这类方法可以使得class以一些python通用的语法来调用一些特殊函数，使得代码语法更连贯，避免在用户编写的类里同样功能的函数有多种不同名称的情况。(Meant to be called by the python interpreter, not user (the only exception being <code>__init__()</code> which is for invoking the initializer for user superclass))<ul><li><strong>e.g.</strong> 通过实现 <code>__getitem__()</code>方法，可以直接通过 <code>className[0], className[1]</code>这样类名加方括号的形式来获取类中按照某种顺序的第N个元素(get item by index)</li><li>✴️ <code>__getitem__()</code>还能让我们的类变得<strong>iterable</strong>。<ul><li>可以用 <code>in</code> 看某个元素是否在里面</li><li>可以用 <code>for</code> 遍历</li><li>需要sorting的话，可以创建一个函数<code>sort_value()</code>用以得到某种具有顺序的值，最后用<code>for card in sorted(deck, key=sort_value):</code>即可按照这个函数输出的值来排序。</li></ul></li><li><strong>e.g.</strong> 实现<code>__len__()</code>方法就可用<code>len(class)</code>来获取事先定义好的某种length。  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"></span><br><span class="line">Card = collections.namedtuple(<span class="string">'card'</span>, [<span class="string">'rank'</span>, <span class="string">'suit'</span>])</span><br><span class="line"><span class="comment">#name 对应console里面的这个tuple的名字</span></span><br><span class="line"><span class="comment">#&gt;&gt;&gt;Card('2', 'diamonds')</span></span><br><span class="line"><span class="comment">#output: card(rank='2', suit='diamonds')</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FrenchDeck</span>:</span></span><br><span class="line"></span><br><span class="line">ranks = [str(n) <span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">2</span>, <span class="number">11</span>)] + list(<span class="string">'JQKA'</span>) </span><br><span class="line">suits = <span class="string">'spades diamonds clubs hearts'</span>.split()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">self._cards = [Card(rank, suit) </span><br><span class="line"><span class="keyword">for</span> suit <span class="keyword">in</span> self.suits </span><br><span class="line"><span class="keyword">for</span> rank <span class="keyword">in</span> self.ranks]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__len__</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> len(self._cards)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__getitem__</span><span class="params">(self, position)</span>:</span></span><br><span class="line"><span class="keyword">return</span> self._cards[position]</span><br><span class="line"></span><br><span class="line"><span class="comment">#iterable</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> card <span class="keyword">in</span> deck:</span><br><span class="line">print(card)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Card(rank='2', suit='spades')</span></span><br><span class="line"><span class="comment">#Card(rank='3', suit='spades')</span></span><br><span class="line"><span class="comment">#Card(rank='4', suit='spades')</span></span><br></pre></td></tr></table></figure></li></ul></li><li><strong>e.g.</strong> 模拟数值类 Emulating Numeric Types <ul><li>To build a vector type <code>Vector(a,b)</code>, you’ll have to implement  <code>__repr__()</code>, <code>__abs__()</code>, <code>__add__()</code> and <code>__mul__()</code></li></ul></li><li>书中继续介绍了<code>__repr__()</code>和 <code>__str__()</code>两个special methods, 一个是展示在console，一个是展示在print里的。<ul><li><code>__repr__()</code> is called by the repr builtin to display the string representation of the object in the <strong>console</strong>.</li><li>With repr, the console displays:  <code>Vector(9, 12)</code>, instead of <code>&lt;Vector object at 0x10e100070&gt;</code></li><li><code>__str__</code> is called by the <code>str()</code> built-in and implicitly used by the print function. It should return a string suitable for display to <strong>end users</strong>.</li></ul></li></ul><h1 id="Collection-API"><a href="#Collection-API" class="headerlink" title="Collection API"></a>Collection API</h1><p>接下来简单介绍了Python的Collection API。所有的类都是ABC(abstract base classes)。</p><ul><li>我们有top ABC，这些ABC都只有一个special method，如Iterable的<code>__iter__</code>, Sized的<code>__len__</code>. <ul><li>Interable要求支持unpacking和iteration</li><li>Sized要求实现len</li><li>Container要求支持<code>in</code>操作符</li></ul></li><li>Collection ABC (即 <code>collections.abc</code> module)合并了Iterable, Sized和Container三个接口。</li><li>Python不要求每个具体的类都要实现<code>__len__</code>，但如果他实现了，那么他就satisfy 了Sized Interface。<ul><li>具体关系为 <img src="https://files.mastodon.online/media_attachments/files/109/172/982/234/570/581/original/bbe8405151265044.png" alt=""></li></ul></li><li>其中，三个重要的Collections是<ul><li>Sequence, 规范了list, str 这些重要的built-in；只有sequence是reversible的，因为它支持arbituary ordering，其他两个不行。dict是假order，只保留key insertion order。</li><li>Mapping, 有<code>dict</code>, <code>collections.defaultdict</code>等实现</li><li>Set, 有<code>set</code>和<code>frozenset</code>等</li></ul></li></ul><h1 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h1><p>BTW,  在CPython里，builtin types的<code>len()</code>其实不是一个method，它只是从C struct里面读取了一个field的值，所以len()效率很高；因为builtin需要高效的实现。现在，用户可以通过实现<code>__len__</code>使得len()同样能用在自己的类上。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近时常感觉有必要重学一遍python，故开此坑。&lt;br&gt;《流畅的python》这本书也是经典必读了，就从第一章开始写笔记。这章是一个引言，主要介绍了python的special methods。&lt;/p&gt;
&lt;h1 id=&quot;Special-Methods&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="Study" scheme="https://gitkeniwo.github.io/categories/Study/"/>
    
    
      <category term="python" scheme="https://gitkeniwo.github.io/tags/python/"/>
    
      <category term="fluent-python" scheme="https://gitkeniwo.github.io/tags/fluent-python/"/>
    
  </entry>
  
  <entry>
    <title>转生荷兰的一天</title>
    <link href="https://gitkeniwo.github.io/2022-08-29-welcome-day/"/>
    <id>https://gitkeniwo.github.io/2022-08-29-welcome-day/</id>
    <published>2022-08-29T12:23:26.000Z</published>
    <updated>2022-08-29T18:29:08.736Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/0cEJhDL.jpg" alt=""><br>TU/e的Welcome day，今天也是第一次来e村（感觉真·进城了），做集体游戏的时候社恐犯了，破冰活动进行到一半自己回去了（其实是太累）。跟别人交流的时候，英文是没什么问题（跟某个同样来自zju的同学比起来），就是感觉没太多话题可以聊……或许我真的是个无聊的人吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://i.imgur.com/0cEJhDL.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;TU/e的Welcome day，今天也是第一次来e村（感觉真·进城了），做集体游戏的时候社恐犯了，破冰活动进行到一半自己回去了（其实是太累）。跟别人交流的时候，英文
      
    
    </summary>
    
    
      <category term="Tweets" scheme="https://gitkeniwo.github.io/categories/Tweets/"/>
    
    
      <category term="daily" scheme="https://gitkeniwo.github.io/tags/daily/"/>
    
      <category term="tue" scheme="https://gitkeniwo.github.io/tags/tue/"/>
    
  </entry>
  
  <entry>
    <title>荷兰逃亡记</title>
    <link href="https://gitkeniwo.github.io/2022-08-26-run-to-holland/"/>
    <id>https://gitkeniwo.github.io/2022-08-26-run-to-holland/</id>
    <published>2022-08-26T08:46:59.000Z</published>
    <updated>2022-08-29T22:08:22.685Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Timeline"><a href="#Timeline" class="headerlink" title="Timeline"></a>Timeline</h1><h2 id="2022-8-22-抵达深圳"><a href="#2022-8-22-抵达深圳" class="headerlink" title="2022.8.22 抵达深圳"></a>2022.8.22 抵达深圳</h2><ul><li>凌晨 我看到微博博主中国气象爱好者说刚刚有台风胚胎在吕宋岛形成，且大概率直接在广东登陆，当时半夜看到这消息人都麻了，一晚没睡。<ul><li><img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5oai9ppohj20u01szdlz.jpg" alt=""></li></ul></li><li>9:00 成都双流 -&gt; 深圳宝安。<ul><li>早上的成都三环路西南段真的堵麻了，过高新的时候还看到了IKEA，这种城市里的IKEA跟欧洲的美式IKEA对比真的强烈。先去双流T2送走了我弟，当天成都限电，连机场冷气都不足，双流KFC甚至没有灯。T2到T1可乘坐摆渡车。双流T1几乎就全是四川航空了。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/BD7AC6AC-7298-46D3-959D-B2D44284D595_1_105_c.jpeg" alt=""></li><li>12:30 在双流T1候机的时候，我就开始刷来港易了。来港易本身是深圳湾每天1000名额，小红书上8.10和七月份因为台风蛇口航班取消的同学都是当天可预约的，谁知我们24号左右同时也是港校开学高峰，最近一周的名额都早早的被抢完，只能刷刷别人退的票。起初是看到来港易22号还有，但刷新一下就没了，然后我猜就是可以刷出来的，由于前天晚上没睡觉，整个人都是恍惚的，在双流候机厅强忍着睡意不停刷新页面输入验证码，还好大约45分钟就刷出来了，刷出来我几乎整个人都松了一口气，当时还抱着船票不会取消的侥幸，马上给家人打电话报喜。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/_DSC0003.JPG" alt=""></li><li>川航空餐：豆腐干。。。😅<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_9702.jpg" alt=""></li></ul></li><li>17:40 降落深圳。<ul><li>宝安机场设计又让人眼前一亮，简约的标识系统，真的像是国外了，出站核酸检测的设计也行云流水，算是粪坑中的优等生了。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_9708.jpeg" alt=""></li><li>我看蛇口可以坐地铁过去，于是提着两个大箱子上了地铁。十一号线体验很好，在宝安出机场的地上段还有落日海景。前海湾换乘稍微难受，难以想象5号线在前海湾到赤湾这一段可以设七八个站……最气人的是赤湾的5-2换乘，竟然不是同台，而且这两相互也没有延伸计划，真的不知道在前湾这片深圳的核心区为什么还会有这么失败的设计。<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5oalkoy2dj21400u0dlk.jpg" alt=""> </li><li>出蛇口地铁站后，要换乘蛇口接驳线B612去蛇口港，一块钱，可以刷深圳通（一个小程序），十分钟滚动发车，体验还是不错的。到蛇口港后，我先是取了票，再乘坐电梯到4楼，换乘citigo的电梯去了8楼酒店大厅。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_9728.jpg" alt="">  <img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/CA719327-84B5-4C4C-83A4-B6A58AE77920_1_105_c.jpeg" alt=""></li><li>蛇口港，几乎没有店开门，要吃饭只能外卖，记得提前下单，因为送过来要一个小时……我点了炒河粉和潮汕牛肉丸，配沙茶酱真的美味极了，广东美食我强推。<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5oac5q0fvj20u0140wll.jpg" alt=""> </li><li>夜里小红书开始坐不住了，很多人开始未雨绸缪，还好我白天抢到了来港易所以不慌，直接进行一个补觉。<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5oaaxx8akj20u01szq7m.jpg" alt=""></li></ul></li></ul><h2 id="2022-8-23-深圳闲逛"><a href="#2022-8-23-深圳闲逛" class="headerlink" title="2022.8.23 深圳闲逛"></a>2022.8.23 深圳闲逛</h2><ul><li>上午 11:40 去南医大深圳院区做了核酸，地铁过去大概40分钟。<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5oai9295kj21400u0teu.jpg" alt=""> 下午出报告后在粤康码可以查，然后去医院打印中英文+盖章。</li><li>中午/下午<ul><li>本来想就近在壹方城解决午饭，但宝安中心(1,5号线)地铁站根本不在壹方城地下开口，要走过去还要过马路……我就又进站直接去了益田假日广场(1,2号线世界之窗站)。<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5oaowyefij21400u045d.jpg" alt="">午饭过后，直奔了益田假日广场的苹果店(Apple Holiday Plaza)，深圳唯一一家，全深圳的人都挤在这里，以前的话还可以去香港买Apple（别说，观塘APM和广东道的Apple还真的方便），现在都封锁两三年了……下午两点的天才吧预约，苹果只让你提前十分钟签到……沟通了半天后，在Apple更换12 mini的电池，换电池期间我就去了隔壁万象天地（1号线高新园站）闲逛去了，在MUJI的最后一次消费（我附近只有杜塞才有MUJI了）然后还囤了优衣库的heattech。万象天地可以说是陆资商场天花板，招商、管理、建筑的设计感都是顶级，可惜当时手机在换电池，没能拍点皂片。</li></ul></li><li>18:00 左右 通知24-26号船票取消。小红书开始炸锅，可能也正好是返校高峰，这一波影响到的人太多了，这时才去抢来港易的人大概会疯吧…… 晚饭顺路去了深圳前海的海岸城。开始研究来港易过关，跟别人高强度聊天中，一直处于极度兴奋的状态。当晚Citigo酒店不太平啊，电梯间弥漫着焦虑气息，随便听人聊天都是蛇口船票的事，第二天要转战深圳湾了。</li></ul><h2 id="2022-8-24-过关、飞走"><a href="#2022-8-24-过关、飞走" class="headerlink" title="2022.8.24 过关、飞走"></a>2022.8.24 过关、飞走</h2><ul><li>10:00 起床<ul><li>由于失眠，一直睡到了早上十点，起床后开始收拾行李。当天的蛇口Citigo酒店人心惶惶，都笼罩在船票取消的阴霾之下😂</li></ul></li><li>12:00 深圳湾通关<ul><li>在蛇口港门口打了车去到深圳湾口岸。口岸附近弥漫着浓浓的村逼气息，我并不知道原来过关是要排队的，而且还要排这么长。</li><li>先是在口岸外的小道上排队，然后在口岸门口排队，最后口岸里还有无数个队伍，堪比上海迪士尼。中国边检，香港边检，来港易审查……深圳当天35度，周围拿miu miu、coach的小姐姐也一样全身打湿排着队。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_9910.jpg" alt=""></li><li>过了中国边检后，你能明显感受到服务态度好了很多。过关需要4个码，各种攻略都有，这里不再赘述。在中港边检的中间地带网很差，会有人让你打他电话进行电话核验，我推荐购买移动的香港流量包，我自己带的香港一天卡最后没用上……此时看到香港挂上三号风球了，三号之后就是8号。<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5oc1gkam5j20u00w60yo.jpg" alt="">  港sir会看你疫苗证明，核酸证明，你再说当天的飞机飞走，就不会为难你了，最后会给你一个核酸表（说万一你没有飞走的话，要在xx天去做核酸）和一个访客逗留贴纸（似乎19年来香港的时候也有）。我后来在香港机场跟别人交流才知道24号没有来港易的人最后也通关了。</li></ul></li><li>15:40 进入香港境内，研究如何去机场。<ul><li>过关后可以看到一些开往屯门、元朗的巴士指示牌，也有新界和市区的士的指示牌。他们返港人士在门口排核酸，并且等核酸出结果才可返回，我们去机场的就不用核酸了。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_9937.jpg" alt=""> 由于准备匆忙，没有带一分港币，我去坐车的时候问能不能支付宝的时候，的哥都不鸟我，他说可以收人民币，然后我说我身上只有欧元……然后就回头去坐大巴了。大巴可以拍visa，超级方便，建议全世界的公交都学学。<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5ob8vma3jj20u00y8tg4.jpg" alt=""> 香港这边有超大盒的维他柠檬茶，自贩机有卖，可支付宝或拍visa。虽然船票因为台风取消了，但当天香港艳阳高照，一朵云也没有，爷全身湿透…… <img src="" alt=""></li><li>先乘坐B3到屯门市中心巴士站换乘A33X机场线，下车可见屯门轻铁，我19年来港时没见过，这才第一次见到。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_9952.jpg" alt="">巴士站在天桥对面的洞里，要坐电梯上下天桥。我当时就没找到A33x的候车地点，在街面上傻等了很久，又社恐不会说广东话不敢问人，最后用塑料粤语问了路，所幸香港人都很友好会给你指路。A33X下午的发车时间远大于30分钟，我都怀疑自己今晚之前能不能到机场了，等到心情崩溃，最后当然车还是来了…… <img src="" alt=""> <img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_9956.jpg" alt=""></li><li>B3车上没有行李架，如果箱子太多只能站着扶着自己的行李，A33X巴士上有行李架，可去二楼第一排欣赏风景。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_9970.jpg" alt=""> <img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/7D8FED84-DD50-497B-9B2F-B21AE2A93279_1_102_o.jpeg" alt=""> <img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/D494B606-8034-4640-B717-3D385F38455E_1_102_o.jpeg" alt=""> <img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_9991.jpg" alt=""></li><li>A33X经过海底隧道到赤腊角后会先去港珠澳大桥口岸，再去HKG航厦，我当时坐到港珠澳的时候以为已经到机场了，一直狂按stop，司机问我去哪，我狂喊「给虫」😂，后来才发现是要在后面一站落车。</li></ul></li><li>约18:00 到达香港机场，在值机大厅溜达了一圈，几乎没有什么开着门的商店。只有一家偌大的M记，可以拍信用卡，是全场最热闹的地方。图：粤语 批 <img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5oc45bd99j20uc0u0qcp.jpg" alt=""></li><li>18:45 开始排值机的队伍，大概排了一个半小时。<ul><li>期间结识了前面的一位朋友，他也是去阿姆。我带了一个28寸的大箱子，一个登机箱，土航让我把登机箱内电池全部取出，箱子托运，还跟我用英文尬聊……最后我才发现她是可以讲Mandarin的。</li></ul></li><li>20:00 过安检<ul><li>安检后走访客(visitor)离港通道出境，安检门前有不少香港人在送别朋友，成群结队的拍照，想必是要润带嘤和加国了，除了羡慕想不出别的话来。<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5oc6l8e4vj21fe0u0tjg.jpg" alt=""> 土航的登机口要坐摆渡列车去另一个航厦。过了安检后就十分唏嘘，香港机场的豪华商业配置，两边随手可见的GUCCI，LV店面都是大门紧闭的，想要揾食都找不到一家开门的店。李家坡真的笑麻，星洲人应该给总加速师送锦旗。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_0034.jpg" alt=""> <img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_0035.jpg" alt=""> <img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_0042.jpg" alt=""> </li></ul></li><li>22:20 登机。<ul><li>值机时候，香港已经挂起了八号风球，机场时不时就会滚动提醒。由于是午夜航班，我去洗手间洗了脸，把全身用纸巾擦了一遍，深圳湾一身臭汗根本没办法洗澡，还要一直持续到第二天差不多晚上11点（阿姆时间15点）。堂堂香港机场，饮水处连纸杯都不提供，我也没有带水杯，就只能忍着到时候去飞机上喝水。在场候机的有一半🀄️人，一半外人。<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5obvvd9m3j21k20u013y.jpg" alt=""> 一上机，就被一家人带两小孩强行换了座，但刚好换到了一排没人的座位，后面三个🀄️女聊天吵麻了，江苏内位一开口就是内味……问了一下，一个去NYU，一个去USC（应该去洛杉矶？），还有一位去UCD（都柏林？）。去UCD那位甚至已经结婚了，就是念完书再去美国跟他老公一起上班……</li><li>跟东亚大地说拜拜了。在这个肉食者皆为神经病的时代，不知道下次回来是几年以后了。</li></ul></li><li><img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5obulky38j21400u07b7.jpg" alt=""> 23:00 起飞，当时已经开始下雨了，在台风中，巨型客机也在不断颤抖着，我把安全带拉到很紧，努力消除失重感。所幸很快就飞离了珠三角空域，受台风影响很小了。<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5obt1ijh3j20sg0lc429.jpg" alt=""> 香港时间早上七点左右在黑海东岸格鲁吉亚上空。土航空餐很一般，之前过高的期待变成了失望……</li></ul><h2 id="2022-8-25-伊斯坦堡转机到阿姆，阿姆到Sittard"><a href="#2022-8-25-伊斯坦堡转机到阿姆，阿姆到Sittard" class="headerlink" title="2022.8.25 伊斯坦堡转机到阿姆，阿姆到Sittard"></a>2022.8.25 伊斯坦堡转机到阿姆，阿姆到Sittard</h2><ul><li>伊斯坦堡时间5 am: 到达伊斯坦堡新机场<ul><li>在瘟疫封锁的桂枝呆了快3年，第一次看到如此<strong>正常的社会</strong>：凌晨五点的伊斯坦堡机场人头济济，鲜有人佩戴口罩，航厦两侧的免税店与凋敝的香港机场HKG形成鲜明的对比。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_0074.jpg" alt=""><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_0075.jpg" alt="">  <img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_0076.jpg" alt=""> </li><li>土耳其机场的wifi还要给钱，只免费提供1个小时，转机进闸排到天荒地老，还没网……</li></ul></li><li>伊斯坦堡时间6:40 am：值机<ul><li>伊斯坦堡飞往阿姆的飞机，这时航班上🀄️人就少得可怜了，只剩下一些土耳其人和荷兰人。</li><li>延误了快一个小时，因为飞机上我也没睡好，延误等待的过程中就一直疯狂昏迷，一直到航班快降落。<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5obkf0fpwj21400u0n23.jpg" alt=""> </li><li>降落到阿姆之前的景色很美，像来到了童话世界，在我的右手边可以看到碧蓝的海和海边的风车。我当时以为那就是Noordwijk（莱顿附近的海边小村），后来看了看地图，应该是阿姆北面的海，在湾里面。<em>草，我后来又看了下，阿姆北面的是<strong>湖</strong>，叫做<a href="https://en.wikipedia.org/wiki/IJmeer" target="_blank" rel="noopener">IJmeer</a>（艾湖, 荷兰语ij发音为艾），荷兰修了很多大坝（dams &amp; causeways)围了湖，如<a href="https://en.wikipedia.org/wiki/Afsluitdijk" target="_blank" rel="noopener">Afsluitdijk</a></em>。</li></ul></li><li>阿姆斯特丹时间10am：降落在Schiphol机场。<ul><li>降落后，首先出飞机会有人看你护照，问你去哪；</li><li>然后会有一个正式的入境窗口，给你护照盖章。</li><li>然后去等行李，大概转了一个小时才转出来……期间我去NS机器买了蓝色匿名OV卡。又极度焦渴，想到荷兰水龙头可以直饮，但去厕所看了眼根本没人在喝水😂，只能强忍口渴继续等行李。</li><li>行李出来后，走无申报通道过海关，是抽查，我根本没被查，以至于我走出来后还在问lsy海关在哪是我走丢了吗……<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_0099.jpg" alt=""> </li></ul></li><li>阿姆斯特丹时间12am：乘坐NS前往Sittard<ul><li>出海关后就是NS Schiphol Airport Station，极简工业风的设计，太潮了，我跟朋友夸了很久。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_0100.jpg" alt=""> <img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_0103.jpg" alt=""> 史基浦站开放式乘车，NS只有柱子，没有闸机，所以等会车上有人验票，验票小哥还挺帅的。因为跟Holland2Stay约了3点的入住，我就没在机场逗留吃饭，只去啊哈（Albert Heijn超市）买了瓶水就走了。啊哈是真的不刷visa，只收现金或荷兰本地卡（Maestro）……<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/3E96FCB8-5872-4B86-80B0-678B31CC7675_1_102_o.jpeg" alt=""></li><li>约一点半到了乌特勒支，1:45到了Boxtel, Boxtel与埃村之间在修路，要换乘接驳大巴（NS Snelbus)。遇到一家土耳其人（？妈妈戴了hijab）送孩子上学，他们给我让了电梯，因为两个大箱子，感受到了民风淳朴。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/679C6223-CC8C-4925-8A51-6E7E37F9E316_1_102_o.jpeg" alt="">两个大箱子的麻烦换乘之后，大概2:07到了埃村，又小跑着去赶了2:17开往Maastricht的IC列车。</li><li>最后15点过准时到了Sittard，PITground的确就在sittard门口，但拖着大箱子感觉还是超远……H2S的小哥也很nice，到这，脱脂之旅就结束了。<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_0352.jpg" alt=""></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Timeline&quot;&gt;&lt;a href=&quot;#Timeline&quot; class=&quot;headerlink&quot; title=&quot;Timeline&quot;&gt;&lt;/a&gt;Timeline&lt;/h1&gt;&lt;h2 id=&quot;2022-8-22-抵达深圳&quot;&gt;&lt;a href=&quot;#2022-8-22-抵达深圳&quot;
      
    
    </summary>
    
    
      <category term="Life" scheme="https://gitkeniwo.github.io/categories/Life/"/>
    
    
      <category term="nederland" scheme="https://gitkeniwo.github.io/tags/nederland/"/>
    
  </entry>
  
  <entry>
    <title>hexo 提示 Accessing non-existent property &#39;lineno&#39;</title>
    <link href="https://gitkeniwo.github.io/2022-08-19-Accessing-non-existent-property-lineno/"/>
    <id>https://gitkeniwo.github.io/2022-08-19-Accessing-non-existent-property-lineno/</id>
    <published>2022-08-19T17:20:53.000Z</published>
    <updated>2023-01-25T13:27:32.333Z</updated>
    
    <content type="html"><![CDATA[<p><strong>起因</strong>： Hexo一直弹如下警告</p><p><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/20220820012034.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(node:26384) Warning: Accessing non-existent property &#39;lineno&#39; of module exports inside circular dependency</span><br><span class="line">(Use &#96;node --trace-warnings ...&#96; to show where the warning was created)</span><br><span class="line">(node:26384) Warning: Accessing non-existent property &#39;column&#39; of module exports inside circular dependency</span><br><span class="line">(node:26384) Warning: Accessing non-existent property &#39;filename&#39; of module exports inside circular dependency</span><br><span class="line">(node:26384) Warning: Accessing non-existent property &#39;lineno&#39; of module exports inside circular dependency</span><br><span class="line">(node:26384) Warning: Accessing non-existent property &#39;column&#39; of module exports inside circular dependency</span><br><span class="line">(node:26384) Warning: Accessing non-existent property &#39;filename&#39; of module exports inside circular dependency</span><br></pre></td></tr></table></figure><p><strong>解决</strong>：</p><ul><li>见Hexo的<a href="https://github.com/hexojs/hexo/issues/4257" target="_blank" rel="noopener">Issue #4257</a>，是stylus在报错，可追溯至stylus的<a href="https://github.com/stylus/stylus/issues/2534" target="_blank" rel="noopener">Issue #2534</a>，已在stylus <code>@0.54.8</code> 之后版本修复。</li><li>利用 <code>npm ls --depth 2</code> 追杀看看哪些依赖还在用老版本的stylus（tmd这是2020年的issue了）</li><li><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/20220820012625.png" alt=""> </li><li>发现这位还留在<code>@0.54.5</code></li><li>算了，直接<code>npm update stylus</code> 把所有stylus都更新一下。</li><li>更新之后就不报错了。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;起因&lt;/strong&gt;： Hexo一直弹如下警告&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/20220820012034.png&quot; 
      
    
    </summary>
    
    
      <category term="Blogging" scheme="https://gitkeniwo.github.io/categories/Blogging/"/>
    
    
      <category term="hexo" scheme="https://gitkeniwo.github.io/tags/hexo/"/>
    
      <category term="npm" scheme="https://gitkeniwo.github.io/tags/npm/"/>
    
      <category term="nodejs" scheme="https://gitkeniwo.github.io/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>wild-pear-tree</title>
    <link href="https://gitkeniwo.github.io/2022-08-19-wild-pear-tree/"/>
    <id>https://gitkeniwo.github.io/2022-08-19-wild-pear-tree/</id>
    <published>2022-08-19T17:00:58.000Z</published>
    <updated>2022-08-19T17:00:58.282Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>将Hexo从2020 Intel MBP迁移到2021 MBP 14inch Apple Silicon</title>
    <link href="https://gitkeniwo.github.io/2022-08-04-applesilicon-hexo-migration/"/>
    <id>https://gitkeniwo.github.io/2022-08-04-applesilicon-hexo-migration/</id>
    <published>2022-08-04T17:02:04.000Z</published>
    <updated>2023-01-25T13:27:39.328Z</updated>
    
    <content type="html"><![CDATA[<p>昨天14寸mbp(m1 pro)到了之后，欢天喜地的用time machine备份再还原了一下午，谁知道time machine连同intel上的环境一起给还原到了apple silicon这边来，光是要怎么卸载intel的<a href="https://brew.sh" target="_blank" rel="noopener">brew</a>我都搞了半小时，（brew官网提供的<a href="https://docs.brew.sh/FAQ#how-do-i-uninstall-homebrew" target="_blank" rel="noopener">uninstall .sh脚本</a> 狠起来连自己都报错！)，最后我就开机狂按<code>cmd</code>+<code>R</code> 抹盘重装了。</p><p>BTW，淘宝在激活的当天可以买AppleCare+，我是花了¥1385直接在杭州朗朗数码买的，Care就是可以保3年，然后全球联保（去🇳🇱就几乎不用担心了），所以毫不犹豫的就买了，毕竟贵MBP换主板换屏幕都是5000+软妹币吧……Apple Silicon一路下来体验就是：爽！！！作为16-20年mbp模具和intel的受害者，我的2020 intel mbp 13inch 今年在进入4月份以来只能用mac fan control调到all time满速才可使用，更别说16G的内存在最近连看个Safari都会闪退。与此同时，mbp 14寸开了满满一dock的app都安静如鸡，流畅丝滑，内存一路绿灯，这才叫<strong>优雅</strong>啊！！！</p><p>进入正题，由于我在intel mbp 上的hexo是跑在node 12.x版本下的，今天去nodejs主页一看，稳定版都更新到16.x了（贵前端生态真的奇葩）。我依稀记得之前还专门写过因为兼容性问题从node 14.x版本<a href="https://gitkeniwo.github.io/2020-11-24-blog/">回滚的经历</a>（贵nodejs圈用什么管理环境？<a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener">nvm</a>？）。怀着忐忑的心情，从GitHub上拉下来了hexo项目的最新提交，在新mac上配置好<a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token" target="_blank" rel="noopener">github token</a>。先安装<code>hexo-cli</code>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>全局安装package时(<code>-g</code> flag)遇到了permission denied的问题（EACCES)，主要是<code>mkdir &#39;/usr/local/lib/node_modules/hexo-cli&#39; \ mkdir: /usr/local/lib/node_modules/hexo-cli: Permission denied</code>命令权限不够，参照<a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally" target="_blank" rel="noopener">npm的官方文档</a>在 <code>～</code>目录下自建一个npm全局包目录解决。</p><p>进入hexo folder，这时要根据你当时的package.json重新安装各种包<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><br>装好后，npm会让你audit，可以看看，不过没什么用。这时就可以<code>hexo server</code>了，然后居然直接跑起来了，虽然还是会有一些warning，但都是一些dependency不支持了之类的。<br><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/Screen%20Shot%202022-08-05%20at%2001.33.22.png" alt=""></p><p>最后，再根据以前写的<a href="https://gitkeniwo.github.io/2022-02-23-inline-math/">一些博文</a>，开启数学公式一类的插件就可以了($try \space some \space math \space here \space 89^{64}$)，由于包都是重装的，所以这些细枝末节的修改最好也重新走一遍。这样来看，hexo基本上可以很好地迁移到 #apple silicon 这边来。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;昨天14寸mbp(m1 pro)到了之后，欢天喜地的用time machine备份再还原了一下午，谁知道time machine连同intel上的环境一起给还原到了apple silicon这边来，光是要怎么卸载intel的&lt;a href=&quot;https://brew.sh&quot;
      
    
    </summary>
    
    
      <category term="Blogging" scheme="https://gitkeniwo.github.io/categories/Blogging/"/>
    
    
      <category term="hexo" scheme="https://gitkeniwo.github.io/tags/hexo/"/>
    
      <category term="apple-silicon" scheme="https://gitkeniwo.github.io/tags/apple-silicon/"/>
    
      <category term="mbp" scheme="https://gitkeniwo.github.io/tags/mbp/"/>
    
      <category term="apple" scheme="https://gitkeniwo.github.io/tags/apple/"/>
    
  </entry>
  
  <entry>
    <title>荷语语法一个小总结（更新中）</title>
    <link href="https://gitkeniwo.github.io/2022-06-21-dutch-grammar/"/>
    <id>https://gitkeniwo.github.io/2022-06-21-dutch-grammar/</id>
    <published>2022-06-21T06:54:22.000Z</published>
    <updated>2022-09-22T12:59:14.296Z</updated>
    
    <content type="html"><![CDATA[<p>感谢Jeremy 的提醒让我想起我还有这个博客，现在有空了就多来更新一下。</p><p>这篇汇总一下荷语语法。众所周知荷兰语(<em>Nederlands</em>)就是是弱化版的德语(<em>Deustch</em>)，更接近于德国北部和丹麦的低地德语(_Plattdeutsch_)，主要在荷兰本土和比利时北部弗拉芒语区使用。由于相当于英德杂糅，窝琢磨最近是不是快速过一遍荷语语法<del>（防止到时去荷兰在AH超市完全看不懂荷语拼写愣着像个傻逼）</del>。</p><p>本篇文章将按照<a href="https://www.goodreads.com/author/show/396517.William_Z_Shetter" target="_blank" rel="noopener">William Z. Shetter</a>的 <a href="https://www.goodreads.com/book/show/2540460.Dutch" target="_blank" rel="noopener">Dutch: An Essential Grammar</a> 该书的编排顺序来总结。</p><h1 id="1-Pronunciation"><a href="#1-Pronunciation" class="headerlink" title="1 Pronunciation"></a>1 Pronunciation</h1><p>发音要注意的不是很多，和德语一样也是直接读就好了。</p><p>Vowels</p><ul><li>双写的为长音，读法是单写元音拉长</li><li><code>uu</code>是法语u /y/如<code>perdu</code>, <code>u</code>是德语ü /Y/如<code>für</code>, 分不清这两个<strong>吁</strong>的朋友建议去wikipedia。<ul><li>/Y/ (<a href="https://en.wikipedia.org/wiki/Near-close_near-front_rounded_vowel" target="_blank" rel="noopener">Near-close near-front rounded vowel</a>)</li><li>/y/ (<a href="https://en.wikipedia.org/wiki/Close_front_rounded_vowel" target="_blank" rel="noopener">Close front rounded vowel</a>)</li></ul></li><li><code>ui</code>是 /œy/，如huis (house) 对会法语/œ/的同学来说应该不难。</li><li><code>uw</code> 是 /yu/，如Uw （your的尊称，U的所有格）</li><li><code>ij</code> 是 /ai/</li></ul><p>Consonants</p><ul><li><code>g</code> 最不寻常的就是这个g, 发音为清音/x/或浊音/ɣ/（<a href="https://zh.wikipedia.org/wiki/濁軟腭擦音" target="_blank" rel="noopener">濁軟腭擦音</a>），清音版即德语ch和汉语普通话h（区别于英文h），浊音版就是前者的浊化，在荷兰东部南部和弗拉芒语区常用。</li><li><code>r</code> 大小舌音，北荷兰喜欢发大舌(trilled R)，南荷兰喜欢小舌(gluttory R)，如林堡和布拉班特会发小舌擦音，详见<a href="https://blogs.transparent.com/dutch/pronouncing-the-r-in-dutch/" target="_blank" rel="noopener">此</a>。<ul><li>小舌音分布主要在兰斯塔德(Randstad)<del>wow, city slackers!</del>和比利时，参见 <a href="https://en.wikipedia.org/wiki/Voiced_uvular_trill#/media/File:Uvular_rhotics_in_Europe_updated.png" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Voiced_uvular_trill#/media/File:Uvular_rhotics_in_Europe_updated.png</a></li><li>另一个关于荷兰语r的讨论，有人说大舌音在荷兰更常见 <a href="https://www.reddit.com/r/linguistics/comments/3q5v94/discussion_pronunciation_of_the_letter_r_in_dutch/" target="_blank" rel="noopener">https://www.reddit.com/r/linguistics/comments/3q5v94/discussion_pronunciation_of_the_letter_r_in_dutch/</a></li></ul></li><li><code>sch</code> 不在词尾的话发音为/sx/，注意有个/x/在，与德语不一样。例如史基浦机场Schiphol。</li><li><code>v</code>，南方和弗拉芒区是浊音，其他大部分地区v,f不分的。</li><li><code>ch</code> 是/x/，在法语外来词发法语音， <code>tj</code>是 /tʃ/，</li><li><code>b</code>, <code>d</code>在词尾发清音，如heb</li><li><code>en</code> 在词尾去<code>n</code>，如大多数动词的复数形式。</li></ul><p>Assimilation</p><ul><li>通音(f, s, ch, g, v, z) +塞音(b, d, p, k, t)根据后面的塞音定清浊 <blockquote><p>hoofden [hoovden], ijsbeer [ijzbeer]</p></blockquote></li><li>塞音+塞音，一个浊则全部浊 <blockquote><p>uitbreiden [uidbreinden], op duizenden [ob duizenden]</p></blockquote></li><li>通音+通音，全清<blockquote><p>afzetten [afsetten], het is veel [het is feel]</p></blockquote></li><li>b p词尾发清音ik heb veel [ik hep feel]</li><li>连音浊化 lees ik [leez ik]</li></ul><h1 id="2-Spelling-Rules"><a href="#2-Spelling-Rules" class="headerlink" title="2 Spelling Rules"></a>2 Spelling Rules</h1><h2 id="2-1-长短元音与闭音节"><a href="#2-1-长短元音与闭音节" class="headerlink" title="2.1 长短元音与闭音节"></a>2.1 长短元音与闭音节</h2><p>Short Vowels(<em>只</em>出现在闭音节)：</p><ul><li>闭音节单辅音结尾要双写 man - mannen, vul - vullen (fill)</li><li>双辅音结尾不用双写 arm - armen, kerk - kerken (church)</li></ul><p>Diphthongs / Long vowels（<em>可</em>出现在开音节）</p><ul><li><p>Long vowels 在开音节丢掉一个字母</p><blockquote><p>laan - lanen (avenues), boom - bomen (trees)<br>buur - buren (neighbors)<br>注意 zwaar-&gt; zwaarder 而 groot-&gt;groter</p></blockquote></li><li><p>开音节的单写元音都是长音</p><blockquote><p>sla (lettuce), zo (so), nu (now)</p></blockquote><p>  ㊟其中<code>ee</code> 总是要写成写成双写<code>zee</code>，这是为了区别不重度的单写<code>e</code> (ze, je, we) </p></li><li><p>闭音节的长音双写</p><blockquote><p>paarden (horses), feesten (parties)<br>hoofden (heads), buurten(neighborhoods)</p></blockquote></li><li><p><code>aai</code>, <code>ooi</code>, <code>eeu</code>,<code>oei</code>, <code>ieu</code> 不drop字母</p><blockquote><p>taai - taaie (tough), mooi - mooie (nice)<br>leeuw - leeuwen (lion), groei - groeien (grow)</p></blockquote></li></ul><p>㊟掌握拼写规则后下面的词组就能区分了</p><blockquote><p>zaken (zaak, affairs&amp;things) vs. zakken (zak, pockets (sack))<br>bomen (boom, trees) vs. bommen (bom, bombs)<br>manen (maan, moon) vs. mannen (men)<br>spelen (het speelt, they play),<br>spellen (they spell) </p></blockquote><h2 id="2-2-f-v-s-z"><a href="#2-2-f-v-s-z" class="headerlink" title="2.2 f / v, s / z"></a>2.2 <code>f</code> / <code>v</code>, <code>s</code> / <code>z</code></h2><p>与英文一样，加元音后缀时 f-&gt;v, s-&gt;z</p><blockquote><p>raaf - raven (ravens), geloof - geloven (they believe)<br>lief - lieve, serieus - serieuze, grijs - grijze/r</p></blockquote><p>not applicable</p><ul><li><p>s前为p,t,k</p><blockquote><p>rups -&gt; rupsen (caterpillars)<br>fietsen -&gt; fietsen (bikes)<br>heks -&gt; heksen (witches)</p></blockquote><p>  注意 vers -&gt; verzen , gans -&gt; ganzen (geese), huis -&gt; huizen</p></li><li><p>双写不变化</p><blockquote><p>stof -&gt; stoffen (materials)<br>das -&gt; dassen (neckties)</p></blockquote></li><li><p>特例</p><blockquote><p>biograaf - biografen, elf - elfen<br>kous - kousen (stockings), dans - dansen</p></blockquote></li></ul><h1 id="3-复数变化"><a href="#3-复数变化" class="headerlink" title="3 复数变化"></a>3 复数变化</h1><h2 id="3-1-加-en"><a href="#3-1-加-en" class="headerlink" title="3.1 加-en"></a>3.1 加<code>-en</code></h2><ul><li>大多数词都是en复数形式</li><li><p>不规则<code>-en</code></p><ul><li><p>短音变长音</p><blockquote><p>bad - baden /a:/ (bath)<br>dag - dagen (days)<br>dak - daken (roofs)<br>oorlog - oorlogen (wars)<br>god - goden (gods)<br>bedrag - bedragen (amount)<br>druif - druiven</p></blockquote></li><li><p>特例</p><blockquote><p>stad - steden<br>schip -schepen (ships)<br>lid - leden (members)<br>dag - dagen</p></blockquote></li><li><p>加<code>-eren</code></p><blockquote><p>been - beenderen (bones) !(benen, legs)<br>blad - bladeren (leaves) !bladen(trays, sheets)<br>ei - eieren (eggs)<br>kind - kinderen<br>lied - liederen (songs)<br>volk - volkeren<br>koe - koeien</p></blockquote></li></ul></li></ul><h2 id="3-2-加-s"><a href="#3-2-加-s" class="headerlink" title="3.2 加-s"></a>3.2 加<code>-s</code></h2><ul><li>主要是diminutives，体现为<code>-je</code>这个后缀<blockquote><p>huis -&gt;huisjes (小房子们)<br>meijes (小女孩们)<br>dubbeltjes （十分钱的硬币们）</p></blockquote></li><li>-el, -em, -en, -er, -aar, -erd, -e 结尾<blockquote><p>tafels (table), tantes(aunts)</p></blockquote></li><li>外来词，其中aeiou结尾的要加撇号<blockquote><p>taxi’s, firma’s, auto’s, paraplu’s(umbrellas)<br>microfoons, computers, romans(小说)</p></blockquote></li><li>特例+s日耳曼语词 ooms(uncles), broers(brothers), zoons(sons)</li></ul><h2 id="3-3-其他"><a href="#3-3-其他" class="headerlink" title="3.3 其他"></a>3.3 其他</h2><ul><li>拉丁词尾 <code>-us</code>变 <code>-i</code>这个不用说</li><li><code>-or</code>有两种变化，其中en形式重音移动到en前面那个音节</li><li><code>-heid</code>变为<code>-heden</code><blockquote><p>mogelijkheid -&gt; mogelijkheden (possibilities)<br>gelegenheid -&gt; gelegenheden (opportunities)</p></blockquote></li></ul><h1 id="4-冠词-指示代词"><a href="#4-冠词-指示代词" class="headerlink" title="4 冠词 指示代词"></a>4 冠词 指示代词</h1><h2 id="4-1-定冠词-de-het"><a href="#4-1-定冠词-de-het" class="headerlink" title="4.1 定冠词 de, het"></a>4.1 定冠词 <code>de</code>, <code>het</code></h2><p>荷语定冠词很好理解，<code>de</code> 就是合并了德语的der和die两个有性别词性(commen gender)，<code>het</code>就是das中性(neuter), het简写为<code>&#39;t</code>。</p><ul><li><p>所有的diminutives都是中性的，这也是为什么小女孩是het.</p><blockquote><p>de jongen -&gt; het jongentje<br>het huis -&gt; het huisje</p></blockquote></li><li><p>复数都用de，对应于德语都变成了die</p><blockquote><p>de kat - de katten, de straat - de straten<br>het huis - de huizen, het huisje - de huisjes</p></blockquote><p>  ⚠️复习拼写变化和复数加谁哈</p></li></ul><h2 id="4-2-不定冠词een"><a href="#4-2-不定冠词een" class="headerlink" title="4.2 不定冠词een"></a>4.2 不定冠词<code>een</code></h2><p>只有这一个，不论词性。复数不加。</p><ul><li>een (één)也是荷语数字一，对应德语ein，很好理解吧</li></ul><h2 id="4-3-指示代词"><a href="#4-3-指示代词" class="headerlink" title="4.3 指示代词"></a>4.3 指示代词</h2><ul><li>单数时 common gender与中性有别<ul><li>common gender: deze/die (对应德语diese)</li><li>neuter: dit/dat （对应德语dat）</li></ul></li><li>复数又统一了，用common gender的那对 deze/die <img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/20220621162659.png" alt=""><br>  单词：tuin(garden), gebouw(building)</li><li>指示代词可以单用（类似diese, dat)<blockquote><p>Dit is mijn oudste zus. (showing pictures) Zij studeert aan de universiteit van Delft.<br>This is my oldest sister. She is studying at the university of Delft.</p></blockquote></li><li>但操蛋的是形容一群人，group，band时候荷兰人又会用中性单数+动词复数，注意下！！！<blockquote><p>Dat zijn mijn kinderen. (Those are my children.)<br>Zij houden van harde muziek. (They love loud music.)<br>Wie is dat? Het zijn de buren. （Who is that? It’s the neighbors.）</p></blockquote></li></ul><p>原书插图助记 <img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/20220621163408.png" alt=""></p><h1 id="5-人称代词"><a href="#5-人称代词" class="headerlink" title="5 人称代词"></a>5 人称代词</h1><h2 id="5-1人称变化"><a href="#5-1人称变化" class="headerlink" title="5.1人称变化"></a>5.1人称变化</h2><p>直接上表感觉好一点<img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/20220621163521.png" alt=""></p><ul><li>分为重读<code>ij</code>和非重读<code>e</code>两种</li><li>u, jij, jullie, <ul><li>u对应sie或者vous🤔尊称，单复数都是u</li><li>jij, jullie就随便点了</li></ul></li></ul><h2 id="5-2现在时变位"><a href="#5-2现在时变位" class="headerlink" title="5.2现在时变位"></a>5.2现在时变位</h2><p>荷语动词变位超简单，</p><ul><li>动词有主干(stem)，主干加en变复数要遵循第二章的拼写规则。</li><li>第一人称单数ik直接加主干就行了</li><li>二三人称单数+<code>-t</code>，其中二人称单数疑问句drop <code>-t</code> <ul><li>这条规则原书表述为<em>When jij/je follows the verb and its subject, the verb always drops the ending -t, but not the t of the stem (zit je, praat je):</em></li></ul></li><li>复数都是-en，对比法语的（nous -ons, vous -ez, ils/elles -ent)</li><li>u（尊称）不论单复数都是+动词单数形式</li><li>hij在动词后面h不发音（跟英文口语很像）</li></ul><h2 id="5-3-一般疑问句"><a href="#5-3-一般疑问句" class="headerlink" title="5.3 一般疑问句"></a>5.3 一般疑问句</h2><h2 id="5-4-词序"><a href="#5-4-词序" class="headerlink" title="5.4 词序"></a>5.4 词序</h2><h1 id="6-Special-verbs-amp-Imperatives"><a href="#6-Special-verbs-amp-Imperatives" class="headerlink" title="6  Special verbs &amp; Imperatives"></a>6  Special verbs &amp; Imperatives</h1><h2 id="6-1-Special-verbs"><a href="#6-1-Special-verbs" class="headerlink" title="6.1 Special verbs"></a>6.1 Special verbs</h2><p>ending in <code>-t</code> or <code>-d</code>: t结尾二三人称单数不另外加t, d结尾正常变化</p><ul><li>zitten (to sit)</li><li>weten (to know)</li><li>rijden</li><li>houden</li></ul><p>ending in <code>-n</code></p><ul><li>gaan (to go): ga-gaat-gaan (ga jij?)</li><li>doen (to do): do-doet-doen</li><li>staan (to stand)</li><li>slaan (to strike)</li><li>zien (to see)</li></ul><p>komen (to come): kom-komt-komen 单数是短音，复数为长音</p><p>hebben - have(eng.) - haben(de.)<br>zijn - be(eng.) - sein(de.)</p><h2 id="6-2-Imperatives"><a href="#6-2-Imperatives" class="headerlink" title="6.2 Imperatives"></a>6.2 Imperatives</h2><p>the imperative is merely the <strong>stem</strong> of the verb</p><blockquote><p>Kijk eens! (Look!)<br>Wacht eens even! (Wait a minute)<br>Ga weg! (Get out!)</p></blockquote><p>More politeness礼貌版本：+<code>u</code></p><blockquote><p>Komt u binnen!<br>Gaat u zitten (go have a seat)</p></blockquote><p>More peremptoriness 粗鲁版本： use <code>-en</code> form</p><blockquote><p>Doorlopen! (close the door!)<br>Luisteren (Listen!)<br>Opletten (Pay attention!)</p></blockquote><h1 id="7-Adjectives"><a href="#7-Adjectives" class="headerlink" title="7 Adjectives"></a>7 Adjectives</h1><h2 id="7-1-Basic-Rules-Form-of-adjs"><a href="#7-1-Basic-Rules-Form-of-adjs" class="headerlink" title="7.1 Basic Rules: Form of adjs"></a>7.1 Basic Rules: Form of adjs</h2><ul><li>basic form: 做表语</li><li><code>-e</code> form: before noun (as attributives)<ul><li>Exception: Neuter + Singular + 不定冠词(indefinite) / 无冠词(no article) / elk, ieder, welk<blockquote><p>Groen gras groeit op een groot plein.<br>Zij heeft een rond gezicht(face).<br>⚠️ de words are not applicable to this rule (<em>een ronde tafel</em>)</p><ul><li>een klein kind</li></ul></blockquote></li></ul></li></ul><p>Exception</p><ul><li>不加<code>-e</code>的adj<ul><li><code>-en</code>:<ul><li>wollen, katoenen(cotton), gouden(golden), zilveren<ul><li>Dat is een mooie, zilveren ring.</li></ul></li></ul></li><li>外来语 </li><li>elk, ieder, welk + neuter singular nouns</li><li>Veel, meer, weinig, minder, geen + neuter singular nouns (as they also form a indefinite context)<ul><li>Er is veel Belgisch bier te koop in de VS.</li><li>Je kunt niet veel Belgische jenever in Amerika kopen.</li></ul></li><li>Idiomatic combinations<ul><li>het dagelijks leven</li><li>het Centraal Station</li><li>het openbaar vervoer (public transportation)</li><li>het voortgezet onderwijs</li><li>het Academisch Ziekenhuis</li><li>het Nederlands elftal</li><li>het voltooid deelwoord</li></ul></li></ul></li><li>加<code>-s</code>：iets/wat/niets (something/what/nothing) + adj （置后）<ul><li>Hij ziet iets moois in elke situatie.</li></ul></li></ul><h2 id="7-2-Adverbs"><a href="#7-2-Adverbs" class="headerlink" title="7.2 Adverbs"></a>7.2 Adverbs</h2><h2 id="7-3-Comparatives-and-superlatives-er-st"><a href="#7-3-Comparatives-and-superlatives-er-st" class="headerlink" title="7.3 Comparatives and superlatives: -er, -st"></a>7.3 Comparatives and superlatives: <code>-er</code>, <code>-st</code></h2><ul><li>groot - groter - grootst (注意拼写 长元音drop字母)</li><li>任意长度的adj都是加这些ending（区别英文）</li><li><code>-r</code>结尾单词加<code>-der</code>/<code>-st</code><ul><li>zwaar - zwaarder</li></ul></li><li>Irregulars<ul><li>goed beter best</li><li>veel meer  meest</li><li>weinig minder minst</li><li>graag, liever, het liefst (gladly, 德语gern)<ul><li>Wij spelen graag gitaar.</li><li>Zij drinkt liever kofﬁe dan thee. (prefer)</li><li>Hij leest het liefst een boek in bed. (likes best)</li></ul></li></ul></li><li>比较级 最高级也要加<code>-e</code><ul><li>het mooiere schilderij(painting)</li><li>de oudste boom</li></ul></li><li>the superlatives as adverbs 最高级用作副词，书面不加-e，口语可加-e<ul><li>Deze pullover is het warmst(e).</li></ul></li><li>the superlatives as nouns: de/het + <code>-ste</code><ul><li>Van deze auto’s neem ik de goedkoopste (auto).</li></ul></li><li>dan = than</li><li>(net) zo …(形容词原形) als … = as… as…<ul><li>Hij zingt bijna (net) zo goed als Piet.<ul><li>bijna(almost)</li></ul></li></ul></li></ul><h1 id="8-宾格-反身代词-不定代词"><a href="#8-宾格-反身代词-不定代词" class="headerlink" title="8 宾格 反身代词 不定代词"></a>8 宾格 反身代词 不定代词</h1><p>荷语的格跟英文一样，没有德语的第三格</p><p><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h4etacdiuwj21ak0jqq57.jpg" alt=""></p><h2 id="8-3-间接宾语"><a href="#8-3-间接宾语" class="headerlink" title="8.3 间接宾语"></a>8.3 间接宾语</h2><h2 id="8-4-反身代词-Reflexive"><a href="#8-4-反身代词-Reflexive" class="headerlink" title="8.4 反身代词 Reflexive"></a>8.4 反身代词 Reflexive</h2><p><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h4ete9p5nij21b00i8wh2.jpg" alt=""></p><p>当宾语为主语自己时，需要用反身代词。</p><ul><li>grammatically reﬂexive<br>  - </li><li>exclusively reflexive<ul><li>Hij vergist zich.（He makes an error.）</li><li>有点类似英文的 betake, bethink</li></ul></li></ul><p>e.g. zich verbazen(suprize), zich verheugen op(look forward), zich vergissen(make a mistake/error), zich herinneren(remember), zich veroorloven(allow, afford)</p><ul><li>Zij verbaast zich over de mooie bloemen in het park.</li><li>Wij verheugen ons op het feest.</li><li>Hij vergiste zich in de naam.</li><li>Jullie herinneren je niets meer van die reis.</li><li>U kan zich niet veroorloven zo’n fout te maken.<h2 id="8-5-Indeﬁnite-pronouns"><a href="#8-5-Indeﬁnite-pronouns" class="headerlink" title="8.5 Indeﬁnite pronouns"></a>8.5 Indeﬁnite pronouns</h2></li><li>allen: all people</li><li>alles: everything</li><li>alle, al de: all the</li><li>allemaal</li><li><p>allebei, beide, beiden</p><ul><li></li><li>注：Beiden is only used for people:</li></ul></li><li><p>iedereen</p></li><li><p>(n)iemand: “nobody,” “anybody”</p></li><li><p>de meeste: “the most”</p></li><li>de meesten: “most of the people” (only used for people):<ul><li>Note: When you add an -en to adjectives such as blank, zwart, oud, gehandicapt, etc., you turn the adjective into a noun that has the meaning “people who are . . .”:<ul><li>De zwarten leven vreedzaam samen met de blanken in deze streek.(The black people live in peace with the white people in this area.)</li><li>Er zijn gratis parkeerplaatsen voor gehandicapten in de stad. (There are free parking spaces for the handicapped in the city.)</li></ul></li></ul></li></ul><h1 id="9-Possessive-adjectives-and-pronouns-物主代词"><a href="#9-Possessive-adjectives-and-pronouns-物主代词" class="headerlink" title="9 Possessive adjectives and pronouns 物主代词"></a>9 Possessive adjectives and pronouns 物主代词</h1><p><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/20220721200530.png" alt=""></p><h1 id="10-数字-日期-货币-度量-时间-Numbers-and-dates-currency-and-measurement-telling-the-time"><a href="#10-数字-日期-货币-度量-时间-Numbers-and-dates-currency-and-measurement-telling-the-time" class="headerlink" title="10  数字 日期 货币 度量 时间 Numbers and dates, currency and measurement, telling the time"></a>10  数字 日期 货币 度量 时间 Numbers and dates, currency and measurement, telling the time</h1><h2 id="10-1-Numbers"><a href="#10-1-Numbers" class="headerlink" title="10.1 Numbers"></a>10.1 Numbers</h2><p>Cardinal Numbers</p><ul><li>十几：<code>-tien</code>  对应 <code>-teen</code>,  <code>-zien (de.)</code></li><li>几十：<code>-tig</code> 对应 <code>-ßig\-zig</code>「特呵！」不是「刺嘻」了，30依然是<code>-tig</code></li><li>几十几：个位+<code>en</code>+十位 <code>eenentwintig</code> 对应德语 如 <code>einsundzwanzig</code></li><li>百：<code>honderd</code> 对应 <code>hunderd</code></li><li>千：<code>duizend</code> 对应 <code>tausend</code></li><li>1,000,000: één miljard</li><li>Irregular spelling for <code>veertien</code>, <code>veertig</code>, <code>dertien</code>, <code>dertig</code> , <code>tachtig</code></li><li>zeven, /z/; zeventig /s/; <code>e</code>-&gt;<code>eu [ø]</code> 发音改变，区别于negen</li><li><code>161</code>: honderdeenenzestig, <code>1003</code>: duizend drie 一百一千不加één</li><li><code>.</code>区别千位  ；<code>,</code>作为小数点<ul><li>1.333 duizend driehonderd drieëndertig</li><li>4.5 viereneenhalf; 1.5 anderhalf; 0.0 nul komma nul</li></ul></li></ul><p>Ordinal Numbers<br><img src="https://i.imgur.com/ylwWzO8.png" alt="https://i.imgur.com/ylwWzO8.png"></p><ul><li><code>-ste</code> ending: eerste; achtste</li><li><code>tweede</code>: double e spelling though in open syllable 拼写规则特例</li><li><code>1ste</code>这种缩写也有，但现在较为少见了</li></ul><h2 id="10-2-Dates"><a href="#10-2-Dates" class="headerlink" title="10.2 Dates"></a>10.2 Dates</h2><p>Days of the week:</p><ul><li>maandag, dinstag, woenstag, dondertag, vrijdag, zaterdag, zondag<br>Months (de maanden)</li><li>januari, februari, maart, april, mei, juni</li><li>juli, augusts, september, oktober, november, december</li><li>注：not capitalizied</li></ul><p>日期表示</p><ul><li>主要用Cardinal<ul><li>één januari (Jan. 1st)</li><li>vrijdag, veertien februari</li><li><strong>op</strong> zevenentwintig maart</li></ul></li><li>偶尔也用Ordinal<ul><li>Het is vandaag de achtste april.</li></ul></li><li>没有de maand 就必须用序数词了<ul><li>-Wanneer is je examen?</li><li>-Op de zevenentwintigste.</li></ul></li><li>写日期<ul><li>25 juni 1997</li><li>25-6-1997</li></ul></li></ul><p>年份</p><ul><li>before 2000: 1492 veertien (honderd) tweeënnegentig</li><li>after 2000: <ul><li>2001 tweeduizend één</li><li>2035 tweeduizend vijfendertig / twintig vijfendertig?</li></ul></li></ul><p>日期提问：</p><ul><li>Wanneer ben je geboren?</li><li>Op welke dag ben je jarig?</li><li>Welke dag is het vandaag?</li><li>In welk jaar leven we nu?</li></ul><h2 id="10-3-度量衡"><a href="#10-3-度量衡" class="headerlink" title="10.3 度量衡"></a>10.3 度量衡</h2><p>货币： 现在是欧元euro；以前弗拉芒区用belgian frank; 荷兰用gulden (gold)</p><p>度量：</p><p>Dat is dan vijftig euro samen. （<strong><em>samen</em></strong>: together)</p><p>Idiomatic:</p><ul><li>Zij zijn met z’n tweeën.</li><li>Wij zijn met ons drieën.</li><li>De hoeveelste is het vandaag?</li></ul><h2 id="10-4-时间"><a href="#10-4-时间" class="headerlink" title="10.4. 时间"></a>10.4. 时间</h2><p><img src="https://i.imgur.com/RduMnDb.png" alt=""></p><p>uur(hour); quarter(kwart)</p><p>Hoe laat is het?<br><strong><em>Het</em></strong> is ….:</p><ul><li>12.15 / kwart <strong><em>over</em></strong> twaalf </li><li>4.45 / kwart <strong><em>voor</em></strong> 5</li><li>zes uur / six o’clock</li><li>11.30 / half twaalf ⚠️ 是12点，是halfway towards 12的意思。。<br>Om (at):</li><li>Hoe laat komen jullie?</li><li>Om vijf uur. </li></ul><p>15min 以前 over +当前小时<br>15min 以后 voor half / overhalf /voor +下个小时<br>Over half:</p><ul><li>Het is vijf <strong><em>over half</em></strong> zes.  半小时-5min 到6点: 5:35</li><li>Hij gaat om tien over half tien. 9:40 半小时-10min到10点<br>Voor half:</li><li>Jij eet elke dag om vijf voor half zeven. 6.25 半小时+5min到7点 </li><li>Ik kom je om tien voor half acht halen 7.20 半小时+10min到八点<br>评价：神他妈。。。</li></ul><p>24小时制：</p><ul><li>16.00 u = 4pm, 口语一般说vier uur ’s middags.</li><li>表示精密的时间 出发时间才用24小时<ul><li>De trein vertrekt om 17.07u.(zeventien uur zeven)</li></ul></li><li>口语通常省略uur，除非是整点<ul><li>De winkel sluit om 16.30 u. (half vijf) (4:30pm)</li><li>Het feest begint om 19.00 u. (zeven uur)</li></ul></li></ul><p>介词：</p><ul><li>tegen: by<ul><li>Hij komt tegen zeven uur.</li></ul></li><li>omstreeks, rond: <ul><li>Zij vertrekt met de bus omstreeks/rond vijf over zeven. (vertrekken: to leave)</li></ul></li><li>voor: before<ul><li>Kan je voor tien uur komen?</li></ul></li><li>na: after<ul><li>Na vijf minuten viel hij in slaap.</li></ul></li></ul><p>搭配：</p><ul><li>Een uur of：around<ul><li>Hij werd wakker om een uur of half zeven.</li></ul></li><li><code>van-</code> + 时间: 今天……<ul><li>vandaag (today): Vandaag gaan wij naar de markt.</li><li>vanochtend (this morning): Vanochtend ﬂoten de vogels.</li><li>vanmiddag: Vanmiddag ga ik naar een lezing. (lezing: lecture)</li><li>vanavond: Vanavond ga je naar een concert.</li></ul></li><li><code>&#39;s ...s</code> 表示in the … / every …<ul><li>Ik lees de krant altijd ’s ochtends. (altijd: always)</li><li>We drinken ’s avonds een glas wijn.<ul><li>We drink a glass of wine in the evening.</li></ul></li><li>Zij doen ’s nachts alle deuren op slot.<ul><li>They lock all the doors at night.</li></ul></li></ul></li><li>op zaterdag = zaterdags, on Saturdays<ul><li>只有<code>’s maandags</code>, <code>’s woensdags</code> 不drop<code>&#39;s</code>，其他的礼拜日期都去掉了’s</li></ul></li><li>每一天 each day: elke dag</li><li>间隔…… every other day: om de twee dagen</li><li>每……几次 once a week: één <code>keer</code> per week<ul><li>twee keer per maand: 2 times a month</li></ul></li></ul><h1 id="11-amp-12-The-past-tense-过去式"><a href="#11-amp-12-The-past-tense-过去式" class="headerlink" title="11&amp;12 The past tense 过去式"></a>11&amp;12 The past tense 过去式</h1><p>弱变化动词不变音<br>强变化动词变音</p><h2 id="A-Weak-Verbs"><a href="#A-Weak-Verbs" class="headerlink" title="A.Weak Verbs"></a>A.Weak Verbs</h2><p>一般过去式: stem + <code>t/d</code> + e 单数(ik jij hij zij het u)/ en 复数 (wij jullie zij) </p><p>koken - k<em>oo</em>kte<br>horen - h<em>oo</em>rde</p><ul><li><code>t</code> or <code>d</code>?<ul><li><code>t</code> for voiceless consonants(t, k, f, s, ch, p)</li><li><code>d</code> for voiced consonants<ul><li>bestellen - bestelde (to order)</li><li>bouwen - bouwde (to build)</li><li>studeren - studeerde (to study) double <code>e</code></li><li>schudden - schudde </li><li>antwoorden - antwoordde</li></ul></li><li><code>-v</code>, <code>-z</code> 变为 f, s 加 <code>d</code><ul><li>leven (to live) - leefde</li><li>geloven (to believe) - geloofde</li><li>reizen (to travel)  - reisde</li><li>glanzen (to shine) - glansde</li></ul></li></ul></li></ul><p>一个有趣的注：关于兰斯塔德(Randstad)地区的g发音</p><blockquote><p>Most Dutch speakers in the Randstad area pronounce the sound spelled <code>g</code> in the same way as that spelled <code>ch</code>, which would make it seem as though a verb like leggen ought to have the ending <code>-te</code>, as does lachen. The <code>-de</code> ending, however, reﬂects the fact that for many Dutch speakers, particularly in the southern provinces and in the whole of Dutch-speaking Belgium, the sounds <code>g</code> (voiced) and <code>ch</code> (voiceless) are as sharply distinguished from one another as are v and f, or z and s.</p></blockquote><p>过去分词: <code>ge</code> + stem + <code>d/t</code></p><ul><li>不同于过去式，过去分词加<code>d/t</code>不双写（因为双写不出现在词尾）<br>praten - gepraat</li><li>发音上来说词尾<code>-d/-t</code>是相同的</li><li>be-, er-, ge-, her-, ont-, ver-. 这六个前缀的动词不加<code>ge</code><ul><li>bedanken - bedankte - bedankt</li><li>erkennen - erkende - erkend (to admit)</li><li>geloven - geloofde - geloofd (to believe)</li><li>herhalen - herhaalde - herhaald (to repeat) 双写</li><li>ontmoeten - ontmoette - ontmoet (to meet)</li><li>verklaren - verklaarde - verklaard (to explain)</li></ul></li><li><code>er-</code>只在erkennen，ervaren 两个单词出现</li><li><code>her-</code> 意思是again，herbouwen rebuild; herhalen resay; herrijzen rise again</li></ul><p>注：荷语的<code>-eren</code> 单词也要加<code>ge</code>，德语的<code>-ieren</code>单词是不加<code>ge</code>的，如studieren-studiert（而不是gestudiert）<br>荷语：noteren - genoteerd; activeren - geactiveerd; digitaliseren- gedigitaliseerd<br>德语：diskutieren - diskutiert; markieren - markiert; existieren - existiert</p><p>现在完成式：<br>(… 状语 +) hebben / zijn +宾语/状语+ 过去分词</p><ul><li>Hij heeft een huis gebouwd.</li><li>Bij de kruidenier hebben wij wat kaas besteld.</li><li>Ik heb hem vaak in de stad in de bibliotheek ontmoet.</li><li>Ik ben naar huis gewandeld. （wandelen (wandeln de.))</li></ul><h2 id="B-Strong-Verbs"><a href="#B-Strong-Verbs" class="headerlink" title="B. Strong Verbs"></a>B. Strong Verbs</h2><p>7类元音变音(umlaut, vowel changes)：<br>语言学的研究，参见 <a href="https://zhuanlan.zhihu.com/p/387221511" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/387221511</a></p><h1 id="15-The-future-未来式"><a href="#15-The-future-未来式" class="headerlink" title="15 The future 未来式"></a>15 The future 未来式</h1><h1 id="17-可分动词-Separable-Prefixes"><a href="#17-可分动词-Separable-Prefixes" class="headerlink" title="17 可分动词 Separable Prefixes"></a>17 可分动词 Separable Prefixes</h1><h1 id="Bonus-Deustch-Rechtschreibung-转写表"><a href="#Bonus-Deustch-Rechtschreibung-转写表" class="headerlink" title="Bonus:  Deustch Rechtschreibung 转写表"></a>Bonus:  Deustch Rechtschreibung 转写表</h1><p>之前看<a href="https://german.stackexchange.com/questions/28807/could-you-spell-dutch-according-to-the-german-system" target="_blank" rel="noopener">StackExchange</a>上有人尝试用德文正字法转写了荷语基础词汇，正好，我也打算维护一个荷/德/英同源词相互转写的Google Sheet，方便记忆A2/B1单词。</p><p>过段时间我会把sharesheet好好设计下，链接po在下面。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;感谢Jeremy 的提醒让我想起我还有这个博客，现在有空了就多来更新一下。&lt;/p&gt;
&lt;p&gt;这篇汇总一下荷语语法。众所周知荷兰语(&lt;em&gt;Nederlands&lt;/em&gt;)就是是弱化版的德语(&lt;em&gt;Deustch&lt;/em&gt;)，更接近于德国北部和丹麦的低地德语(_Plattde
      
    
    </summary>
    
    
      <category term="Languages" scheme="https://gitkeniwo.github.io/categories/Languages/"/>
    
    
      <category term="nederlands" scheme="https://gitkeniwo.github.io/tags/nederlands/"/>
    
      <category term="grammar" scheme="https://gitkeniwo.github.io/tags/grammar/"/>
    
  </entry>
  
  <entry>
    <title>他会回来的</title>
    <link href="https://gitkeniwo.github.io/2022-02-25-he-ll-be-back/"/>
    <id>https://gitkeniwo.github.io/2022-02-25-he-ll-be-back/</id>
    <published>2022-02-25T08:04:06.000Z</published>
    <updated>2023-01-25T13:38:44.448Z</updated>
    
    <content type="html"><![CDATA[<p>他会回来的。寒假回家，我跟家里人解释了无数次出国的理由，包括目前中国房价对十八线城市的家庭不友好，包括民主政治等一系列的问题，他们似懂非懂的接受了。等到酒桌饭局，跟别人吹壳子聊天，用陈腐的眼光来剖析我这个黑箱——十八线的人们对于目前中国东部的社会一无所知，我是他们与这个想象的同胞群体之间唯一的纽带，也就是社会网络分析中的「bridge」，之所以说是黑箱，因为他们根本不了解我在本科四年接受了多少新鲜事物，发生了多少改变——的时候，信息封锁的社会与体制施加在他们思想中的烙印又开始发烫了：「哎呀，他就是现在年轻，对西方社会充满了各种幻想——等到他自己去看了一遍，他才会知道。到时候他一定会回来的。」</p><p>尽管我的家里人相对其他朋友的家人已经算是开明——在豆瓣fiveland小组里，我见过不少友邻发言说，自己家人会以死相逼将自己留在国内——但我听到这种话的时候还会非常不舒服。不舒服，又怎样呢？不舒服罢了。你面对这庞大的体制，庞大的局域网，庞大的真理部，你是不能改变什么的。恶人依旧在高位逍遥，中国的权贵敛财运往国外，再教育自己的臣民「爱国」。而臣民自身，非常买账，因为整个十四亿人口都被严密的宣传机器灌输了利于统治的理念，黑客帝国就是我们本身。这还不够？我的内心从左派到右派，逐渐走向荒诞。因为肉身不可能抵抗炮火，生物大脑敌不过AI算法，我们只能任人宰割，统治者可以自信满满的说，他会回来的。</p><p>徐州丰县的村民认为被拐卖的妇女也是一定会回来的。百分之几的逃跑成功率，一个村同一个姓，她当然会被抓回来。对女性的剥削也逐渐拓展到所有的父权关系中，这就是传统中国社会的幽灵。普京认为乌克兰也一定是会回来的，后者就像一个被长期家暴而不敢轻举妄动的女性，在2014年小心翼翼的迈出民主化的步伐之后，又被拖回那个噩梦。普京还发表了万字长文，<strong>《论俄罗斯人和乌克兰人的历史统一》</strong>，来详细论述乌克兰为什么终将回到俄罗斯的「怀抱」。I mean, she just dont fall for you any longer. Let her go dude. Just move on. 即便她已不再爱你，你还坚信她会回来。啊对，她只是听信了别人的谗言，一定是她的朋友给她灌输了邪恶的思想。这是男女关系中harrassment的起源。台湾人，有百分之几对中国还存有幻想？</p><p>因为我们是一家人。所以你一定会回来的。HxH中，Zeno Zoldyck放Killua离开其宅邸的时候，他大笑着说Killua一定会回来，成为一个Assassin的。他那么自信。</p><p>如果我们善于类比，可以在各种各样的社会关系中找到这种信念的影子。我认为现代社会与民主化需要揭穿这层gaslighting的谎言，脱脂也就是要洗掉自己身上被遗毒的邪恶思想萌芽。让民众意识到这一点，发现这只是独裁统治者的一厢情愿，或者睁眼说瞎话。徐州事件让贵妃害怕到全网封杀，便是它已经在女性群体中掀起了不小的觉醒的波澜。我对国内事件不发表意见，进步也好，退步也好，我只关心我自家门口的一亩三分地。因为没必要参与到无聊的斗争之中。但可以的话，希望还是能把飞碟赶出地球最好。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;他会回来的。寒假回家，我跟家里人解释了无数次出国的理由，包括目前中国房价对十八线城市的家庭不友好，包括民主政治等一系列的问题，他们似懂非懂的接受了。等到酒桌饭局，跟别人吹壳子聊天，用陈腐的眼光来剖析我这个黑箱——十八线的人们对于目前中国东部的社会一无所知，我是他们与这个想象
      
    
    </summary>
    
    
      <category term="Tweets" scheme="https://gitkeniwo.github.io/categories/Tweets/"/>
    
    
      <category term="毒力撕烤" scheme="https://gitkeniwo.github.io/tags/%E6%AF%92%E5%8A%9B%E6%92%95%E7%83%A4/"/>
    
      <category term="daily" scheme="https://gitkeniwo.github.io/tags/daily/"/>
    
  </entry>
  
  <entry>
    <title>无需主题支持 在hexo博客开启Inline Math</title>
    <link href="https://gitkeniwo.github.io/2022-02-23-inline-math/"/>
    <id>https://gitkeniwo.github.io/2022-02-23-inline-math/</id>
    <published>2022-02-23T12:07:23.000Z</published>
    <updated>2023-01-25T13:28:05.849Z</updated>
    
    <content type="html"><![CDATA[<p>Let’s have a look at inline math. <script type="math/tex">2^6=64</script><br>还以为hexo用别人的主题就没办法支持Mathjax，都准备换到jekyll叻……</p><p>参考 <a href="https://www.jianshu.com/p/e8d433a2c5b7" target="_blank" rel="noopener"> 这篇post</a>.</p><p>下面原文复制过来：</p><p> <br></p><p>在 hexo 中，你会发现我们不能用 Latex 语法来书写数学公式，这对于书写学术博客来说是很大的不便，因为我们会经常碰到很多的数学公式推导，但是我们可以通过安装第三方库来解决这一问题。</p><p><strong>第一步： 使用Kramed代替 Marked</strong><br>hexo 默认的渲染引擎是 <code>marked</code>，但是 <code>marked</code> 不支持 mathjax。 <code>kramed</code> 是在 marked 的基础上进行修改。我们在工程目录下执行以下命令来安装 <code>kramed</code>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure><p>然后，更改<code>&lt;your-project-dir&gt;/node_modules/hexo-renderer-kramed/lib/renderer.js</code>，更改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; Change inline math rule</span><br><span class="line">function formatText(text) &#123;</span><br><span class="line">&#x2F;&#x2F; Fit kramed&#39;s rule: $$ + \1 + $$</span><br><span class="line">return text.replace(&#x2F;&#96;\$(.*?)\$&#96;&#x2F;g, &#39;$$$$$1$$$$&#39;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; Change inline math rule</span><br><span class="line">function formatText(text) &#123;</span><br><span class="line">return text;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>第二步: 停止使用<code>hexo-math</code>.</strong></p><p>首先，如果你已经安装 <code>hexo-math</code>, </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-math --save</span><br></pre></td></tr></table></figure><p>然后安装 <code>hexo-renderer-mathjax</code> 包：<code>npm install hexo-renderer-mathjax --save</code></p><p><strong>第三步: 更新 Mathjax 的 CDN 链接</strong></p><p>首先，打开<code>&lt;path-to-your-project&gt;/node_modules/hexo-renderer-mathjax/mathjax.html</code></p><p>然后，把<code>&lt;script&gt;</code>更改为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs&#x2F;mathjax&#x2F;2.7.1&#x2F;MathJax.js?config&#x3D;TeX-MML-AM_CHTML&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></p><p><strong>第四步: 更改默认转义规则</strong></p><p>因为 hexo 默认的转义规则会将一些字符进行转义，比如 <code>_</code> 转为 <code>&lt;em&gt;</code>, 所以我们需要对默认的规则进行修改.<br>首先， 打开<code>&lt;path-to-your-project&gt;/node_modules/kramed/lib/rules、inline.js</code>,</p><p>然后，把:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">escape: &#x2F;^\\([\\&#96;*&#123;&#125;\[\]()#$+\-.!_&gt;])&#x2F;,</span><br></pre></td></tr></table></figure><br>更改为:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">escape: &#x2F;^\\([&#96;*\[\]()# +\-.!_&gt;])&#x2F;,</span><br></pre></td></tr></table></figure><br>把<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">em: &#x2F;^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)&#x2F;,</span><br></pre></td></tr></table></figure><br>更改为:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">em: &#x2F;^\*((?:\*\*|[\s\S])+?)\*(?!\*)&#x2F;,</span><br></pre></td></tr></table></figure></p><p><strong>第五步: 开启<code>mathjax</code></strong></p><p>在主题 <code>_config.yml</code> 中开启 <code>Mathjax</code>， 找到 <code>mathjax</code> 字段添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mathjax:</span><br><span class="line">enable: true</span><br></pre></td></tr></table></figure><p>这一步可选，在博客中开启 Mathjax， 添加以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Testing Mathjax with Hexo</span><br><span class="line">category: Uncategorized</span><br><span class="line">date: 2017&#x2F;05&#x2F;03</span><br><span class="line">mathjax: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>通过以上步骤，我们就可以在 hexo 中使用 <code>Mathjax</code> 来书写数学公式。</p><p>作者：MaosongRan<br>链接：<a href="https://www.jianshu.com/p/e8d433a2c5b7" target="_blank" rel="noopener">https://www.jianshu.com/p/e8d433a2c5b7</a><br>来源：简书</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Let’s have a look at inline math. &lt;script type=&quot;math/tex&quot;&gt;2^6=64&lt;/script&gt;&lt;br&gt;还以为hexo用别人的主题就没办法支持Mathjax，都准备换到jekyll叻……&lt;/p&gt;
&lt;p&gt;参考 &lt;a href=
      
    
    </summary>
    
    
      <category term="Blogging" scheme="https://gitkeniwo.github.io/categories/Blogging/"/>
    
    
      <category term="hexo" scheme="https://gitkeniwo.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>信息過載</title>
    <link href="https://gitkeniwo.github.io/2021-12-22-info-overload/"/>
    <id>https://gitkeniwo.github.io/2021-12-22-info-overload/</id>
    <published>2021-12-22T13:30:56.000Z</published>
    <updated>2022-08-04T16:01:33.501Z</updated>
    
    <content type="html"><![CDATA[<p>幫老闆寫專著的過程常常面臨著信息過載的困境：大腦已經達到了承載新知識的極限狀態，此後再接收的任何信息都像是丟進了一個無響應的數據庫中。Why We Sleep中提過，睡眠是人腦回顧總結當天接觸到的知識的階段。睡眠分了很多個階段，每個階段有不同的加固記憶的作業，有的作用到長期記憶，有的作用到短期記憶。人一天就睡八九個小時，睡覺時消化不了的神經衝動，一覺醒來就煙消雲散了。</p><p>那麼是否現在無所不在的社群媒體消息會侵蝕掉我們每日有限的記憶存儲空間呢？拿窩自身來說，窩每天固定要刷完Pawoo和豆瓣的時間線，除此之外，還常常關心reddit、twitter、weibo、HN news、The Verge⋯⋯關心完這些還不夠，窩還有RSS，然後翻閱留學論壇尋求跑路的信息，翻閱國境線，有matters，ptt，有個大英文主流媒體，從The Guardian到The Economist，從NYT到WSJ到最近支化的SCMP，播客生活也豐富多彩，The Daily每期必聽，中文民小傳播學播客也一期不落下，給人一種濃濃的政治參與感，NPR的podcastiverse，各種推歌電台。打開油管，日常關心時事與Tech News，遊戲測評到法文街訪到德文小Tips到世界各地的Vlog⋯⋯真的是太他媽多了！！What about my work? What about my academic engagement? Now I find myself can barely learn anything. I couldn’t look through those weighty tomes of textbooks and literatures to extract crucial information that may help with my literature survey. I couldn’t remember what I learned yesterday, even after some basic review work. The unnecessary knowledge is spamming my head and my cyber life and is damn too much for me to take in. 如果不是在狂熱的網頁瀏覽中「擠出時間」來盤算一下這些信息源，我都不知道我每天花了這麼多無用功去stuff my brain with such great deals of irrelevant messages. 這些訊息擠壓掉我們原本的工作休息時間，用信息時代的宣傳伎倆gaslighting us，讓我們在另一個維度共享虛假而繁榮的「全球化」。TikTok工程師想盡辦法讓人們沈溺於機械而無限的滑屏幕習慣之中，臉書在平台上推送無意義而controversial的scum。Web 2.0背後的幻滅感也讓人灰心喪氣。</p><p>我常常自詡不屑於任何人間關係，我喜歡優美的程序與代碼，我喜歡Robot，droid，喜歡不那麼可能傷害別人的事務，人機戀很美好。又回到了經典功利主義的永恆快樂機器話題，如果不是讓人無限著迷的算法吞噬了人們用於工作和生存的時間，吞噬了人們的身體健康和常被認為是唯一wholesome的人間關係，那麼這些給人帶來高額多巴胺分泌的程序、算法、資訊，一定就是壞的嗎？碳原子骨架串成生物大分子，有機物構成了生命體，智人製造了計算機和深度學習算法。然後呢？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;幫老闆寫專著的過程常常面臨著信息過載的困境：大腦已經達到了承載新知識的極限狀態，此後再接收的任何信息都像是丟進了一個無響應的數據庫中。Why We Sleep中提過，睡眠是人腦回顧總結當天接觸到的知識的階段。睡眠分了很多個階段，每個階段有不同的加固記憶的作業，有的作用到長期
      
    
    </summary>
    
    
      <category term="Tweets" scheme="https://gitkeniwo.github.io/categories/Tweets/"/>
    
    
      <category term="daily" scheme="https://gitkeniwo.github.io/tags/daily/"/>
    
  </entry>
  
  <entry>
    <title>before_xmax_2021</title>
    <link href="https://gitkeniwo.github.io/2021-12-17-before-xmax-2021/"/>
    <id>https://gitkeniwo.github.io/2021-12-17-before-xmax-2021/</id>
    <published>2021-12-17T10:30:29.000Z</published>
    <updated>2022-08-04T16:01:33.499Z</updated>
    
    <content type="html"><![CDATA[<p>つい卒業から半年も過ぎた。またクリスマスになった。</p><p>この半年間も完成した仕事はだいぶない。留学志願の件も棚上げ。シナの政治環境も悪化しつつある。日本はおミクロン変異株のせいで再び入国中止、そのゆえ翌年に来日の計画を諦めた。未来はヨーロッパに行くかもしれんが、キチンと準備する気配も全くなさそうだ。ただこのワンルームの下宿屋でランダムなウェブページをブラウスしたりして何かのはかないきっかけを待っていたそうだ。</p><p><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/E7DAC647-9205-4F1D-953A-83C76D528274_1_105_c.jpeg" alt=""></p><p>さ、最低にいわれても、それが２０２１の年末になっちゃったよ。これからはただIELTSをちゃんと勉強して何かのヨーロッパ大学に申請しようか。ドイツ語の勉強も改めてやりしたい。学術的な論文を真面目に読みたい。アカデミックなやつになりたい。</p><p>過去は常に現実逃避のことをやったり世を拗ねた生き方をしたりしている。今からの運命はそれによってのリデンプションにしてほしい。</p><p>依舊奉行瘟疫清零政策的北京政權大概還會趁著這一波11月以來由對Omicron毒株的擔憂引發的全球大收緊繼續封關，隔離群眾，驅散民間輿論吧。兩年時間的服從性測試配合著天衣無縫的審查網路，已經造就了戰後以來最可怕的一群Jingoist分子。沒趕上黃金時代的90、00後的一生將被淹沒在當下的逆全球化浪潮之中，精神淨土不斷被buzzwords侵蝕（NFT, metaverse…），西方社會對眼前這隻極具威脅性的披著馬皮的狼綏靖和視而不見，窩對於這世界的未來沒有任何期待。</p><p>還是希望能有好一點的offer，以及一月份雅思不要繼續取消了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;つい卒業から半年も過ぎた。またクリスマスになった。&lt;/p&gt;
&lt;p&gt;この半年間も完成した仕事はだいぶない。留学志願の件も棚上げ。シナの政治環境も悪化しつつある。日本はおミクロン変異株のせいで再び入国中止、そのゆえ翌年に来日の計画を諦めた。未来はヨーロッパに行くかもしれんが、キ
      
    
    </summary>
    
    
      <category term="Tweets" scheme="https://gitkeniwo.github.io/categories/Tweets/"/>
    
    
      <category term="daily" scheme="https://gitkeniwo.github.io/tags/daily/"/>
    
      <category term="xmas" scheme="https://gitkeniwo.github.io/tags/xmas/"/>
    
  </entry>
  
  <entry>
    <title>颱風就要來了</title>
    <link href="https://gitkeniwo.github.io/2021-07-24-typhoon2021/"/>
    <id>https://gitkeniwo.github.io/2021-07-24-typhoon2021/</id>
    <published>2021-07-24T11:45:56.000Z</published>
    <updated>2022-08-04T16:01:33.502Z</updated>
    
    <content type="html"><![CDATA[<p>🌀🌀🌀</p><p><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_3368.JPG" alt=""></p><p><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/05C44E76-4ECF-44B4-AD48-FD1BBED53844-26231-00000AFC55C321DC.jpg" alt=""></p><p>從昨天開始，我就一直在做準備——購買食物和飲品，給移動電源充電，收衣服，把電動車停到樓道裡面。我一直有條不紊的準備迎接這場熱帶風暴——「<strong>煙花</strong>」，就像是一場水氣的feast，儘管一定會有人因此而失去生命，但這也是我力所不能及之處。</p><p>作為一個inland-born的四川人，這是我第一次準備迎接颱風。在浙大的前四年，颱風季也等於是一晃而過的暑假，意味著我每年都跟登陸浙江的颱風擦肩而過。唯一一次，是在19年暑假，我和L去廣東旅行，那時我們沒關心天氣——沒有關心天氣的經驗，飛機落地之後才知道香港掛起了八號風球。我還記得舉著弱不禁風的折疊傘和L在深圳福田區的寫字樓間躲雨的經歷。那時，颱風就像是被硬塞給我們的一件苦差，而現在，我就像沙漠中將死之人期盼綠洲泉水一般惦記著它，一方面，是前半個月杭州未下一滴雨的涸澤讓人對水感到興奮（忘了說了，前段時間內，我在ZJU續費了科研助理，改變了今後一年內的人生軌跡，也經歷了一次高溫下的痛苦搬家），另一方面我可以躲在結實的建築物裡面，透過玻璃窗欣賞它狂野而粗獷的美（如果能被稱作美的話）：做好準備之後再到來的颱風，就像在動物園的水晶房子裡的森林之王一樣，擁有著最原始的自然特性，卻不對我們造成傷害。</p><p>關於颱風的話題還有很多，無論是全球越來越頻繁的極端天氣，抑或是自然的不可控和人類對之的敬畏也好，我們都可以滿懷熱忱的去探索，從而消解時不時會爬上心頭的虛無之感。我最近也品嘗過了大份量的虛無感，在出租屋裡，不確定的未來，學不完的知識，疲憊的身體與靈魂，在颱風帶來充沛的水氣的同時，我的內心也逐漸被這場熱帶風暴所滋潤，我希望那桀驁不馴的氣旋能夠卷走這片土地上的暑氣和怒火，偉岸的積雨雲能洗刷掉落滿城市各個角落的灰塵。人類是這樣渺小，我憂鬱的日程表將被劃作前颱風時期和後颱風時期，基因讓我們皈依與戀自然教，又或許每個人的內心深處都是Masochistic的，就好像是一個幻想般的設定：在狂風驟雨之後，一切問題都會迎刃而解，地鐵不再擁擠，戀人們在街頭相擁。</p><p>大海對面，遲來一年的東京奧運會也在召開，遺憾的是這次我並沒有按計畫去到日本。我還要刷G，準備申請，做力扣，做題。從這個角度上說，颱風是乏味生活的調味劑。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;🌀🌀🌀&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/IMG_3368.JPG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https:/
      
    
    </summary>
    
    
      <category term="Tweets" scheme="https://gitkeniwo.github.io/categories/Tweets/"/>
    
    
      <category term="daily" scheme="https://gitkeniwo.github.io/tags/daily/"/>
    
      <category term="weather" scheme="https://gitkeniwo.github.io/tags/weather/"/>
    
  </entry>
  
  <entry>
    <title>in-the-aeroplane-over-the-sea</title>
    <link href="https://gitkeniwo.github.io/2021-06-21-in-the-aeroplane-over-the-sea/"/>
    <id>https://gitkeniwo.github.io/2021-06-21-in-the-aeroplane-over-the-sea/</id>
    <published>2021-06-21T05:48:57.000Z</published>
    <updated>2023-01-25T13:51:58.142Z</updated>
    
    <content type="html"><![CDATA[<iframe src="https://open.spotify.com/embed/album/0vVekV45lOaVKs6RZQQNob?theme=0" width="100%" height="380" frameBorder="0" allowtransparency="true" allow="encrypted-media"></iframe><iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/Wy4uOJMuBgE" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p>Neutral Milk Hotel，我最近循環了一百遍。我很久沒有聽到過這麼讓我百感交集的音樂了。Jeff Mangum，他有激情，他聲嘶力竭，胡蘿蔔花之王，雙頭男孩，共產主義女兒，每一首曲子都peculiarly marvelous. 回家之後，想重新撿起我的吉他。</p><p>Anne Frank Theory and the recent meme boom.</p><p><a href="https://www.youtube.com/watch?v=5btK93QFAk0" target="_blank" rel="noopener">https://www.youtube.com/watch?v=5btK93QFAk0</a></p><p><a href="http://theinnisherald.com/in-the-aeroplane-over-the-sea-neutral-milk-hotels-timeless-album" target="_blank" rel="noopener">http://theinnisherald.com/in-the-aeroplane-over-the-sea-neutral-milk-hotels-timeless-album</a></p><p><a href="https://www.youtube.com/watch?v=LcaN759M7MU" target="_blank" rel="noopener">https://www.youtube.com/watch?v=LcaN759M7MU</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;iframe src=&quot;https://open.spotify.com/embed/album/0vVekV45lOaVKs6RZQQNob?theme=0&quot; width=&quot;100%&quot; height=&quot;380&quot; frameBorder=&quot;0&quot; allowtransparenc
      
    
    </summary>
    
    
      <category term="Music" scheme="https://gitkeniwo.github.io/categories/Music/"/>
    
    
      <category term="indierock" scheme="https://gitkeniwo.github.io/tags/indierock/"/>
    
  </entry>
  
  <entry>
    <title>landscape-in-the-mist</title>
    <link href="https://gitkeniwo.github.io/2021-06-16-landscape-in-the-mist/"/>
    <id>https://gitkeniwo.github.io/2021-06-16-landscape-in-the-mist/</id>
    <published>2021-06-16T05:35:40.000Z</published>
    <updated>2023-01-25T13:39:52.778Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Τοπίο-στην-ομίχλη"><a href="#Τοπίο-στην-ομίχλη" class="headerlink" title="Τοπίο στην ομίχλη"></a>Τοπίο στην ομίχλη</h1><p>Landscape In the Mist</p><p>旅途或者归途。</p><p><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/Landscape.in.the.Mist.1988.720p.BluRay.FLAC.x264-HiFi-0009.png" alt=""></p><p><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/Landscape.in.the.Mist.1988.720p.BluRay.FLAC.x264-HiFi-0010.png" alt=""></p><p><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/20210616153559.png" alt=""></p><p><img src="https://github.com/gitkeniwo/image_hosting/blob/main/img/Landscape.in.the.Mist.1988.720p.BluRay.FLAC.x264-HiFi-0001.png?raw=true" alt=""></p><p><img src="https://github.com/gitkeniwo/image_hosting/blob/main/img/Landscape.in.the.Mist.1988.720p.BluRay.FLAC.x264-HiFi-0003.png?raw=true" alt=""></p><p><img src="https://github.com/gitkeniwo/image_hosting/blob/main/img/Landscape.in.the.Mist.1988.720p.BluRay.FLAC.x264-HiFi-0002.png?raw=true" alt=""></p><p><img src="https://github.com/gitkeniwo/image_hosting/blob/main/img/Landscape.in.the.Mist.1988.720p.BluRay.FLAC.x264-HiFi-0004.png?raw=true" alt=""></p><p><img src="https://github.com/gitkeniwo/image_hosting/blob/main/img/Landscape.in.the.Mist.1988.720p.BluRay.FLAC.x264-HiFi-0006.png?raw=true" alt=""></p><p><img src="https://github.com/gitkeniwo/image_hosting/blob/main/img/Landscape.in.the.Mist.1988.720p.BluRay.FLAC.x264-HiFi-0008.png?raw=true" alt=""></p><p><img src="https://raw.githubusercontent.com/gitkeniwo/image_hosting/main/img/20210616153716.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Τοπίο-στην-ομίχλη&quot;&gt;&lt;a href=&quot;#Τοπίο-στην-ομίχλη&quot; class=&quot;headerlink&quot; title=&quot;Τοπίο στην ομίχλη&quot;&gt;&lt;/a&gt;Τοπίο στην ομίχλη&lt;/h1&gt;&lt;p&gt;Landscape 
      
    
    </summary>
    
    
      <category term="Film" scheme="https://gitkeniwo.github.io/categories/Film/"/>
    
    
      <category term="director-theodoros-angelopoulos" scheme="https://gitkeniwo.github.io/tags/director-theodoros-angelopoulos/"/>
    
  </entry>
  
</feed>
